#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActivityCreateView

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function ActivityCreateView.ActivityCreateView_C.ExecuteUbergraph_ActivityCreateView
// 0x0010 (0x0010 - 0x0000)
struct ActivityCreateView_C_ExecuteUbergraph_ActivityCreateView final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PartySize;                            // 0x0004(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityCreateView_C_ExecuteUbergraph_ActivityCreateView) == 0x000008, "Wrong alignment on ActivityCreateView_C_ExecuteUbergraph_ActivityCreateView");
static_assert(sizeof(ActivityCreateView_C_ExecuteUbergraph_ActivityCreateView) == 0x000010, "Wrong size on ActivityCreateView_C_ExecuteUbergraph_ActivityCreateView");
static_assert(offsetof(ActivityCreateView_C_ExecuteUbergraph_ActivityCreateView, EntryPoint) == 0x000000, "Member 'ActivityCreateView_C_ExecuteUbergraph_ActivityCreateView::EntryPoint' has a wrong offset!");
static_assert(offsetof(ActivityCreateView_C_ExecuteUbergraph_ActivityCreateView, K2Node_Event_PartySize) == 0x000004, "Member 'ActivityCreateView_C_ExecuteUbergraph_ActivityCreateView::K2Node_Event_PartySize' has a wrong offset!");
static_assert(offsetof(ActivityCreateView_C_ExecuteUbergraph_ActivityCreateView, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'ActivityCreateView_C_ExecuteUbergraph_ActivityCreateView::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function ActivityCreateView.ActivityCreateView_C.BP_OnPartySizeChanged
// 0x0004 (0x0004 - 0x0000)
struct ActivityCreateView_C_BP_OnPartySizeChanged final
{
public:
	int32                                         PartySize;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityCreateView_C_BP_OnPartySizeChanged) == 0x000004, "Wrong alignment on ActivityCreateView_C_BP_OnPartySizeChanged");
static_assert(sizeof(ActivityCreateView_C_BP_OnPartySizeChanged) == 0x000004, "Wrong size on ActivityCreateView_C_BP_OnPartySizeChanged");
static_assert(offsetof(ActivityCreateView_C_BP_OnPartySizeChanged, PartySize) == 0x000000, "Member 'ActivityCreateView_C_BP_OnPartySizeChanged::PartySize' has a wrong offset!");

// Function ActivityCreateView.ActivityCreateView_C.RefreshDisabledState
// 0x00D0 (0x00D0 - 0x0000)
struct ActivityCreateView_C_RefreshDisabledState final
{
public:
	EFortInvalidActivityReason                    LocalInvalidActivityReason;                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortInvalidActivityReason                    Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0050(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0068(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0080(0x0018)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00A0(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortInvalidActivityReason                    CallFunc_GetInvalidActivityReason_ReturnValue;     // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityCreateView_C_RefreshDisabledState) == 0x000008, "Wrong alignment on ActivityCreateView_C_RefreshDisabledState");
static_assert(sizeof(ActivityCreateView_C_RefreshDisabledState) == 0x0000D0, "Wrong size on ActivityCreateView_C_RefreshDisabledState");
static_assert(offsetof(ActivityCreateView_C_RefreshDisabledState, LocalInvalidActivityReason) == 0x000000, "Member 'ActivityCreateView_C_RefreshDisabledState::LocalInvalidActivityReason' has a wrong offset!");
static_assert(offsetof(ActivityCreateView_C_RefreshDisabledState, Temp_byte_Variable) == 0x000001, "Member 'ActivityCreateView_C_RefreshDisabledState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ActivityCreateView_C_RefreshDisabledState, Temp_byte_Variable_1) == 0x000002, "Member 'ActivityCreateView_C_RefreshDisabledState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ActivityCreateView_C_RefreshDisabledState, Temp_byte_Variable_2) == 0x000003, "Member 'ActivityCreateView_C_RefreshDisabledState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(ActivityCreateView_C_RefreshDisabledState, Temp_text_Variable) == 0x000008, "Member 'ActivityCreateView_C_RefreshDisabledState::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(ActivityCreateView_C_RefreshDisabledState, Temp_text_Variable_1) == 0x000020, "Member 'ActivityCreateView_C_RefreshDisabledState::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(ActivityCreateView_C_RefreshDisabledState, Temp_text_Variable_2) == 0x000038, "Member 'ActivityCreateView_C_RefreshDisabledState::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(ActivityCreateView_C_RefreshDisabledState, Temp_text_Variable_3) == 0x000050, "Member 'ActivityCreateView_C_RefreshDisabledState::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(ActivityCreateView_C_RefreshDisabledState, Temp_text_Variable_4) == 0x000068, "Member 'ActivityCreateView_C_RefreshDisabledState::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(ActivityCreateView_C_RefreshDisabledState, Temp_text_Variable_5) == 0x000080, "Member 'ActivityCreateView_C_RefreshDisabledState::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(ActivityCreateView_C_RefreshDisabledState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000098, "Member 'ActivityCreateView_C_RefreshDisabledState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityCreateView_C_RefreshDisabledState, K2Node_Select_Default) == 0x0000A0, "Member 'ActivityCreateView_C_RefreshDisabledState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ActivityCreateView_C_RefreshDisabledState, Temp_bool_Variable) == 0x0000B8, "Member 'ActivityCreateView_C_RefreshDisabledState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ActivityCreateView_C_RefreshDisabledState, CallFunc_PlayAnimation_ReturnValue) == 0x0000C0, "Member 'ActivityCreateView_C_RefreshDisabledState::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityCreateView_C_RefreshDisabledState, K2Node_Select_Default_1) == 0x0000C8, "Member 'ActivityCreateView_C_RefreshDisabledState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ActivityCreateView_C_RefreshDisabledState, CallFunc_GetInvalidActivityReason_ReturnValue) == 0x0000C9, "Member 'ActivityCreateView_C_RefreshDisabledState::CallFunc_GetInvalidActivityReason_ReturnValue' has a wrong offset!");

}

