#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SmartObjectsModule

#include "Basic.hpp"

#include "AIModule_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"
#include "SmartObjectsModule_structs.hpp"


namespace SDK
{

// Class SmartObjectsModule.AITask_UseSmartObject
// 0x0040 (0x00B0 - 0x0070)
class UAITask_UseSmartObject final : public UAITask
{
public:
	TMulticastInlineDelegate<void()>              OnFinished;                                        // 0x0070(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class UAITask_MoveTo*                         MoveToTask;                                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGameplayBehavior*                      GameplayBehavior;                                  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_90[0x20];                                      // 0x0090(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAITask_UseSmartObject* UseSmartObject(class AAIController* Controller, class AActor* SmartObjectActor, class USmartObjectComponent* SmartObjectComponent, bool bLockAILogic);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AITask_UseSmartObject">();
	}
	static class UAITask_UseSmartObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAITask_UseSmartObject>();
	}
};
static_assert(alignof(UAITask_UseSmartObject) == 0x000008, "Wrong alignment on UAITask_UseSmartObject");
static_assert(sizeof(UAITask_UseSmartObject) == 0x0000B0, "Wrong size on UAITask_UseSmartObject");
static_assert(offsetof(UAITask_UseSmartObject, OnFinished) == 0x000070, "Member 'UAITask_UseSmartObject::OnFinished' has a wrong offset!");
static_assert(offsetof(UAITask_UseSmartObject, MoveToTask) == 0x000080, "Member 'UAITask_UseSmartObject::MoveToTask' has a wrong offset!");
static_assert(offsetof(UAITask_UseSmartObject, GameplayBehavior) == 0x000088, "Member 'UAITask_UseSmartObject::GameplayBehavior' has a wrong offset!");

// Class SmartObjectsModule.BTTask_FindAndUseSmartObject
// 0x0050 (0x00C0 - 0x0070)
class UBTTask_FindAndUseSmartObject final : public UBTTaskNode
{
public:
	struct FGameplayTagQuery                      ActivityRequirements;                              // 0x0070(0x0048)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                         Radius;                                            // 0x00B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BTTask_FindAndUseSmartObject">();
	}
	static class UBTTask_FindAndUseSmartObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTTask_FindAndUseSmartObject>();
	}
};
static_assert(alignof(UBTTask_FindAndUseSmartObject) == 0x000008, "Wrong alignment on UBTTask_FindAndUseSmartObject");
static_assert(sizeof(UBTTask_FindAndUseSmartObject) == 0x0000C0, "Wrong size on UBTTask_FindAndUseSmartObject");
static_assert(offsetof(UBTTask_FindAndUseSmartObject, ActivityRequirements) == 0x000070, "Member 'UBTTask_FindAndUseSmartObject::ActivityRequirements' has a wrong offset!");
static_assert(offsetof(UBTTask_FindAndUseSmartObject, Radius) == 0x0000B8, "Member 'UBTTask_FindAndUseSmartObject::Radius' has a wrong offset!");

// Class SmartObjectsModule.GenericSmartObject
// 0x0008 (0x0228 - 0x0220)
class AGenericSmartObject final : public AActor
{
public:
	class USmartObjectComponent*                  SOComponent;                                       // 0x0220(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoClear, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GenericSmartObject">();
	}
	static class AGenericSmartObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGenericSmartObject>();
	}
};
static_assert(alignof(AGenericSmartObject) == 0x000008, "Wrong alignment on AGenericSmartObject");
static_assert(sizeof(AGenericSmartObject) == 0x000228, "Wrong size on AGenericSmartObject");
static_assert(offsetof(AGenericSmartObject, SOComponent) == 0x000220, "Member 'AGenericSmartObject::SOComponent' has a wrong offset!");

// Class SmartObjectsModule.SmartObjectBlueprintFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class USmartObjectBlueprintFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static bool K2_AddLooseGameplayTags(class AActor* Actor, const struct FGameplayTagContainer& GameplayTags);
	static bool K2_RemoveLooseGameplayTags(class AActor* Actor, const struct FGameplayTagContainer& GameplayTags);
	static bool K2_SetSmartObjectEnabled(class AActor* SmartObject, const bool bEnabled);
	static bool K2_UseSmartObject(class AActor* Avatar, class AActor* SmartObject);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SmartObjectBlueprintFunctionLibrary">();
	}
	static class USmartObjectBlueprintFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmartObjectBlueprintFunctionLibrary>();
	}
};
static_assert(alignof(USmartObjectBlueprintFunctionLibrary) == 0x000008, "Wrong alignment on USmartObjectBlueprintFunctionLibrary");
static_assert(sizeof(USmartObjectBlueprintFunctionLibrary) == 0x000028, "Wrong size on USmartObjectBlueprintFunctionLibrary");

// Class SmartObjectsModule.SmartObjectCollection
// 0x0068 (0x0288 - 0x0220)
class ASmartObjectCollection final : public AActor
{
public:
	TArray<struct FSmartObjectCollectionEntry>    CollectionEntries;                                 // 0x0220(0x0010)(Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_230[0x58];                                     // 0x0230(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SmartObjectCollection">();
	}
	static class ASmartObjectCollection* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASmartObjectCollection>();
	}
};
static_assert(alignof(ASmartObjectCollection) == 0x000008, "Wrong alignment on ASmartObjectCollection");
static_assert(sizeof(ASmartObjectCollection) == 0x000288, "Wrong size on ASmartObjectCollection");
static_assert(offsetof(ASmartObjectCollection, CollectionEntries) == 0x000220, "Member 'ASmartObjectCollection::CollectionEntries' has a wrong offset!");

// Class SmartObjectsModule.SmartObjectComponent
// 0x00D0 (0x02D0 - 0x0200)
class USmartObjectComponent final : public USceneComponent
{
public:
	struct FSmartObjectConfig                     Config;                                            // 0x01F8(0x00D0)(Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FSmartObjectID                         RegisteredID;                                      // 0x02C8(0x0004)(Edit, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SmartObjectComponent">();
	}
	static class USmartObjectComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmartObjectComponent>();
	}
};
static_assert(alignof(USmartObjectComponent) == 0x000010, "Wrong alignment on USmartObjectComponent");
static_assert(sizeof(USmartObjectComponent) == 0x0002D0, "Wrong size on USmartObjectComponent");
static_assert(offsetof(USmartObjectComponent, Config) == 0x0001F8, "Member 'USmartObjectComponent::Config' has a wrong offset!");
static_assert(offsetof(USmartObjectComponent, RegisteredID) == 0x0002C8, "Member 'USmartObjectComponent::RegisteredID' has a wrong offset!");

// Class SmartObjectsModule.SmartObjectBehaviorConfigBase
// 0x0000 (0x0028 - 0x0028)
class USmartObjectBehaviorConfigBase : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SmartObjectBehaviorConfigBase">();
	}
	static class USmartObjectBehaviorConfigBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmartObjectBehaviorConfigBase>();
	}
};
static_assert(alignof(USmartObjectBehaviorConfigBase) == 0x000008, "Wrong alignment on USmartObjectBehaviorConfigBase");
static_assert(sizeof(USmartObjectBehaviorConfigBase) == 0x000028, "Wrong size on USmartObjectBehaviorConfigBase");

// Class SmartObjectsModule.SmartObjectGameplayBehaviorConfig
// 0x0008 (0x0030 - 0x0028)
class USmartObjectGameplayBehaviorConfig final : public USmartObjectBehaviorConfigBase
{
public:
	class UGameplayBehaviorConfig*                GameplayBehaviorConfig;                            // 0x0028(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SmartObjectGameplayBehaviorConfig">();
	}
	static class USmartObjectGameplayBehaviorConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmartObjectGameplayBehaviorConfig>();
	}
};
static_assert(alignof(USmartObjectGameplayBehaviorConfig) == 0x000008, "Wrong alignment on USmartObjectGameplayBehaviorConfig");
static_assert(sizeof(USmartObjectGameplayBehaviorConfig) == 0x000030, "Wrong size on USmartObjectGameplayBehaviorConfig");
static_assert(offsetof(USmartObjectGameplayBehaviorConfig, GameplayBehaviorConfig) == 0x000028, "Member 'USmartObjectGameplayBehaviorConfig::GameplayBehaviorConfig' has a wrong offset!");

// Class SmartObjectsModule.SmartObjectRenderingComponent
// 0x0000 (0x0450 - 0x0450)
class USmartObjectRenderingComponent final : public UPrimitiveComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SmartObjectRenderingComponent">();
	}
	static class USmartObjectRenderingComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmartObjectRenderingComponent>();
	}
};
static_assert(alignof(USmartObjectRenderingComponent) == 0x000010, "Wrong alignment on USmartObjectRenderingComponent");
static_assert(sizeof(USmartObjectRenderingComponent) == 0x000450, "Wrong size on USmartObjectRenderingComponent");

// Class SmartObjectsModule.SmartObjectSubsystem
// 0x0100 (0x0130 - 0x0030)
class alignas(0x10) USmartObjectSubsystem final : public UWorldSubsystem
{
public:
	class ASmartObjectCollection*                 MainCollection;                                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_38[0xF8];                                      // 0x0038(0x00F8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SmartObjectSubsystem">();
	}
	static class USmartObjectSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmartObjectSubsystem>();
	}
};
static_assert(alignof(USmartObjectSubsystem) == 0x000010, "Wrong alignment on USmartObjectSubsystem");
static_assert(sizeof(USmartObjectSubsystem) == 0x000130, "Wrong size on USmartObjectSubsystem");
static_assert(offsetof(USmartObjectSubsystem, MainCollection) == 0x000030, "Member 'USmartObjectSubsystem::MainCollection' has a wrong offset!");

}

