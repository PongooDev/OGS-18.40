#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBNO_Carried_Simulation

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass DBNO_Carried_Simulation.DBNO_Carried_Simulation_C
// 0x0A40 (0x0D00 - 0x02C0)
class UDBNO_Carried_Simulation_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_5;             // 0x02F8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_SubInput;                            // 0x0318(0x0118)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_5;             // 0x0430(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0450(0x00A0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x04F0(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x0648(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x0670(0x0158)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_4;             // 0x07C8(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_4;             // 0x07E8(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x0808(0x0028)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3;             // 0x0830(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3;             // 0x0850(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x0870(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x0898(0x0028)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x08C0(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x08E0(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0900(0x0028)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x0928(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x0948(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0968(0x0028)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0990(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x09B0(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x09D0(0x0028)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_1;                    // 0x09F8(0x00A0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0A98(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0BF0(0x0028)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x0C18(0x00A0)()
	class APlayerPawn_Athena_C*                   CarrierPawn;                                       // 0x0CB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortPlayerAnimInstance*                CarrierAnimBP;                                     // 0x0CC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LHandIKLocation;                                   // 0x0CC8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LHandIKRotation;                                   // 0x0CD4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                TempAttachLocation;                                // 0x0CE0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               TempAttachRotation;                                // 0x0CEC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EFortCustomGender                             my_gender;                                         // 0x0CF8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMale;                                            // 0x0CF9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EFortPlayerAnimBodyType                       my_animbodytype;                                   // 0x0CFA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CFB[0x1];                                      // 0x0CFB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         bodytype_int;                                      // 0x0CFC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_DBNO_Carried_Simulation(int32 EntryPoint);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DBNO_Carried_Simulation_C">();
	}
	static class UDBNO_Carried_Simulation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDBNO_Carried_Simulation_C>();
	}
};
static_assert(alignof(UDBNO_Carried_Simulation_C) == 0x000010, "Wrong alignment on UDBNO_Carried_Simulation_C");
static_assert(sizeof(UDBNO_Carried_Simulation_C) == 0x000D00, "Wrong size on UDBNO_Carried_Simulation_C");
static_assert(offsetof(UDBNO_Carried_Simulation_C, UberGraphFrame) == 0x0002C0, "Member 'UDBNO_Carried_Simulation_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_ComponentToLocalSpace_5) == 0x0002F8, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_ComponentToLocalSpace_5' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_SubInput) == 0x000318, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_SubInput' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_LocalToComponentSpace_5) == 0x000430, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_LocalToComponentSpace_5' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_BlendListByBool) == 0x000450, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_SaveCachedPose_2) == 0x0004F0, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_UseCachedPose_7) == 0x000648, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_SaveCachedPose_1) == 0x000670, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_ComponentToLocalSpace_4) == 0x0007C8, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_ComponentToLocalSpace_4' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_LocalToComponentSpace_4) == 0x0007E8, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_LocalToComponentSpace_4' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_UseCachedPose_6) == 0x000808, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_ComponentToLocalSpace_3) == 0x000830, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_ComponentToLocalSpace_3' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_LocalToComponentSpace_3) == 0x000850, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_LocalToComponentSpace_3' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_UseCachedPose_5) == 0x000870, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_UseCachedPose_4) == 0x000898, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x0008C0, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_LocalToComponentSpace_2) == 0x0008E0, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_UseCachedPose_3) == 0x000900, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x000928, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_LocalToComponentSpace_1) == 0x000948, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_UseCachedPose_2) == 0x000968, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_ComponentToLocalSpace) == 0x000990, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_LocalToComponentSpace) == 0x0009B0, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_UseCachedPose_1) == 0x0009D0, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_BlendListByInt_1) == 0x0009F8, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_BlendListByInt_1' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_SaveCachedPose) == 0x000A98, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_UseCachedPose) == 0x000BF0, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_BlendListByInt) == 0x000C18, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, CarrierPawn) == 0x000CB8, "Member 'UDBNO_Carried_Simulation_C::CarrierPawn' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, CarrierAnimBP) == 0x000CC0, "Member 'UDBNO_Carried_Simulation_C::CarrierAnimBP' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, LHandIKLocation) == 0x000CC8, "Member 'UDBNO_Carried_Simulation_C::LHandIKLocation' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, LHandIKRotation) == 0x000CD4, "Member 'UDBNO_Carried_Simulation_C::LHandIKRotation' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, TempAttachLocation) == 0x000CE0, "Member 'UDBNO_Carried_Simulation_C::TempAttachLocation' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, TempAttachRotation) == 0x000CEC, "Member 'UDBNO_Carried_Simulation_C::TempAttachRotation' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, my_gender) == 0x000CF8, "Member 'UDBNO_Carried_Simulation_C::my_gender' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, IsMale) == 0x000CF9, "Member 'UDBNO_Carried_Simulation_C::IsMale' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, my_animbodytype) == 0x000CFA, "Member 'UDBNO_Carried_Simulation_C::my_animbodytype' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, bodytype_int) == 0x000CFC, "Member 'UDBNO_Carried_Simulation_C::bodytype_int' has a wrong offset!");

}

