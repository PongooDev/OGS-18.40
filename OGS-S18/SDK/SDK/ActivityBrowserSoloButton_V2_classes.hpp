#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActivityBrowserSoloButton_V2

#include "Basic.hpp"

#include "DiscoveryBrowserUI_classes.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ActivityBrowserSoloButton_V2.ActivityBrowserSoloButton_V2_C
// 0x00C0 (0x0DB0 - 0x0CF0)
class UActivityBrowserSoloButton_V2_C final : public UFortActivityBrowserSoloButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0CF0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Pressed;                                           // 0x0CF8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hover;                                             // 0x0D00(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                ButtonMaterialBorder;                              // 0x0D08(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         ContentHB;                                         // 0x0D10(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                DynamicPaddingBorder;                              // 0x0D18(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               MinSizesSB;                                        // 0x0D20(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Button_Description;                                // 0x0D28(0x0018)(Edit, BlueprintVisible)
	float                                         TextShearX;                                        // 0x0D40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TextShearY;                                        // 0x0D44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                TextPadding;                                       // 0x0D48(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsDisabled;                                        // 0x0D58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D59[0x7];                                      // 0x0D59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     ButtonMaterial;                                    // 0x0D60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ButtonSharpnessX;                                  // 0x0D68(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ButtonSharpnessY;                                  // 0x0D6C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UseBoxScalingX;                                    // 0x0D70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UseBoxScalingY;                                    // 0x0D74(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ButtonBoxScaleSizeX;                               // 0x0D78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ButtonBoxScaleSizeY;                               // 0x0D7C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DisabledParamName;                                 // 0x0D80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SharpnessVParamName;                               // 0x0D88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SharpnessUParamName;                               // 0x0D90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   UseBoxScaleUParamName;                             // 0x0D98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   UseBoxScaleVParamName;                             // 0x0DA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideButtonBackingOnGamepad;                        // 0x0DA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShouldPlayReversed;                                // 0x0DA9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ActivityBrowserSoloButton_V2(int32 EntryPoint);
	void OnVisibilityChange(ESlateVisibility InVisibility);
	void Destruct();
	void EventOnInputMethodChanged(ECommonInputType bNewInputType);
	void BP_OnDeselected();
	void BP_OnSelected();
	void BP_OnEnabled();
	void BP_OnDisabled();
	void BP_OnClicked();
	void BP_OnUnhovered();
	void BP_OnHovered();
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void Finished_B82BD3854F3DFB44F22DA6BC8934485B();
	void SetTextStyle();
	void SetText(const class FText& Text);
	void SetButtonMaterial();
	void ResetFontMaterial();
	void ResetMaterials();
	void UpdateStylingOnInputType(ECommonInputType Index_0);
	void ApplyMobileOverrides();
	void MakeButtonBrush(class UObject* ResourceObject, struct FSlateBrush* SlateBrush);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ActivityBrowserSoloButton_V2_C">();
	}
	static class UActivityBrowserSoloButton_V2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActivityBrowserSoloButton_V2_C>();
	}
};
static_assert(alignof(UActivityBrowserSoloButton_V2_C) == 0x000008, "Wrong alignment on UActivityBrowserSoloButton_V2_C");
static_assert(sizeof(UActivityBrowserSoloButton_V2_C) == 0x000DB0, "Wrong size on UActivityBrowserSoloButton_V2_C");
static_assert(offsetof(UActivityBrowserSoloButton_V2_C, UberGraphFrame) == 0x000CF0, "Member 'UActivityBrowserSoloButton_V2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UActivityBrowserSoloButton_V2_C, Pressed) == 0x000CF8, "Member 'UActivityBrowserSoloButton_V2_C::Pressed' has a wrong offset!");
static_assert(offsetof(UActivityBrowserSoloButton_V2_C, Hover) == 0x000D00, "Member 'UActivityBrowserSoloButton_V2_C::Hover' has a wrong offset!");
static_assert(offsetof(UActivityBrowserSoloButton_V2_C, ButtonMaterialBorder) == 0x000D08, "Member 'UActivityBrowserSoloButton_V2_C::ButtonMaterialBorder' has a wrong offset!");
static_assert(offsetof(UActivityBrowserSoloButton_V2_C, ContentHB) == 0x000D10, "Member 'UActivityBrowserSoloButton_V2_C::ContentHB' has a wrong offset!");
static_assert(offsetof(UActivityBrowserSoloButton_V2_C, DynamicPaddingBorder) == 0x000D18, "Member 'UActivityBrowserSoloButton_V2_C::DynamicPaddingBorder' has a wrong offset!");
static_assert(offsetof(UActivityBrowserSoloButton_V2_C, MinSizesSB) == 0x000D20, "Member 'UActivityBrowserSoloButton_V2_C::MinSizesSB' has a wrong offset!");
static_assert(offsetof(UActivityBrowserSoloButton_V2_C, Button_Description) == 0x000D28, "Member 'UActivityBrowserSoloButton_V2_C::Button_Description' has a wrong offset!");
static_assert(offsetof(UActivityBrowserSoloButton_V2_C, TextShearX) == 0x000D40, "Member 'UActivityBrowserSoloButton_V2_C::TextShearX' has a wrong offset!");
static_assert(offsetof(UActivityBrowserSoloButton_V2_C, TextShearY) == 0x000D44, "Member 'UActivityBrowserSoloButton_V2_C::TextShearY' has a wrong offset!");
static_assert(offsetof(UActivityBrowserSoloButton_V2_C, TextPadding) == 0x000D48, "Member 'UActivityBrowserSoloButton_V2_C::TextPadding' has a wrong offset!");
static_assert(offsetof(UActivityBrowserSoloButton_V2_C, IsDisabled) == 0x000D58, "Member 'UActivityBrowserSoloButton_V2_C::IsDisabled' has a wrong offset!");
static_assert(offsetof(UActivityBrowserSoloButton_V2_C, ButtonMaterial) == 0x000D60, "Member 'UActivityBrowserSoloButton_V2_C::ButtonMaterial' has a wrong offset!");
static_assert(offsetof(UActivityBrowserSoloButton_V2_C, ButtonSharpnessX) == 0x000D68, "Member 'UActivityBrowserSoloButton_V2_C::ButtonSharpnessX' has a wrong offset!");
static_assert(offsetof(UActivityBrowserSoloButton_V2_C, ButtonSharpnessY) == 0x000D6C, "Member 'UActivityBrowserSoloButton_V2_C::ButtonSharpnessY' has a wrong offset!");
static_assert(offsetof(UActivityBrowserSoloButton_V2_C, UseBoxScalingX) == 0x000D70, "Member 'UActivityBrowserSoloButton_V2_C::UseBoxScalingX' has a wrong offset!");
static_assert(offsetof(UActivityBrowserSoloButton_V2_C, UseBoxScalingY) == 0x000D74, "Member 'UActivityBrowserSoloButton_V2_C::UseBoxScalingY' has a wrong offset!");
static_assert(offsetof(UActivityBrowserSoloButton_V2_C, ButtonBoxScaleSizeX) == 0x000D78, "Member 'UActivityBrowserSoloButton_V2_C::ButtonBoxScaleSizeX' has a wrong offset!");
static_assert(offsetof(UActivityBrowserSoloButton_V2_C, ButtonBoxScaleSizeY) == 0x000D7C, "Member 'UActivityBrowserSoloButton_V2_C::ButtonBoxScaleSizeY' has a wrong offset!");
static_assert(offsetof(UActivityBrowserSoloButton_V2_C, DisabledParamName) == 0x000D80, "Member 'UActivityBrowserSoloButton_V2_C::DisabledParamName' has a wrong offset!");
static_assert(offsetof(UActivityBrowserSoloButton_V2_C, SharpnessVParamName) == 0x000D88, "Member 'UActivityBrowserSoloButton_V2_C::SharpnessVParamName' has a wrong offset!");
static_assert(offsetof(UActivityBrowserSoloButton_V2_C, SharpnessUParamName) == 0x000D90, "Member 'UActivityBrowserSoloButton_V2_C::SharpnessUParamName' has a wrong offset!");
static_assert(offsetof(UActivityBrowserSoloButton_V2_C, UseBoxScaleUParamName) == 0x000D98, "Member 'UActivityBrowserSoloButton_V2_C::UseBoxScaleUParamName' has a wrong offset!");
static_assert(offsetof(UActivityBrowserSoloButton_V2_C, UseBoxScaleVParamName) == 0x000DA0, "Member 'UActivityBrowserSoloButton_V2_C::UseBoxScaleVParamName' has a wrong offset!");
static_assert(offsetof(UActivityBrowserSoloButton_V2_C, HideButtonBackingOnGamepad) == 0x000DA8, "Member 'UActivityBrowserSoloButton_V2_C::HideButtonBackingOnGamepad' has a wrong offset!");
static_assert(offsetof(UActivityBrowserSoloButton_V2_C, ShouldPlayReversed) == 0x000DA9, "Member 'UActivityBrowserSoloButton_V2_C::ShouldPlayReversed' has a wrong offset!");

}

