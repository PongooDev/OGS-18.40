#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortEmotePicker

#include "Basic.hpp"


namespace SDK::Params
{

// Function FortEmotePicker.FortEmotePicker_C.BP_PageChanged
// 0x0004 (0x0004 - 0x0000)
struct FortEmotePicker_C_BP_PageChanged final
{
public:
	int32                                         Direction;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortEmotePicker_C_BP_PageChanged) == 0x000004, "Wrong alignment on FortEmotePicker_C_BP_PageChanged");
static_assert(sizeof(FortEmotePicker_C_BP_PageChanged) == 0x000004, "Wrong size on FortEmotePicker_C_BP_PageChanged");
static_assert(offsetof(FortEmotePicker_C_BP_PageChanged, Direction) == 0x000000, "Member 'FortEmotePicker_C_BP_PageChanged::Direction' has a wrong offset!");

// Function FortEmotePicker.FortEmotePicker_C.BP_CategoryChanged
// 0x0004 (0x0004 - 0x0000)
struct FortEmotePicker_C_BP_CategoryChanged final
{
public:
	int32                                         Direction;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortEmotePicker_C_BP_CategoryChanged) == 0x000004, "Wrong alignment on FortEmotePicker_C_BP_CategoryChanged");
static_assert(sizeof(FortEmotePicker_C_BP_CategoryChanged) == 0x000004, "Wrong size on FortEmotePicker_C_BP_CategoryChanged");
static_assert(offsetof(FortEmotePicker_C_BP_CategoryChanged, Direction) == 0x000000, "Member 'FortEmotePicker_C_BP_CategoryChanged::Direction' has a wrong offset!");

// Function FortEmotePicker.FortEmotePicker_C.ExecuteUbergraph_FortEmotePicker
// 0x0040 (0x0040 - 0x0000)
struct FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Direction_1;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Direction;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default_1;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker) == 0x000008, "Wrong alignment on FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker");
static_assert(sizeof(FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker) == 0x000040, "Wrong size on FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker");
static_assert(offsetof(FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker, EntryPoint) == 0x000000, "Member 'FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker::EntryPoint' has a wrong offset!");
static_assert(offsetof(FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker, Temp_bool_Variable) == 0x000004, "Member 'FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker, Temp_bool_Variable_1) == 0x000005, "Member 'FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker, K2Node_Event_Direction_1) == 0x000010, "Member 'FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker::K2Node_Event_Direction_1' has a wrong offset!");
static_assert(offsetof(FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker, K2Node_Event_Direction) == 0x000014, "Member 'FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker::K2Node_Event_Direction' has a wrong offset!");
static_assert(offsetof(FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000019, "Member 'FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker, K2Node_Select_Default) == 0x000020, "Member 'FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker, CallFunc_PlayAnimation_ReturnValue_1) == 0x000028, "Member 'FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker, K2Node_Select_Default_1) == 0x000030, "Member 'FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker, CallFunc_PlayAnimation_ReturnValue_2) == 0x000038, "Member 'FortEmotePicker_C_ExecuteUbergraph_FortEmotePicker::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");

}

