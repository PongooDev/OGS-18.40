#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Chest_Athena_SidewaysChest_Super

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Tiered_Chest_Athena_Parent_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Chest_Athena_SidewaysChest_Super.B_Chest_Athena_SidewaysChest_Super_C
// 0x0050 (0x0FE8 - 0x0F98)
class AB_Chest_Athena_SidewaysChest_Super_C final : public ATiered_Chest_Athena_Parent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_B_Chest_Athena_SidewaysChest_Super_C; // 0x0F98(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Chest_Open_Sound;                                  // 0x0FA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Chest_Opened;                                   // 0x0FA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Loot_Chest_Aura;                                // 0x0FB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Chest_MID;                                         // 0x0FB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DynamicSpawn;                                      // 0x0FC0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_FC1[0x7];                                      // 0x0FC1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingGameplayActor*                 CoreReference;                                     // 0x0FC8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         DelayForFadingOut;                                 // 0x0FD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FadedIn;                                           // 0x0FD4(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD5[0x3];                                      // 0x0FD5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     ChestMaterial;                                     // 0x0FD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     ChestFadeMaterial;                                 // 0x0FE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_Chest_Athena_SidewaysChest_Super(int32 EntryPoint);
	void DestroyDynamicChest();
	void SidewaysFadeOut(const struct FVector& CoreLocation);
	void ReceiveBeginPlay();
	void SidewaysFadeBegin(const struct FVector& CoreLocation);
	void HideChestOpenableCosmetics();
	void GetLockMesh(class UChildActorComponent* Lock, class UStaticMeshComponent** LockMesh);
	void SetMeshAndMatVars();
	void FadeMaterial(class UMaterialInstanceDynamic* Mid, float ReverseFade);
	void CreateFadeMIDs();
	void ApplyMaterials(class UMaterialInterface* ChestMaterial_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Chest_Athena_SidewaysChest_Super_C">();
	}
	static class AB_Chest_Athena_SidewaysChest_Super_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Chest_Athena_SidewaysChest_Super_C>();
	}
};
static_assert(alignof(AB_Chest_Athena_SidewaysChest_Super_C) == 0x000008, "Wrong alignment on AB_Chest_Athena_SidewaysChest_Super_C");
static_assert(sizeof(AB_Chest_Athena_SidewaysChest_Super_C) == 0x000FE8, "Wrong size on AB_Chest_Athena_SidewaysChest_Super_C");
static_assert(offsetof(AB_Chest_Athena_SidewaysChest_Super_C, UberGraphFrame_B_Chest_Athena_SidewaysChest_Super_C) == 0x000F98, "Member 'AB_Chest_Athena_SidewaysChest_Super_C::UberGraphFrame_B_Chest_Athena_SidewaysChest_Super_C' has a wrong offset!");
static_assert(offsetof(AB_Chest_Athena_SidewaysChest_Super_C, Chest_Open_Sound) == 0x000FA0, "Member 'AB_Chest_Athena_SidewaysChest_Super_C::Chest_Open_Sound' has a wrong offset!");
static_assert(offsetof(AB_Chest_Athena_SidewaysChest_Super_C, NS_Chest_Opened) == 0x000FA8, "Member 'AB_Chest_Athena_SidewaysChest_Super_C::NS_Chest_Opened' has a wrong offset!");
static_assert(offsetof(AB_Chest_Athena_SidewaysChest_Super_C, NS_Loot_Chest_Aura) == 0x000FB0, "Member 'AB_Chest_Athena_SidewaysChest_Super_C::NS_Loot_Chest_Aura' has a wrong offset!");
static_assert(offsetof(AB_Chest_Athena_SidewaysChest_Super_C, Chest_MID) == 0x000FB8, "Member 'AB_Chest_Athena_SidewaysChest_Super_C::Chest_MID' has a wrong offset!");
static_assert(offsetof(AB_Chest_Athena_SidewaysChest_Super_C, DynamicSpawn) == 0x000FC0, "Member 'AB_Chest_Athena_SidewaysChest_Super_C::DynamicSpawn' has a wrong offset!");
static_assert(offsetof(AB_Chest_Athena_SidewaysChest_Super_C, CoreReference) == 0x000FC8, "Member 'AB_Chest_Athena_SidewaysChest_Super_C::CoreReference' has a wrong offset!");
static_assert(offsetof(AB_Chest_Athena_SidewaysChest_Super_C, DelayForFadingOut) == 0x000FD0, "Member 'AB_Chest_Athena_SidewaysChest_Super_C::DelayForFadingOut' has a wrong offset!");
static_assert(offsetof(AB_Chest_Athena_SidewaysChest_Super_C, FadedIn) == 0x000FD4, "Member 'AB_Chest_Athena_SidewaysChest_Super_C::FadedIn' has a wrong offset!");
static_assert(offsetof(AB_Chest_Athena_SidewaysChest_Super_C, ChestMaterial) == 0x000FD8, "Member 'AB_Chest_Athena_SidewaysChest_Super_C::ChestMaterial' has a wrong offset!");
static_assert(offsetof(AB_Chest_Athena_SidewaysChest_Super_C, ChestFadeMaterial) == 0x000FE0, "Member 'AB_Chest_Athena_SidewaysChest_Super_C::ChestFadeMaterial' has a wrong offset!");

}

