#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Coconut_Master

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Coconut_Master.BP_Coconut_Master_C
// 0x0198 (0x03B8 - 0x0220)
class ABP_Coconut_Master_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         SpawnDebrisTimeline_NewTrack_0_1DA884D14E1D5240860440B342381A4D; // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            SpawnDebrisTimeline__Direction_1DA884D14E1D5240860440B342381A4D; // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     SpawnDebrisTimeline;                               // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    CameraSequence;                                    // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Coconut_IdleGameplay_C*             PlayerRaft;                                        // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CalendarEvent;                                     // 0x0250(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FTimespan                              CurrentTimeSpanDebris;                             // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         TimeSpanRatioDebris;                               // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Coconut_DebrisManager_C*            DebrisBP;                                          // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFloatRange>                    TimeSpanRangeSpecial;                              // 0x0278(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	float                                         HourDelay;                                         // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFloatRange                            StartDelay;                                        // 0x028C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CurrentTimeSpanCamera;                             // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         TimeSpanRatioCamera;                               // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              Time_Until_End;                                    // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         TimeUntilEndCamera;                                // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastUpperBoundSpecial;                             // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastUpperBoundGeneric;                             // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFloatRange>                    TimeSpanRangeGeneric;                              // 0x02C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TSoftObjectPtr<class ADirectionalLight>       FrontendDirectionalLight;                          // 0x02D8(0x0028)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TSoftObjectPtr<class AExponentialHeightFog>   FrontendFog;                                       // 0x0300(0x0028)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TSoftObjectPtr<class ASkyLight>               FrontendSkylight;                                  // 0x0328(0x0028)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TSoftObjectPtr<class ASkyLight>               FrontendSkylightMobile;                            // 0x0350(0x0028)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	float                                         DebrisSpeedCheat;                                  // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFloatRange                            TimeSpanRangeShark;                                // 0x037C(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastUpperBoundShark;                               // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CoconutShark_C*                     BP_CoconutShark;                                   // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class AActor>>          FrontendLights;                                    // 0x0398(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TMulticastInlineDelegate<void()>              ChangeAudioParameter;                              // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_BP_Coconut_Master(int32 EntryPoint);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ListenForTimedEventShark();
	void ListenForTimedEventGeneric();
	void UpdateInNightNight();
	void RequeryCamera();
	void UpdateCameraPosition();
	void BindToCalendarEventCamera();
	void ListenForTimedEventSpecialDebris();
	void RequeryDebris();
	void BindToCalendarEventDebris();
	void FrontendActivePlayCameraSequence();
	void ReceiveBeginPlay();
	void UpdateDebrisSpeed();
	void SpawnAllDebrisInTier(int32 Index_0);
	void HandleSpawnFloater();
	void AdvanceTime(float TimeSpanRate, float DebrisSpeed);
	void PauseSequence();
	void SetCameraSpeedAndPlay(float Speed);
	void SetDay(int32 NewParam);
	void OnEventActive_EA7707334E6F874564187CAC590C0C41(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void OnEventUpdated_EA7707334E6F874564187CAC590C0C41(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void OnEventEnded_EA7707334E6F874564187CAC590C0C41(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void OnEventActive_09C107E94E564EC921C56B982551C978(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void OnEventUpdated_09C107E94E564EC921C56B982551C978(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void OnEventEnded_09C107E94E564EC921C56B982551C978(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void SpawnDebrisTimeline__UpdateFunc();
	void SpawnDebrisTimeline__FinishedFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Coconut_Master_C">();
	}
	static class ABP_Coconut_Master_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Coconut_Master_C>();
	}
};
static_assert(alignof(ABP_Coconut_Master_C) == 0x000008, "Wrong alignment on ABP_Coconut_Master_C");
static_assert(sizeof(ABP_Coconut_Master_C) == 0x0003B8, "Wrong size on ABP_Coconut_Master_C");
static_assert(offsetof(ABP_Coconut_Master_C, UberGraphFrame) == 0x000220, "Member 'ABP_Coconut_Master_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, DefaultSceneRoot) == 0x000228, "Member 'ABP_Coconut_Master_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, SpawnDebrisTimeline_NewTrack_0_1DA884D14E1D5240860440B342381A4D) == 0x000230, "Member 'ABP_Coconut_Master_C::SpawnDebrisTimeline_NewTrack_0_1DA884D14E1D5240860440B342381A4D' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, SpawnDebrisTimeline__Direction_1DA884D14E1D5240860440B342381A4D) == 0x000234, "Member 'ABP_Coconut_Master_C::SpawnDebrisTimeline__Direction_1DA884D14E1D5240860440B342381A4D' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, SpawnDebrisTimeline) == 0x000238, "Member 'ABP_Coconut_Master_C::SpawnDebrisTimeline' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, CameraSequence) == 0x000240, "Member 'ABP_Coconut_Master_C::CameraSequence' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, PlayerRaft) == 0x000248, "Member 'ABP_Coconut_Master_C::PlayerRaft' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, CalendarEvent) == 0x000250, "Member 'ABP_Coconut_Master_C::CalendarEvent' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, CurrentTimeSpanDebris) == 0x000260, "Member 'ABP_Coconut_Master_C::CurrentTimeSpanDebris' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, TimeSpanRatioDebris) == 0x000268, "Member 'ABP_Coconut_Master_C::TimeSpanRatioDebris' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, DebrisBP) == 0x000270, "Member 'ABP_Coconut_Master_C::DebrisBP' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, TimeSpanRangeSpecial) == 0x000278, "Member 'ABP_Coconut_Master_C::TimeSpanRangeSpecial' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, HourDelay) == 0x000288, "Member 'ABP_Coconut_Master_C::HourDelay' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, StartDelay) == 0x00028C, "Member 'ABP_Coconut_Master_C::StartDelay' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, CurrentTimeSpanCamera) == 0x0002A0, "Member 'ABP_Coconut_Master_C::CurrentTimeSpanCamera' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, TimeSpanRatioCamera) == 0x0002A8, "Member 'ABP_Coconut_Master_C::TimeSpanRatioCamera' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, Time_Until_End) == 0x0002B0, "Member 'ABP_Coconut_Master_C::Time_Until_End' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, TimeUntilEndCamera) == 0x0002B8, "Member 'ABP_Coconut_Master_C::TimeUntilEndCamera' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, LastUpperBoundSpecial) == 0x0002BC, "Member 'ABP_Coconut_Master_C::LastUpperBoundSpecial' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, LastUpperBoundGeneric) == 0x0002C0, "Member 'ABP_Coconut_Master_C::LastUpperBoundGeneric' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, TimeSpanRangeGeneric) == 0x0002C8, "Member 'ABP_Coconut_Master_C::TimeSpanRangeGeneric' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, FrontendDirectionalLight) == 0x0002D8, "Member 'ABP_Coconut_Master_C::FrontendDirectionalLight' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, FrontendFog) == 0x000300, "Member 'ABP_Coconut_Master_C::FrontendFog' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, FrontendSkylight) == 0x000328, "Member 'ABP_Coconut_Master_C::FrontendSkylight' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, FrontendSkylightMobile) == 0x000350, "Member 'ABP_Coconut_Master_C::FrontendSkylightMobile' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, DebrisSpeedCheat) == 0x000378, "Member 'ABP_Coconut_Master_C::DebrisSpeedCheat' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, TimeSpanRangeShark) == 0x00037C, "Member 'ABP_Coconut_Master_C::TimeSpanRangeShark' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, LastUpperBoundShark) == 0x00038C, "Member 'ABP_Coconut_Master_C::LastUpperBoundShark' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, BP_CoconutShark) == 0x000390, "Member 'ABP_Coconut_Master_C::BP_CoconutShark' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, FrontendLights) == 0x000398, "Member 'ABP_Coconut_Master_C::FrontendLights' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_Master_C, ChangeAudioParameter) == 0x0003A8, "Member 'ABP_Coconut_Master_C::ChangeAudioParameter' has a wrong offset!");

}

