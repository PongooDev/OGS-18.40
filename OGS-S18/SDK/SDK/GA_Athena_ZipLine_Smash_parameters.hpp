#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_ZipLine_Smash

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.ExecuteUbergraph_GA_Athena_ZipLine_Smash
// 0x05C8 (0x05C8 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> CallFunc_GetVehicleUInterface_ReturnValue;         // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0048(0x00B0)(ConstParm)
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x00F8(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortAthenaZipline*                     K2Node_DynamicCast_AsFort_Athena_Zipline;          // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18A[0x6];                                      // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x01B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1; // 0x01B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsZiplining_1;                 // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bIsZiplining)>            K2Node_CreateDelegate_OutputDelegate_1;            // 0x01C4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool bIsZiplining)>            K2Node_CreateDelegate_OutputDelegate_2;            // 0x01D4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool bIsZiplining)>            K2Node_CreateDelegate_OutputDelegate_3;            // 0x01E4(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FHitResult& Hit)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x020C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x021C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x022C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x023C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            K2Node_DynamicCast_AsCharacter_Movement_Component; // 0x0258(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_262[0x6];                                      // 0x0262(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue_1;       // 0x0268(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterMovementComponent*            K2Node_DynamicCast_AsCharacter_Movement_Component_1; // 0x0278(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x0283(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0285(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0286(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_287[0x1];                                      // 0x0287(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x0288(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x02A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FHitResult& Hit)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x02A8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x02B8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x02C8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_12;           // 0x02D8(0x0010)(ZeroConstructor, NoDestructor)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller_1;     // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayTagAdded*      CallFunc_WaitGameplayTagAdd_ReturnValue;           // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_CustomEvent_FortPlayerPawn;                 // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayTagRemoved*    CallFunc_WaitGameplayTagRemove_ReturnValue;        // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0320(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsZiplining;                   // 0x0332(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_333[0x1];                                      // 0x0333(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_13;           // 0x0334(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0348(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bIsZiplining)>            K2Node_CreateDelegate_OutputDelegate_14;           // 0x0350(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_Athena_Environmental_ZipLine_Spline_C* K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline; // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x3];                                      // 0x0369(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Athena_Environmental_ZipLine_Spline_C* K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline_1; // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379[0x3];                                      // 0x0379(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0380(0x00B0)()
	TDelegate<void(bool bIsZiplining)>            K2Node_CreateDelegate_OutputDelegate_15;           // 0x0430(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0442(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_443[0x1];                                      // 0x0443(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_16;           // 0x0444(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0458(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue_1;      // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0462(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_463[0x1];                                      // 0x0463(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_17;           // 0x0464(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_475[0x3];                                      // 0x0475(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AFortPlayerPawn* FortPlayerPawn)> K2Node_CreateDelegate_OutputDelegate_18;           // 0x0478(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_Event_OverlapActors;                        // 0x0490(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_19;           // 0x04A0(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BC[0x4];                                      // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingActor*                         K2Node_DynamicCast_AsBuilding_Actor;               // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CA[0x6];                                      // 0x04CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       CallFunc_AbilityTargetDataFromActor_ReturnValue;   // 0x04D0(0x0028)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_2; // 0x04F8(0x0010)(ReferenceParm)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0508(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_519[0x7];                                      // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAthenaSupplyDropBalloon*           K2Node_DynamicCast_AsFort_Athena_Supply_Drop_Balloon; // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0529(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52A[0x6];                                      // 0x052A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHeldObjectComponent*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0530(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0539(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53A[0x6];                                      // 0x053A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn_1;           // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_549[0x7];                                      // 0x0549(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_3;        // 0x0550(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)> K2Node_CreateDelegate_OutputDelegate_20;           // 0x0558(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_574[0x4];                                      // 0x0574(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_CustomEvent_InstigatedBy;                   // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation;                    // 0x0588(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_594[0x4];                                      // 0x0594(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_FHitComponent;                  // 0x0598(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName;                       // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Momentum;                       // 0x05A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)> K2Node_CreateDelegate_OutputDelegate_21;           // 0x05B4(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash) == 0x000008, "Wrong alignment on GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash) == 0x0005C8, "Wrong size on GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, EntryPoint) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_GetVehicleUInterface_ReturnValue) == 0x000020, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_GetVehicleUInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_IsValid_ReturnValue_2) == 0x000030, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000038, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_IsValid_ReturnValue_3) == 0x000040, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_Event_EventData) == 0x000048, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_Hit) == 0x0000F8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_AsFort_Athena_Zipline) == 0x000180, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_AsFort_Athena_Zipline' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_bSuccess) == 0x000188, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000189, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000190, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000198, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_bSuccess_1) == 0x0001A0, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x0001A8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x0001B0, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1) == 0x0001B8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_bIsZiplining_1) == 0x0001C0, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_bIsZiplining_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001C4, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001D4, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_3) == 0x0001E4, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, Temp_int_Array_Index_Variable) == 0x0001F4, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_GetController_ReturnValue) == 0x0001F8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000200, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_bSuccess_2) == 0x000208, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_4) == 0x00020C, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_5) == 0x00021C, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_6) == 0x00022C, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_7) == 0x00023C, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_GetMovementComponent_ReturnValue) == 0x000250, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_AsCharacter_Movement_Component) == 0x000258, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_AsCharacter_Movement_Component' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_bSuccess_3) == 0x000260, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_GetValidValue_ReturnValue) == 0x000261, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_GetMovementComponent_ReturnValue_1) == 0x000268, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_GetMovementComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000270, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_AsCharacter_Movement_Component_1) == 0x000278, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_AsCharacter_Movement_Component_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_bSuccess_4) == 0x000280, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000281, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_BooleanOR_ReturnValue) == 0x000282, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_GetValidValue_ReturnValue_1) == 0x000283, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_Not_PreBool_ReturnValue) == 0x000284, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000285, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000286, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_8) == 0x000288, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_BooleanOR_ReturnValue_1) == 0x000298, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0002A0, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_9) == 0x0002A8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_10) == 0x0002B8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_11) == 0x0002C8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_12) == 0x0002D8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_GetController_ReturnValue_1) == 0x0002E8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_AsFort_Player_Controller_1) == 0x0002F0, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_AsFort_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_bSuccess_5) == 0x0002F8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_WaitGameplayTagAdd_ReturnValue) == 0x000300, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_WaitGameplayTagAdd_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_FortPlayerPawn) == 0x000308, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_FortPlayerPawn' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_IsValid_ReturnValue_4) == 0x000310, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_WaitGameplayTagRemove_ReturnValue) == 0x000318, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_WaitGameplayTagRemove_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000320, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000330, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_IsValid_ReturnValue_5) == 0x000331, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_bIsZiplining) == 0x000332, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_bIsZiplining' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_13) == 0x000334, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000348, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_14) == 0x000350, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline) == 0x000360, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_bSuccess_6) == 0x000368, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, Temp_int_Loop_Counter_Variable) == 0x00036C, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline_1) == 0x000370, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_bSuccess_7) == 0x000378, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_Add_IntInt_ReturnValue) == 0x00037C, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_MakeStruct_GameplayEventData) == 0x000380, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_15) == 0x000430, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_Event_bWasCancelled) == 0x000440, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_IsValid_ReturnValue_6) == 0x000441, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000442, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_16) == 0x000444, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000458, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_K2_IsValidTimerHandle_ReturnValue_1) == 0x000460, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_K2_IsValidTimerHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_IsValid_ReturnValue_7) == 0x000461, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_IsValid_ReturnValue_8) == 0x000462, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_17) == 0x000464, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_IsValid_ReturnValue_9) == 0x000474, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_18) == 0x000478, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_IsDedicatedServer_ReturnValue) == 0x000488, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_Event_OverlapActors) == 0x000490, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_Event_OverlapActors' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_19) == 0x0004A0, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_Array_Get_Item) == 0x0004B0, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_Array_Length_ReturnValue) == 0x0004B8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_AsBuilding_Actor) == 0x0004C0, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_AsBuilding_Actor' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_bSuccess_8) == 0x0004C8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_Less_IntInt_ReturnValue) == 0x0004C9, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_AbilityTargetDataFromActor_ReturnValue) == 0x0004D0, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_AbilityTargetDataFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_2) == 0x0004F8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000508, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000518, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_AsFort_Athena_Supply_Drop_Balloon) == 0x000520, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_AsFort_Athena_Supply_Drop_Balloon' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_bSuccess_9) == 0x000528, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_Not_PreBool_ReturnValue_1) == 0x000529, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_GetComponentByClass_ReturnValue) == 0x000530, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_BooleanAND_ReturnValue) == 0x000538, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_IsValid_ReturnValue_10) == 0x000539, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_AsFort_Player_Pawn_1) == 0x000540, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_AsFort_Player_Pawn_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_bSuccess_10) == 0x000548, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_K2_SetTimerDelegate_ReturnValue_3) == 0x000550, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_K2_SetTimerDelegate_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_20) == 0x000558, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_DamagedActor) == 0x000568, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_Damage) == 0x000570, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_InstigatedBy) == 0x000578, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_InstigatedBy' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_DamageCauser) == 0x000580, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_HitLocation) == 0x000588, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_HitLocation' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_FHitComponent) == 0x000598, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_FHitComponent' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_BoneName) == 0x0005A0, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_BoneName' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_Momentum) == 0x0005A8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_Momentum' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_21) == 0x0005B4, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.OnPawnDied
// 0x0050 (0x0050 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_OnPawnDied final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    FHitComponent;                                     // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Momentum;                                          // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_OnPawnDied) == 0x000008, "Wrong alignment on GA_Athena_ZipLine_Smash_C_OnPawnDied");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_OnPawnDied) == 0x000050, "Wrong size on GA_Athena_ZipLine_Smash_C_OnPawnDied");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_OnPawnDied, DamagedActor) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_OnPawnDied::DamagedActor' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_OnPawnDied, Damage) == 0x000008, "Member 'GA_Athena_ZipLine_Smash_C_OnPawnDied::Damage' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_OnPawnDied, InstigatedBy) == 0x000010, "Member 'GA_Athena_ZipLine_Smash_C_OnPawnDied::InstigatedBy' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_OnPawnDied, DamageCauser) == 0x000018, "Member 'GA_Athena_ZipLine_Smash_C_OnPawnDied::DamageCauser' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_OnPawnDied, HitLocation) == 0x000020, "Member 'GA_Athena_ZipLine_Smash_C_OnPawnDied::HitLocation' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_OnPawnDied, FHitComponent) == 0x000030, "Member 'GA_Athena_ZipLine_Smash_C_OnPawnDied::FHitComponent' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_OnPawnDied, BoneName) == 0x000038, "Member 'GA_Athena_ZipLine_Smash_C_OnPawnDied::BoneName' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_OnPawnDied, Momentum) == 0x000040, "Member 'GA_Athena_ZipLine_Smash_C_OnPawnDied::Momentum' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.EndAsyncBreakNearbyStructuresOverlap
// 0x0010 (0x0010 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_EndAsyncBreakNearbyStructuresOverlap final
{
public:
	TArray<class AActor*>                         OverlapActors;                                     // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_EndAsyncBreakNearbyStructuresOverlap) == 0x000008, "Wrong alignment on GA_Athena_ZipLine_Smash_C_EndAsyncBreakNearbyStructuresOverlap");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_EndAsyncBreakNearbyStructuresOverlap) == 0x000010, "Wrong size on GA_Athena_ZipLine_Smash_C_EndAsyncBreakNearbyStructuresOverlap");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_EndAsyncBreakNearbyStructuresOverlap, OverlapActors) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_EndAsyncBreakNearbyStructuresOverlap::OverlapActors' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Athena_ZipLine_Smash_C_K2_OnEndAbility");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Athena_ZipLine_Smash_C_K2_OnEndAbility");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.HandleClientSplineZiplineStateChanged
// 0x0001 (0x0001 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_HandleClientSplineZiplineStateChanged final
{
public:
	bool                                          bIsZiplining;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_HandleClientSplineZiplineStateChanged) == 0x000001, "Wrong alignment on GA_Athena_ZipLine_Smash_C_HandleClientSplineZiplineStateChanged");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_HandleClientSplineZiplineStateChanged) == 0x000001, "Wrong size on GA_Athena_ZipLine_Smash_C_HandleClientSplineZiplineStateChanged");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_HandleClientSplineZiplineStateChanged, bIsZiplining) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_HandleClientSplineZiplineStateChanged::bIsZiplining' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.EnterWaterExit
// 0x0008 (0x0008 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_EnterWaterExit final
{
public:
	class AFortPlayerPawn*                        FortPlayerPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_EnterWaterExit) == 0x000008, "Wrong alignment on GA_Athena_ZipLine_Smash_C_EnterWaterExit");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_EnterWaterExit) == 0x000008, "Wrong size on GA_Athena_ZipLine_Smash_C_EnterWaterExit");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_EnterWaterExit, FortPlayerPawn) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_EnterWaterExit::FortPlayerPawn' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.HandleZiplineStateChanged
// 0x0001 (0x0001 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_HandleZiplineStateChanged final
{
public:
	bool                                          bIsZiplining;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_HandleZiplineStateChanged) == 0x000001, "Wrong alignment on GA_Athena_ZipLine_Smash_C_HandleZiplineStateChanged");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_HandleZiplineStateChanged) == 0x000001, "Wrong size on GA_Athena_ZipLine_Smash_C_HandleZiplineStateChanged");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_HandleZiplineStateChanged, bIsZiplining) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_HandleZiplineStateChanged::bIsZiplining' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.OnPawnLanded_Bind
// 0x0088 (0x0088 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_OnPawnLanded_Bind final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_OnPawnLanded_Bind) == 0x000004, "Wrong alignment on GA_Athena_ZipLine_Smash_C_OnPawnLanded_Bind");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_OnPawnLanded_Bind) == 0x000088, "Wrong size on GA_Athena_ZipLine_Smash_C_OnPawnLanded_Bind");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_OnPawnLanded_Bind, Hit) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_OnPawnLanded_Bind::Hit' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_Athena_ZipLine_Smash_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_Athena_ZipLine_Smash_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.BreakNearbyStructures
// 0x0050 (0x0050 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_BreakNearbyStructures final
{
public:
	class AFortPlayerPawn*                        PlayerPawn_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0018(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures) == 0x000008, "Wrong alignment on GA_Athena_ZipLine_Smash_C_BreakNearbyStructures");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures) == 0x000050, "Wrong size on GA_Athena_ZipLine_Smash_C_BreakNearbyStructures");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, PlayerPawn_0) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::PlayerPawn_0' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, K2Node_MakeArray_Array) == 0x000008, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, K2Node_MakeArray_Array_1) == 0x000018, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_BreakVector_X) == 0x000034, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_BreakVector_Y) == 0x000038, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_BreakVector_Z) == 0x00003C, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_Add_FloatFloat_ReturnValue) == 0x000040, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_MakeVector_ReturnValue) == 0x000044, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.Spawn Motor
// 0x0080 (0x0080 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_Spawn_Motor final
{
public:
	class AActor*                                 PlayerPawn_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Get_Zipline_Motor_Offset_Offset;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bIsZiplining)>            K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0xC];                                       // 0x0034(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ZipLine_Athena_Harness_Yellow_C*    CallFunc_FinishSpawningActor_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_Spawn_Motor) == 0x000010, "Wrong alignment on GA_Athena_ZipLine_Smash_C_Spawn_Motor");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_Spawn_Motor) == 0x000080, "Wrong size on GA_Athena_ZipLine_Smash_C_Spawn_Motor");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Spawn_Motor, PlayerPawn_0) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_Spawn_Motor::PlayerPawn_0' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Spawn_Motor, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'GA_Athena_ZipLine_Smash_C_Spawn_Motor::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Spawn_Motor, CallFunc_Get_Zipline_Motor_Offset_Offset) == 0x00000C, "Member 'GA_Athena_ZipLine_Smash_C_Spawn_Motor::CallFunc_Get_Zipline_Motor_Offset_Offset' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Spawn_Motor, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'GA_Athena_ZipLine_Smash_C_Spawn_Motor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Spawn_Motor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'GA_Athena_ZipLine_Smash_C_Spawn_Motor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Spawn_Motor, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'GA_Athena_ZipLine_Smash_C_Spawn_Motor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Spawn_Motor, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000070, "Member 'GA_Athena_ZipLine_Smash_C_Spawn_Motor::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Spawn_Motor, CallFunc_FinishSpawningActor_ReturnValue) == 0x000078, "Member 'GA_Athena_ZipLine_Smash_C_Spawn_Motor::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.CheckMotor
// 0x0048 (0x0048 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_CheckMotor final
{
public:
	bool                                          HasHarness;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x0010(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ZipLine_Athena_Harness_C*           K2Node_DynamicCast_AsBP_Zip_Line_Athena_Harness;   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_CheckMotor) == 0x000008, "Wrong alignment on GA_Athena_ZipLine_Smash_C_CheckMotor");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_CheckMotor) == 0x000048, "Wrong size on GA_Athena_ZipLine_Smash_C_CheckMotor");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, HasHarness) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::HasHarness' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, Temp_bool_True_if_break_was_hit_Variable) == 0x000001, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, Temp_int_Array_Index_Variable) == 0x000004, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, CallFunc_GetAttachedActors_OutActors) == 0x000010, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, CallFunc_Array_Get_Item) == 0x000028, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, K2Node_DynamicCast_AsBP_Zip_Line_Athena_Harness) == 0x000030, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::K2Node_DynamicCast_AsBP_Zip_Line_Athena_Harness' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, CallFunc_BooleanAND_ReturnValue) == 0x000045, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.CheckForQuestProgress
// 0x0060 (0x0060 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_CheckForQuestProgress final
{
public:
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_GetOwnedGameplayTags_self_CastInput;      // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  CallFunc_GetOwnedGameplayTags_TagContainer;        // 0x0010(0x0020)()
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SendComplexCustomStatEvent_QuestActive;   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SendComplexCustomStatEvent_QuestCompleted; // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress) == 0x000008, "Wrong alignment on GA_Athena_ZipLine_Smash_C_CheckForQuestProgress");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress) == 0x000060, "Wrong size on GA_Athena_ZipLine_Smash_C_CheckForQuestProgress");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress, CallFunc_GetOwnedGameplayTags_self_CastInput) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_CheckForQuestProgress::CallFunc_GetOwnedGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress, CallFunc_GetOwnedGameplayTags_TagContainer) == 0x000010, "Member 'GA_Athena_ZipLine_Smash_C_CheckForQuestProgress::CallFunc_GetOwnedGameplayTags_TagContainer' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress, CallFunc_GetController_ReturnValue) == 0x000030, "Member 'GA_Athena_ZipLine_Smash_C_CheckForQuestProgress::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress, CallFunc_HasAuthority_ReturnValue) == 0x000038, "Member 'GA_Athena_ZipLine_Smash_C_CheckForQuestProgress::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000040, "Member 'GA_Athena_ZipLine_Smash_C_CheckForQuestProgress::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'GA_Athena_ZipLine_Smash_C_CheckForQuestProgress::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress, CallFunc_GetQuestManager_ReturnValue) == 0x000050, "Member 'GA_Athena_ZipLine_Smash_C_CheckForQuestProgress::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress, CallFunc_SendComplexCustomStatEvent_QuestActive) == 0x000058, "Member 'GA_Athena_ZipLine_Smash_C_CheckForQuestProgress::CallFunc_SendComplexCustomStatEvent_QuestActive' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress, CallFunc_SendComplexCustomStatEvent_QuestCompleted) == 0x000059, "Member 'GA_Athena_ZipLine_Smash_C_CheckForQuestProgress::CallFunc_SendComplexCustomStatEvent_QuestCompleted' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.Get Zipline Pole B Socket Loc
// 0x0038 (0x0038 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc final
{
public:
	struct FVector                                PoleBSocketLoc;                                    // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Athena_Environmental_ZipLine_C*     K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Athena_Environmental_ZipLine_Spline_C* K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc) == 0x000008, "Wrong alignment on GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc) == 0x000038, "Wrong size on GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc, PoleBSocketLoc) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc::PoleBSocketLoc' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc, K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line) == 0x000010, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc::K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc, K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline) == 0x000020, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc::K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00002C, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.Get Zipline Pole A Socket Loc
// 0x0038 (0x0038 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc final
{
public:
	struct FVector                                PoleBSocketLoc;                                    // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Athena_Environmental_ZipLine_C*     K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Athena_Environmental_ZipLine_Spline_C* K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc) == 0x000008, "Wrong alignment on GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc) == 0x000038, "Wrong size on GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc, PoleBSocketLoc) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc::PoleBSocketLoc' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc, K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line) == 0x000010, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc::K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc, K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline) == 0x000020, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc::K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00002C, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.GetZiplineRotationForMotor
// 0x0078 (0x0078 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor final
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Athena_Environmental_ZipLine_C*     K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Athena_Environmental_ZipLine_Spline_C* K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor) == 0x000008, "Wrong alignment on GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor) == 0x000078, "Wrong size on GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, Rotation) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::Rotation' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line) == 0x000010, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline) == 0x000020, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x00002C, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000038, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000044, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, CallFunc_MakeRotFromZ_ReturnValue) == 0x000050, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, CallFunc_BreakRotator_Roll) == 0x00005C, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, CallFunc_BreakRotator_Pitch) == 0x000060, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, CallFunc_BreakRotator_Yaw) == 0x000064, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, CallFunc_Add_FloatFloat_ReturnValue) == 0x000068, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, CallFunc_MakeRotator_ReturnValue) == 0x00006C, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.Get Zipline Motor Offset
// 0x0030 (0x0030 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset final
{
public:
	struct FVector                                Offset;                                            // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Athena_Environmental_ZipLine_Spline_C* K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Athena_Environmental_ZipLine_C*     K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset) == 0x000008, "Wrong alignment on GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset) == 0x000030, "Wrong size on GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset, Offset) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset::Offset' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset, K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline) == 0x000010, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset::K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset, K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line) == 0x000020, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset::K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

