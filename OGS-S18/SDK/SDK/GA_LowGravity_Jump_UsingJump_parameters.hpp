#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_LowGravity_Jump_UsingJump

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_LowGravity_Jump_UsingJump.GA_LowGravity_Jump_UsingJump_C.ExecuteUbergraph_GA_LowGravity_Jump_UsingJump
// 0x0260 (0x0260 - 0x0000)
struct GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerPawn_Athena_C*                   K2Node_DynamicCast_AsPlayer_Pawn_Athena;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0020(0x00B0)(ConstParm)
	bool                                          CallFunc_IsDrivingVehicle_ReturnValue;             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCrouching_ReturnValue;                  // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x00D8(0x00C0)(ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue_1;  // 0x01A0(0x00C0)(ContainsInstancedReference)
};
static_assert(alignof(GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump) == 0x000008, "Wrong alignment on GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump");
static_assert(sizeof(GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump) == 0x000260, "Wrong size on GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump, EntryPoint) == 0x000000, "Member 'GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump, K2Node_DynamicCast_AsPlayer_Pawn_Athena) == 0x000010, "Member 'GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump::K2Node_DynamicCast_AsPlayer_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump, K2Node_Event_EventData) == 0x000020, "Member 'GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump, CallFunc_IsDrivingVehicle_ReturnValue) == 0x0000D0, "Member 'GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump::CallFunc_IsDrivingVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x0000D1, "Member 'GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump, CallFunc_IsCrouching_ReturnValue) == 0x0000D2, "Member 'GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump::CallFunc_IsCrouching_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump, CallFunc_IsFalling_ReturnValue) == 0x0000D3, "Member 'GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump, CallFunc_BooleanOR_ReturnValue) == 0x0000D4, "Member 'GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump, CallFunc_BooleanOR_ReturnValue_1) == 0x0000D5, "Member 'GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x0000D8, "Member 'GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump, CallFunc_Not_PreBool_ReturnValue) == 0x000198, "Member 'GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump, CallFunc_MakeGameplayCueParameters_ReturnValue_1) == 0x0001A0, "Member 'GA_LowGravity_Jump_UsingJump_C_ExecuteUbergraph_GA_LowGravity_Jump_UsingJump::CallFunc_MakeGameplayCueParameters_ReturnValue_1' has a wrong offset!");

// Function GA_LowGravity_Jump_UsingJump.GA_LowGravity_Jump_UsingJump_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_LowGravity_Jump_UsingJump_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_LowGravity_Jump_UsingJump_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_LowGravity_Jump_UsingJump_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_LowGravity_Jump_UsingJump_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_LowGravity_Jump_UsingJump_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_LowGravity_Jump_UsingJump_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GA_LowGravity_Jump_UsingJump.GA_LowGravity_Jump_UsingJump_C.SetVariablesFromRows
// 0x0034 (0x0034 - 0x0000)
struct GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows final
{
public:
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_1;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_1;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_2;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_2;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_3;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_3;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_4;        // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_4;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_5;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_5;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_5;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows) == 0x000004, "Wrong alignment on GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows");
static_assert(sizeof(GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows) == 0x000034, "Wrong size on GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows, CallFunc_EvaluateCurveTableRow_OutResult) == 0x000000, "Member 'GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows::CallFunc_EvaluateCurveTableRow_OutResult' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows, CallFunc_EvaluateCurveTableRow_OutXY) == 0x000004, "Member 'GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows::CallFunc_EvaluateCurveTableRow_OutXY' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows, CallFunc_EvaluateCurveTableRow_OutResult_1) == 0x000008, "Member 'GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows::CallFunc_EvaluateCurveTableRow_OutResult_1' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows, CallFunc_EvaluateCurveTableRow_OutXY_1) == 0x00000C, "Member 'GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows::CallFunc_EvaluateCurveTableRow_OutXY_1' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows, K2Node_SwitchEnum_CmpSuccess_1) == 0x000011, "Member 'GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows, CallFunc_EvaluateCurveTableRow_OutResult_2) == 0x000012, "Member 'GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows::CallFunc_EvaluateCurveTableRow_OutResult_2' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows, CallFunc_EvaluateCurveTableRow_OutXY_2) == 0x000014, "Member 'GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows::CallFunc_EvaluateCurveTableRow_OutXY_2' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows, CallFunc_EvaluateCurveTableRow_OutResult_3) == 0x000018, "Member 'GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows::CallFunc_EvaluateCurveTableRow_OutResult_3' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows, CallFunc_EvaluateCurveTableRow_OutXY_3) == 0x00001C, "Member 'GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows::CallFunc_EvaluateCurveTableRow_OutXY_3' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows, K2Node_SwitchEnum_CmpSuccess_2) == 0x000020, "Member 'GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows, K2Node_SwitchEnum_CmpSuccess_3) == 0x000021, "Member 'GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows, CallFunc_EvaluateCurveTableRow_OutResult_4) == 0x000022, "Member 'GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows::CallFunc_EvaluateCurveTableRow_OutResult_4' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows, CallFunc_EvaluateCurveTableRow_OutXY_4) == 0x000024, "Member 'GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows::CallFunc_EvaluateCurveTableRow_OutXY_4' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows, CallFunc_EvaluateCurveTableRow_OutResult_5) == 0x000028, "Member 'GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows::CallFunc_EvaluateCurveTableRow_OutResult_5' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows, CallFunc_EvaluateCurveTableRow_OutXY_5) == 0x00002C, "Member 'GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows::CallFunc_EvaluateCurveTableRow_OutXY_5' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows, K2Node_SwitchEnum_CmpSuccess_4) == 0x000030, "Member 'GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows, K2Node_SwitchEnum_CmpSuccess_5) == 0x000031, "Member 'GA_LowGravity_Jump_UsingJump_C_SetVariablesFromRows::K2Node_SwitchEnum_CmpSuccess_5' has a wrong offset!");

// Function GA_LowGravity_Jump_UsingJump.GA_LowGravity_Jump_UsingJump_C.K2_ShouldAbilityRespondToEvent
// 0x0100 (0x0100 - 0x0000)
struct GA_LowGravity_Jump_UsingJump_C_K2_ShouldAbilityRespondToEvent final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FGameplayEventData                     Payload;                                           // 0x0048(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          ReturnValue;                                       // 0x00F8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_LowGravity_Jump_UsingJump_C_K2_ShouldAbilityRespondToEvent) == 0x000008, "Wrong alignment on GA_LowGravity_Jump_UsingJump_C_K2_ShouldAbilityRespondToEvent");
static_assert(sizeof(GA_LowGravity_Jump_UsingJump_C_K2_ShouldAbilityRespondToEvent) == 0x000100, "Wrong size on GA_LowGravity_Jump_UsingJump_C_K2_ShouldAbilityRespondToEvent");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_K2_ShouldAbilityRespondToEvent, ActorInfo) == 0x000000, "Member 'GA_LowGravity_Jump_UsingJump_C_K2_ShouldAbilityRespondToEvent::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_K2_ShouldAbilityRespondToEvent, Payload) == 0x000048, "Member 'GA_LowGravity_Jump_UsingJump_C_K2_ShouldAbilityRespondToEvent::Payload' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_UsingJump_C_K2_ShouldAbilityRespondToEvent, ReturnValue) == 0x0000F8, "Member 'GA_LowGravity_Jump_UsingJump_C_K2_ShouldAbilityRespondToEvent::ReturnValue' has a wrong offset!");

}

