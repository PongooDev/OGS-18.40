#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DeimosRift_Dynamic

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_DeimosRift_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DeimosRift_Dynamic.BP_DeimosRift_Dynamic_C
// 0x0028 (0x0BB8 - 0x0B90)
class ABP_DeimosRift_Dynamic_C final : public ABP_DeimosRift_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_DeimosRift_Dynamic_C;            // 0x0B90(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         LifeTime;                                          // 0x0B98(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9C[0x4];                                      // 0x0B9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           LifeTimeTimerHandle;                               // 0x0BA0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         TimeLastSetLifeTimeTimer;                          // 0x0BA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThrottleTime;                                      // 0x0BAC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_LifeTimeLapsed;                                 // 0x0BB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_DeimosRift_Dynamic(int32 EntryPoint);
	void BP_Cosmetic_ShouldDie();
	void BP_Cosmetic_RampUp();
	void BP_Cosmetic_Idle();
	void BP_Cosmetic_Intro();
	void LifetimeExpired();
	void SetLifeTimeTimer();
	void OnDamageServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void OnRep_ServerSpawnTime();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DeimosRift_Dynamic_C">();
	}
	static class ABP_DeimosRift_Dynamic_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DeimosRift_Dynamic_C>();
	}
};
static_assert(alignof(ABP_DeimosRift_Dynamic_C) == 0x000008, "Wrong alignment on ABP_DeimosRift_Dynamic_C");
static_assert(sizeof(ABP_DeimosRift_Dynamic_C) == 0x000BB8, "Wrong size on ABP_DeimosRift_Dynamic_C");
static_assert(offsetof(ABP_DeimosRift_Dynamic_C, UberGraphFrame_BP_DeimosRift_Dynamic_C) == 0x000B90, "Member 'ABP_DeimosRift_Dynamic_C::UberGraphFrame_BP_DeimosRift_Dynamic_C' has a wrong offset!");
static_assert(offsetof(ABP_DeimosRift_Dynamic_C, LifeTime) == 0x000B98, "Member 'ABP_DeimosRift_Dynamic_C::LifeTime' has a wrong offset!");
static_assert(offsetof(ABP_DeimosRift_Dynamic_C, LifeTimeTimerHandle) == 0x000BA0, "Member 'ABP_DeimosRift_Dynamic_C::LifeTimeTimerHandle' has a wrong offset!");
static_assert(offsetof(ABP_DeimosRift_Dynamic_C, TimeLastSetLifeTimeTimer) == 0x000BA8, "Member 'ABP_DeimosRift_Dynamic_C::TimeLastSetLifeTimeTimer' has a wrong offset!");
static_assert(offsetof(ABP_DeimosRift_Dynamic_C, ThrottleTime) == 0x000BAC, "Member 'ABP_DeimosRift_Dynamic_C::ThrottleTime' has a wrong offset!");
static_assert(offsetof(ABP_DeimosRift_Dynamic_C, GE_LifeTimeLapsed) == 0x000BB0, "Member 'ABP_DeimosRift_Dynamic_C::GE_LifeTimeLapsed' has a wrong offset!");

}

