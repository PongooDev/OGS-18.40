#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_G_Countdown

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_CountdownMaster_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_G_Countdown.BP_G_Countdown_C
// 0x0108 (0x0440 - 0x0338)
class ABP_G_Countdown_C final : public ABP_CountdownMaster_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_G_Countdown_C;                   // 0x0338(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetComponent*                       Widget_LiveInText;                                 // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Galileo_PlatformBig_Hologram;                   // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         OpacityMult_NewTrack_0_56FEFD974C9CAF07532A909B7E71C09C; // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            OpacityMult__Direction_56FEFD974C9CAF07532A909B7E71C09C; // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355[0x3];                                      // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     OpacityMult;                                       // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_Fade_AF07B16D4BAEBD0C4BCF0399A42298DB;  // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_AF07B16D4BAEBD0C4BCF0399A42298DB; // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CountdownEvent;                                    // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Stage;                                             // 0x0380(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	float                                         SecondsRemaining;                                  // 0x0384(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RepAudio;                                          // 0x0388(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CountdownMusic;                                    // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Music;                                             // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   StandbyText;                                       // 0x03A0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 CountdownHold;                                     // 0x03B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FVector                                Hologram_Scale;                                    // 0x03C8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartingInTextLocation;                            // 0x03D4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StandbyTextLocation;                               // 0x03E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Blinkamount;                                       // 0x03EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           BlinkHandle;                                       // 0x03F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         TwoMinuteMark;                                     // 0x03F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ABP_Generic_TimerManager_C> TimerManager;                                      // 0x0400(0x0028)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	bool                                          Has2MinWarningFired;                               // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsLobbyTimer;                                      // 0x0429(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42A[0x2];                                      // 0x042A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Guava_Fort_Location;                               // 0x042C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MoveTimer;                                         // 0x0438(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)

public:
	void ExecuteUbergraph_BP_G_Countdown(int32 EntryPoint);
	void Seconds_Updated(int32 SecondsRemaining_0);
	void CreateLocalizedCountdownText();
	void BlinkTimer();
	void ScrubComplete();
	void FadeOut(bool Fade);
	void Stage2();
	void Stage1();
	void ReceiveBeginPlay();
	void OnReady_5182C2DA46C2D6066130E4BF6F6D5685(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void OnComplete_DC499D2542DDC4A4D0BFD4BF670FD278(class UUserWidget* UserWidget);
	void OnEventActive_0D8CA66F46B8FF9A8F4C398887B07136(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void OnEventUpdated_0D8CA66F46B8FF9A8F4C398887B07136(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void OnEventEnded_0D8CA66F46B8FF9A8F4C398887B07136(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void OnReady_94DBCC3B47D0EFF7A1326FA0C36D42B4();
	void OpacityMult__UpdateFunc();
	void OpacityMult__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void OnRep_Stage();
	void OnRep_PlayAudio();
	void Play_Audio_Internal(float StartTime);
	void StopAudioInternal();
	void OnRep_PlayLoopingAudio();
	void OnRep_MoveTimer();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_G_Countdown_C">();
	}
	static class ABP_G_Countdown_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_G_Countdown_C>();
	}
};
static_assert(alignof(ABP_G_Countdown_C) == 0x000008, "Wrong alignment on ABP_G_Countdown_C");
static_assert(sizeof(ABP_G_Countdown_C) == 0x000440, "Wrong size on ABP_G_Countdown_C");
static_assert(offsetof(ABP_G_Countdown_C, UberGraphFrame_BP_G_Countdown_C) == 0x000338, "Member 'ABP_G_Countdown_C::UberGraphFrame_BP_G_Countdown_C' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, Widget_LiveInText) == 0x000340, "Member 'ABP_G_Countdown_C::Widget_LiveInText' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, SM_Galileo_PlatformBig_Hologram) == 0x000348, "Member 'ABP_G_Countdown_C::SM_Galileo_PlatformBig_Hologram' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, OpacityMult_NewTrack_0_56FEFD974C9CAF07532A909B7E71C09C) == 0x000350, "Member 'ABP_G_Countdown_C::OpacityMult_NewTrack_0_56FEFD974C9CAF07532A909B7E71C09C' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, OpacityMult__Direction_56FEFD974C9CAF07532A909B7E71C09C) == 0x000354, "Member 'ABP_G_Countdown_C::OpacityMult__Direction_56FEFD974C9CAF07532A909B7E71C09C' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, OpacityMult) == 0x000358, "Member 'ABP_G_Countdown_C::OpacityMult' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, Timeline_0_Fade_AF07B16D4BAEBD0C4BCF0399A42298DB) == 0x000360, "Member 'ABP_G_Countdown_C::Timeline_0_Fade_AF07B16D4BAEBD0C4BCF0399A42298DB' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, Timeline_0__Direction_AF07B16D4BAEBD0C4BCF0399A42298DB) == 0x000364, "Member 'ABP_G_Countdown_C::Timeline_0__Direction_AF07B16D4BAEBD0C4BCF0399A42298DB' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, Timeline_0) == 0x000368, "Member 'ABP_G_Countdown_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, CountdownEvent) == 0x000370, "Member 'ABP_G_Countdown_C::CountdownEvent' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, Stage) == 0x000380, "Member 'ABP_G_Countdown_C::Stage' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, SecondsRemaining) == 0x000384, "Member 'ABP_G_Countdown_C::SecondsRemaining' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, RepAudio) == 0x000388, "Member 'ABP_G_Countdown_C::RepAudio' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, CountdownMusic) == 0x000390, "Member 'ABP_G_Countdown_C::CountdownMusic' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, Music) == 0x000398, "Member 'ABP_G_Countdown_C::Music' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, StandbyText) == 0x0003A0, "Member 'ABP_G_Countdown_C::StandbyText' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, CountdownHold) == 0x0003B8, "Member 'ABP_G_Countdown_C::CountdownHold' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, Hologram_Scale) == 0x0003C8, "Member 'ABP_G_Countdown_C::Hologram_Scale' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, StartingInTextLocation) == 0x0003D4, "Member 'ABP_G_Countdown_C::StartingInTextLocation' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, StandbyTextLocation) == 0x0003E0, "Member 'ABP_G_Countdown_C::StandbyTextLocation' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, Blinkamount) == 0x0003EC, "Member 'ABP_G_Countdown_C::Blinkamount' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, BlinkHandle) == 0x0003F0, "Member 'ABP_G_Countdown_C::BlinkHandle' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, TwoMinuteMark) == 0x0003F8, "Member 'ABP_G_Countdown_C::TwoMinuteMark' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, TimerManager) == 0x000400, "Member 'ABP_G_Countdown_C::TimerManager' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, Has2MinWarningFired) == 0x000428, "Member 'ABP_G_Countdown_C::Has2MinWarningFired' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, IsLobbyTimer) == 0x000429, "Member 'ABP_G_Countdown_C::IsLobbyTimer' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, Guava_Fort_Location) == 0x00042C, "Member 'ABP_G_Countdown_C::Guava_Fort_Location' has a wrong offset!");
static_assert(offsetof(ABP_G_Countdown_C, MoveTimer) == 0x000438, "Member 'ABP_G_Countdown_C::MoveTimer' has a wrong offset!");

}

