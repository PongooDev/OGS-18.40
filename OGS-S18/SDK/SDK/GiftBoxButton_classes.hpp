#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GiftBoxButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass GiftBoxButton.GiftBoxButton_C
// 0x0028 (0x0C60 - 0x0C38)
class UGiftBoxButton_C final : public UFortGiftBoxButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0C38(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Hover;                                             // 0x0C40(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Deselected;                                        // 0x0C48(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Selected;                                          // 0x0C50(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 ButtonSelected;                                    // 0x0C58(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void Construct();
	void PlayGiftSelectedAnimation(bool bIsSelected);
	void ExecuteUbergraph_GiftBoxButton(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GiftBoxButton_C">();
	}
	static class UGiftBoxButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGiftBoxButton_C>();
	}
};
static_assert(alignof(UGiftBoxButton_C) == 0x000008, "Wrong alignment on UGiftBoxButton_C");
static_assert(sizeof(UGiftBoxButton_C) == 0x000C60, "Wrong size on UGiftBoxButton_C");
static_assert(offsetof(UGiftBoxButton_C, UberGraphFrame) == 0x000C38, "Member 'UGiftBoxButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGiftBoxButton_C, Hover) == 0x000C40, "Member 'UGiftBoxButton_C::Hover' has a wrong offset!");
static_assert(offsetof(UGiftBoxButton_C, Deselected) == 0x000C48, "Member 'UGiftBoxButton_C::Deselected' has a wrong offset!");
static_assert(offsetof(UGiftBoxButton_C, Selected) == 0x000C50, "Member 'UGiftBoxButton_C::Selected' has a wrong offset!");
static_assert(offsetof(UGiftBoxButton_C, ButtonSelected) == 0x000C58, "Member 'UGiftBoxButton_C::ButtonSelected' has a wrong offset!");

}

