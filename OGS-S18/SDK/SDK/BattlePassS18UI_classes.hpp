#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlePassS18UI

#include "Basic.hpp"

#include "BattlePassBase_classes.hpp"
#include "CommonInput_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// Class BattlePassS18UI.FortBattlePassBulkBuyPageS18
// 0x0080 (0x04B0 - 0x0430)
class UFortBattlePassBulkBuyPageS18 : public UFortBattlePassBulkBuyPageBase
{
public:
	class UCommonButtonBase*                      Button_Addition;                                   // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_Subtraction;                                // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDynamicEntryBox*                       DynamicEntryBox_TilesEntries;                      // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonVisibilitySwitcher*              Switcher_BottomButtons;                            // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortHoldableButton*                    Button_BuyLevels;                                  // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortHoldableButton*                    Button_ClaimReward;                                // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAthenaSeasonItemData_BattleStar*       SeasonData_BattleStar;                             // 0x0460(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAthenaSeasonItemDefinition*            SeasonItemDefinition;                              // 0x0468(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortBattlePassTile*                    FocusedReward;                                     // 0x0470(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_478[0x30];                                     // 0x0478(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class UScrollBox*                             ScrollBox_Pages;                                   // 0x04A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void HandleUserScrolled(float ScrollAmount);
	void OnCostChanged(const int32 Cost);
	void OnPageRangeChanged(const int32 FromPage, const int32 ToPage);
	void OnRewardCountChanged(const int32 Count);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortBattlePassBulkBuyPageS18">();
	}
	static class UFortBattlePassBulkBuyPageS18* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortBattlePassBulkBuyPageS18>();
	}
};
static_assert(alignof(UFortBattlePassBulkBuyPageS18) == 0x000008, "Wrong alignment on UFortBattlePassBulkBuyPageS18");
static_assert(sizeof(UFortBattlePassBulkBuyPageS18) == 0x0004B0, "Wrong size on UFortBattlePassBulkBuyPageS18");
static_assert(offsetof(UFortBattlePassBulkBuyPageS18, Button_Addition) == 0x000430, "Member 'UFortBattlePassBulkBuyPageS18::Button_Addition' has a wrong offset!");
static_assert(offsetof(UFortBattlePassBulkBuyPageS18, Button_Subtraction) == 0x000438, "Member 'UFortBattlePassBulkBuyPageS18::Button_Subtraction' has a wrong offset!");
static_assert(offsetof(UFortBattlePassBulkBuyPageS18, DynamicEntryBox_TilesEntries) == 0x000440, "Member 'UFortBattlePassBulkBuyPageS18::DynamicEntryBox_TilesEntries' has a wrong offset!");
static_assert(offsetof(UFortBattlePassBulkBuyPageS18, Switcher_BottomButtons) == 0x000448, "Member 'UFortBattlePassBulkBuyPageS18::Switcher_BottomButtons' has a wrong offset!");
static_assert(offsetof(UFortBattlePassBulkBuyPageS18, Button_BuyLevels) == 0x000450, "Member 'UFortBattlePassBulkBuyPageS18::Button_BuyLevels' has a wrong offset!");
static_assert(offsetof(UFortBattlePassBulkBuyPageS18, Button_ClaimReward) == 0x000458, "Member 'UFortBattlePassBulkBuyPageS18::Button_ClaimReward' has a wrong offset!");
static_assert(offsetof(UFortBattlePassBulkBuyPageS18, SeasonData_BattleStar) == 0x000460, "Member 'UFortBattlePassBulkBuyPageS18::SeasonData_BattleStar' has a wrong offset!");
static_assert(offsetof(UFortBattlePassBulkBuyPageS18, SeasonItemDefinition) == 0x000468, "Member 'UFortBattlePassBulkBuyPageS18::SeasonItemDefinition' has a wrong offset!");
static_assert(offsetof(UFortBattlePassBulkBuyPageS18, FocusedReward) == 0x000470, "Member 'UFortBattlePassBulkBuyPageS18::FocusedReward' has a wrong offset!");
static_assert(offsetof(UFortBattlePassBulkBuyPageS18, ScrollBox_Pages) == 0x0004A8, "Member 'UFortBattlePassBulkBuyPageS18::ScrollBox_Pages' has a wrong offset!");

// Class BattlePassS18UI.BattlePassLandingPageS18
// 0x0050 (0x04A0 - 0x0450)
class UBattlePassLandingPageS18 : public UBattlePassLandingPageBase
{
public:
	class UBattlePassLandingPageButton*           Button_Rewards;                                    // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBattlePassLandingPageButton*           Button_CharacterCustomizer;                        // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBattlePassLandingPageButton*           Button_BonusRewards;                               // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBattlePassLandingPageButton*           Button_Quests;                                     // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBattlePassLandingPageButton*           Button_BuyBattlePass;                              // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBattlePassLandingPageButton*           Button_JoinSubscription;                           // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBattlePassLandingPageButton*           Button_BuyResources;                               // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBattlePassLandingPageButton*           Button_GiftBattlePass;                             // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_490[0x8];                                      // 0x0490(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaSeasonItemData_BattleStar*       SeasonData_BattleStar;                             // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnBattlePassGiftingAllowed(const bool bGiftingAllowed);
	void OnBattlePassOwned();
	void OnBattlePassSubscriptionAllowed(const bool bSubscriptionAllowed);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattlePassLandingPageS18">();
	}
	static class UBattlePassLandingPageS18* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattlePassLandingPageS18>();
	}
};
static_assert(alignof(UBattlePassLandingPageS18) == 0x000008, "Wrong alignment on UBattlePassLandingPageS18");
static_assert(sizeof(UBattlePassLandingPageS18) == 0x0004A0, "Wrong size on UBattlePassLandingPageS18");
static_assert(offsetof(UBattlePassLandingPageS18, Button_Rewards) == 0x000450, "Member 'UBattlePassLandingPageS18::Button_Rewards' has a wrong offset!");
static_assert(offsetof(UBattlePassLandingPageS18, Button_CharacterCustomizer) == 0x000458, "Member 'UBattlePassLandingPageS18::Button_CharacterCustomizer' has a wrong offset!");
static_assert(offsetof(UBattlePassLandingPageS18, Button_BonusRewards) == 0x000460, "Member 'UBattlePassLandingPageS18::Button_BonusRewards' has a wrong offset!");
static_assert(offsetof(UBattlePassLandingPageS18, Button_Quests) == 0x000468, "Member 'UBattlePassLandingPageS18::Button_Quests' has a wrong offset!");
static_assert(offsetof(UBattlePassLandingPageS18, Button_BuyBattlePass) == 0x000470, "Member 'UBattlePassLandingPageS18::Button_BuyBattlePass' has a wrong offset!");
static_assert(offsetof(UBattlePassLandingPageS18, Button_JoinSubscription) == 0x000478, "Member 'UBattlePassLandingPageS18::Button_JoinSubscription' has a wrong offset!");
static_assert(offsetof(UBattlePassLandingPageS18, Button_BuyResources) == 0x000480, "Member 'UBattlePassLandingPageS18::Button_BuyResources' has a wrong offset!");
static_assert(offsetof(UBattlePassLandingPageS18, Button_GiftBattlePass) == 0x000488, "Member 'UBattlePassLandingPageS18::Button_GiftBattlePass' has a wrong offset!");
static_assert(offsetof(UBattlePassLandingPageS18, SeasonData_BattleStar) == 0x000498, "Member 'UBattlePassLandingPageS18::SeasonData_BattleStar' has a wrong offset!");

// Class BattlePassS18UI.FortBattlePassCustomSkinPageS18
// 0x0008 (0x04D0 - 0x04C8)
class UFortBattlePassCustomSkinPageS18 final : public UFortBattlePassCustomSkinPageBase
{
public:
	class UFortBattlePassTutorialTooltipS18*      TutorialTooltip_PurchaseStyle;                     // 0x04C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortBattlePassCustomSkinPageS18">();
	}
	static class UFortBattlePassCustomSkinPageS18* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortBattlePassCustomSkinPageS18>();
	}
};
static_assert(alignof(UFortBattlePassCustomSkinPageS18) == 0x000008, "Wrong alignment on UFortBattlePassCustomSkinPageS18");
static_assert(sizeof(UFortBattlePassCustomSkinPageS18) == 0x0004D0, "Wrong size on UFortBattlePassCustomSkinPageS18");
static_assert(offsetof(UFortBattlePassCustomSkinPageS18, TutorialTooltip_PurchaseStyle) == 0x0004C8, "Member 'UFortBattlePassCustomSkinPageS18::TutorialTooltip_PurchaseStyle' has a wrong offset!");

// Class BattlePassS18UI.BattlePassRewardPageS18
// 0x0098 (0x04C8 - 0x0430)
class UBattlePassRewardPageS18 : public UBattlePassRewardPageBase
{
public:
	TSubclassOf<class UFortBattlePassRewardGrid>  RewardsGridClass;                                  // 0x0430(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortPageNavigator*                     PageNavigator;                                     // 0x0438(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortBattlePassTile*                    FocusedReward;                                     // 0x0440(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UFortBattlePassRewardGrid*>      GridPages;                                         // 0x0448(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_458[0x4];                                      // 0x0458(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	ERewardPageType                               RewardPageType;                                    // 0x045C(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_45D[0x3];                                      // 0x045D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HoldTileTooltip_ClaimedRewardsToHide;              // 0x0460(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         HoldTileTooltip_RequiredBattleStarsToShow;         // 0x0464(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 ClaimToonAFishTooltip_ClaimCheckTemplateId;        // 0x0468(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortBattlePassTutorialTooltipS18*      TutorialTooltip_SecondPageUnlock;                  // 0x0478(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortBattlePassTutorialTooltipS18*      TutorialTooltip_ClaimAllRewards;                   // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortBattlePassTutorialTooltipS18*      TutorialTooltip_HoldTile;                          // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortBattlePassTutorialTooltipS18*      TutorialTooltip_Fishtoon_ClaimToonAFish;           // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortBattlePassTutorialTooltipS18*      TutorialTooltip_Fishtoon_ExploreToCollectInk;      // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortBattlePassTutorialTooltipS18*      TutorialTooltip_Fishtoon_MustUnlockInkColor;       // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortBattlePassTutorialTooltipS18*      TutorialTooltip_Fishtoon_MustCompleteObjective;    // 0x04A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAthenaSeasonItemData_BattleStar*       SeasonData_BattleStar;                             // 0x04B0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBattlePassBulkBuyInputData*            BulkBuyInputData;                                  // 0x04B8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4C0[0x8];                                      // 0x04C0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnInitForPageType(const ERewardPageType InRewardPageType);
	void OnInputMethodChanged(const ECommonInputType InputType);
	void OnPageChanged(const int32 PageNumber);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattlePassRewardPageS18">();
	}
	static class UBattlePassRewardPageS18* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattlePassRewardPageS18>();
	}
};
static_assert(alignof(UBattlePassRewardPageS18) == 0x000008, "Wrong alignment on UBattlePassRewardPageS18");
static_assert(sizeof(UBattlePassRewardPageS18) == 0x0004C8, "Wrong size on UBattlePassRewardPageS18");
static_assert(offsetof(UBattlePassRewardPageS18, RewardsGridClass) == 0x000430, "Member 'UBattlePassRewardPageS18::RewardsGridClass' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS18, PageNavigator) == 0x000438, "Member 'UBattlePassRewardPageS18::PageNavigator' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS18, FocusedReward) == 0x000440, "Member 'UBattlePassRewardPageS18::FocusedReward' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS18, GridPages) == 0x000448, "Member 'UBattlePassRewardPageS18::GridPages' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS18, RewardPageType) == 0x00045C, "Member 'UBattlePassRewardPageS18::RewardPageType' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS18, HoldTileTooltip_ClaimedRewardsToHide) == 0x000460, "Member 'UBattlePassRewardPageS18::HoldTileTooltip_ClaimedRewardsToHide' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS18, HoldTileTooltip_RequiredBattleStarsToShow) == 0x000464, "Member 'UBattlePassRewardPageS18::HoldTileTooltip_RequiredBattleStarsToShow' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS18, ClaimToonAFishTooltip_ClaimCheckTemplateId) == 0x000468, "Member 'UBattlePassRewardPageS18::ClaimToonAFishTooltip_ClaimCheckTemplateId' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS18, TutorialTooltip_SecondPageUnlock) == 0x000478, "Member 'UBattlePassRewardPageS18::TutorialTooltip_SecondPageUnlock' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS18, TutorialTooltip_ClaimAllRewards) == 0x000480, "Member 'UBattlePassRewardPageS18::TutorialTooltip_ClaimAllRewards' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS18, TutorialTooltip_HoldTile) == 0x000488, "Member 'UBattlePassRewardPageS18::TutorialTooltip_HoldTile' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS18, TutorialTooltip_Fishtoon_ClaimToonAFish) == 0x000490, "Member 'UBattlePassRewardPageS18::TutorialTooltip_Fishtoon_ClaimToonAFish' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS18, TutorialTooltip_Fishtoon_ExploreToCollectInk) == 0x000498, "Member 'UBattlePassRewardPageS18::TutorialTooltip_Fishtoon_ExploreToCollectInk' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS18, TutorialTooltip_Fishtoon_MustUnlockInkColor) == 0x0004A0, "Member 'UBattlePassRewardPageS18::TutorialTooltip_Fishtoon_MustUnlockInkColor' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS18, TutorialTooltip_Fishtoon_MustCompleteObjective) == 0x0004A8, "Member 'UBattlePassRewardPageS18::TutorialTooltip_Fishtoon_MustCompleteObjective' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS18, SeasonData_BattleStar) == 0x0004B0, "Member 'UBattlePassRewardPageS18::SeasonData_BattleStar' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS18, BulkBuyInputData) == 0x0004B8, "Member 'UBattlePassRewardPageS18::BulkBuyInputData' has a wrong offset!");

// Class BattlePassS18UI.BattlePassScreenS18
// 0x03A8 (0x0BA8 - 0x0800)
class UBattlePassScreenS18 : public UBattlePassScreenBase
{
public:
	TSubclassOf<class UFortBattlePassPurchaseResourcesWidget> ResourcePurchaseScreenClass;                       // 0x0800(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_808[0x8];                                      // 0x0808(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonLegacy*                    Button_Close;                                      // 0x0810(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonLegacy*                    Button_CloseMobile;                                // 0x0818(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_BulkBuyRewards;                             // 0x0820(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonLegacy*                    Button_ToggleViewDetails;                          // 0x0828(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_ToggleViewDetails_Mobile;                   // 0x0830(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonLegacy*                    Button_ReplayTrailer;                              // 0x0838(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_ReplayTrailer_Mobile;                       // 0x0840(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonLegacy*                    Button_ShowAbout;                                  // 0x0848(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_ShowAbout_Mobile;                           // 0x0850(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonLegacy*                    Button_ShowAboutCustomization;                     // 0x0858(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_ShowAboutCustomization_Mobile;              // 0x0860(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonVisibilitySwitcher*              MobileVisibilitySwitcher;                          // 0x0868(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortBattlePassCurrencyPanel*           BattlePassCurrencyPanel;                           // 0x0870(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAthenaExclusiveRewardBanner*           AthenaExclusiveRewardBanner;                       // 0x0878(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_Description;                                  // 0x0880(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_ItemName;                                     // 0x0888(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAthenaRewardItemTypeRarityTag*         ItemRewardTag;                                     // 0x0890(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_SetDetails;                                   // 0x0898(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonVisibilitySwitcher*              Switcher_ContextualButtons;                        // 0x08A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortHoldableButton*                    Button_BuyLevels;                                  // 0x08A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortHoldableButton*                    Button_BuyBattlePass;                              // 0x08B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortHoldableButton*                    Button_ClaimReward;                                // 0x08B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Tag_RequiresBP;                                    // 0x08C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Tag_PageLocked;                                    // 0x08C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Tag_BaseItem;                                      // 0x08D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Tag_Prerequisite;                                  // 0x08D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Tag_NotEnough_Currency;                            // 0x08E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Tag_Cost;                                          // 0x08E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Tag_Owned;                                         // 0x08F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Tag_Delayed;                                       // 0x08F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_900[0x48];                                     // 0x0900(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaSeasonItemData_BattleStar*       SeasonData_BattleStar;                             // 0x0948(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAthenaSeasonItemEntryBase*             CurrentSelectedEntry;                              // 0x0950(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<EBattlePassView>                       SwitcherSubPageTypes;                              // 0x0958(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class UCommonVisibilitySwitcher*              SubPageSwitcher;                                   // 0x0968(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_970[0xC0];                                     // 0x0970(0x00C0)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemDefinition*                    SeasonalBaseCustomizationItem;                     // 0x0A30(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHasSubscription;                                  // 0x0A38(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A39[0x3];                                      // 0x0A39(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BattleStarsTooltipHideLevel;                       // 0x0A3C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A40[0x8];                                      // 0x0A40(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortBattlePassTutorialTooltipS18*      TutorialTooltip_BattleStars;                       // 0x0A48(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortBattlePassTutorialTooltipS18*      TutorialTooltip_StylePoints;                       // 0x0A50(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A58[0x150];                                    // 0x0A58(0x0150)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleClaimRewardComplete(const bool bSuccess, const TArray<class FString>& OfferTemplateIdList);
	void HandleSwitcherVisibilityShown();
	void OnBattlePassOwned();
	void OnInsufficientFunds(const EBattlePassCurrencyType CurrencyType);
	void OnItemDelayed(const struct FTimespan& Delay);
	void OnLevelChanged(const int32 Level);
	void OnSetClaimedRewardInfo(const int32 OwnedRewards, const int32 TotalRewards);
	void OnSetDynamicInput(const EBattlePassInputs InputType, const class UBattlePassInputData* InputData);
	void OnSetItemPrice(const int32 Cost, const EBattlePassCurrencyType CurrencyType);
	void OnSetPrerequisiteInfo(const class FText& Description, const int32 OwnedRewards, const int32 NeededRewards, const bool bShowPrerequisiteLock);
	void OnTransitionItemDetails(const bool bTransitionForward);
	void OverviewShowAnimationFinished();

	struct FTimespan GetQuestPageDelay() const;
	bool IsSeasonalCustomizationItemOwned() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattlePassScreenS18">();
	}
	static class UBattlePassScreenS18* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattlePassScreenS18>();
	}
};
static_assert(alignof(UBattlePassScreenS18) == 0x000008, "Wrong alignment on UBattlePassScreenS18");
static_assert(sizeof(UBattlePassScreenS18) == 0x000BA8, "Wrong size on UBattlePassScreenS18");
static_assert(offsetof(UBattlePassScreenS18, ResourcePurchaseScreenClass) == 0x000800, "Member 'UBattlePassScreenS18::ResourcePurchaseScreenClass' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, Button_Close) == 0x000810, "Member 'UBattlePassScreenS18::Button_Close' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, Button_CloseMobile) == 0x000818, "Member 'UBattlePassScreenS18::Button_CloseMobile' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, Button_BulkBuyRewards) == 0x000820, "Member 'UBattlePassScreenS18::Button_BulkBuyRewards' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, Button_ToggleViewDetails) == 0x000828, "Member 'UBattlePassScreenS18::Button_ToggleViewDetails' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, Button_ToggleViewDetails_Mobile) == 0x000830, "Member 'UBattlePassScreenS18::Button_ToggleViewDetails_Mobile' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, Button_ReplayTrailer) == 0x000838, "Member 'UBattlePassScreenS18::Button_ReplayTrailer' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, Button_ReplayTrailer_Mobile) == 0x000840, "Member 'UBattlePassScreenS18::Button_ReplayTrailer_Mobile' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, Button_ShowAbout) == 0x000848, "Member 'UBattlePassScreenS18::Button_ShowAbout' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, Button_ShowAbout_Mobile) == 0x000850, "Member 'UBattlePassScreenS18::Button_ShowAbout_Mobile' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, Button_ShowAboutCustomization) == 0x000858, "Member 'UBattlePassScreenS18::Button_ShowAboutCustomization' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, Button_ShowAboutCustomization_Mobile) == 0x000860, "Member 'UBattlePassScreenS18::Button_ShowAboutCustomization_Mobile' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, MobileVisibilitySwitcher) == 0x000868, "Member 'UBattlePassScreenS18::MobileVisibilitySwitcher' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, BattlePassCurrencyPanel) == 0x000870, "Member 'UBattlePassScreenS18::BattlePassCurrencyPanel' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, AthenaExclusiveRewardBanner) == 0x000878, "Member 'UBattlePassScreenS18::AthenaExclusiveRewardBanner' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, Text_Description) == 0x000880, "Member 'UBattlePassScreenS18::Text_Description' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, Text_ItemName) == 0x000888, "Member 'UBattlePassScreenS18::Text_ItemName' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, ItemRewardTag) == 0x000890, "Member 'UBattlePassScreenS18::ItemRewardTag' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, Text_SetDetails) == 0x000898, "Member 'UBattlePassScreenS18::Text_SetDetails' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, Switcher_ContextualButtons) == 0x0008A0, "Member 'UBattlePassScreenS18::Switcher_ContextualButtons' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, Button_BuyLevels) == 0x0008A8, "Member 'UBattlePassScreenS18::Button_BuyLevels' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, Button_BuyBattlePass) == 0x0008B0, "Member 'UBattlePassScreenS18::Button_BuyBattlePass' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, Button_ClaimReward) == 0x0008B8, "Member 'UBattlePassScreenS18::Button_ClaimReward' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, Tag_RequiresBP) == 0x0008C0, "Member 'UBattlePassScreenS18::Tag_RequiresBP' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, Tag_PageLocked) == 0x0008C8, "Member 'UBattlePassScreenS18::Tag_PageLocked' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, Tag_BaseItem) == 0x0008D0, "Member 'UBattlePassScreenS18::Tag_BaseItem' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, Tag_Prerequisite) == 0x0008D8, "Member 'UBattlePassScreenS18::Tag_Prerequisite' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, Tag_NotEnough_Currency) == 0x0008E0, "Member 'UBattlePassScreenS18::Tag_NotEnough_Currency' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, Tag_Cost) == 0x0008E8, "Member 'UBattlePassScreenS18::Tag_Cost' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, Tag_Owned) == 0x0008F0, "Member 'UBattlePassScreenS18::Tag_Owned' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, Tag_Delayed) == 0x0008F8, "Member 'UBattlePassScreenS18::Tag_Delayed' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, SeasonData_BattleStar) == 0x000948, "Member 'UBattlePassScreenS18::SeasonData_BattleStar' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, CurrentSelectedEntry) == 0x000950, "Member 'UBattlePassScreenS18::CurrentSelectedEntry' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, SwitcherSubPageTypes) == 0x000958, "Member 'UBattlePassScreenS18::SwitcherSubPageTypes' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, SubPageSwitcher) == 0x000968, "Member 'UBattlePassScreenS18::SubPageSwitcher' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, SeasonalBaseCustomizationItem) == 0x000A30, "Member 'UBattlePassScreenS18::SeasonalBaseCustomizationItem' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, bHasSubscription) == 0x000A38, "Member 'UBattlePassScreenS18::bHasSubscription' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, BattleStarsTooltipHideLevel) == 0x000A3C, "Member 'UBattlePassScreenS18::BattleStarsTooltipHideLevel' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, TutorialTooltip_BattleStars) == 0x000A48, "Member 'UBattlePassScreenS18::TutorialTooltip_BattleStars' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS18, TutorialTooltip_StylePoints) == 0x000A50, "Member 'UBattlePassScreenS18::TutorialTooltip_StylePoints' has a wrong offset!");

// Class BattlePassS18UI.FortBattlePassResourcesWidgetS18
// 0x0020 (0x02D0 - 0x02B0)
class UFortBattlePassResourcesWidgetS18 : public UFortBattlePassResourcesWidgetBase
{
public:
	class UCommonTextBlock*                       Text_BattleStarsAmount;                            // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_StylePointsAmount;                            // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Border_StylePointsRewardsTag;                      // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Border_BattleStarsRewardsTag;                      // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnBattleStarRewardsSet(const int32 Rewards);
	void OnStylePointsRewardsSet(const int32 Rewards);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortBattlePassResourcesWidgetS18">();
	}
	static class UFortBattlePassResourcesWidgetS18* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortBattlePassResourcesWidgetS18>();
	}
};
static_assert(alignof(UFortBattlePassResourcesWidgetS18) == 0x000008, "Wrong alignment on UFortBattlePassResourcesWidgetS18");
static_assert(sizeof(UFortBattlePassResourcesWidgetS18) == 0x0002D0, "Wrong size on UFortBattlePassResourcesWidgetS18");
static_assert(offsetof(UFortBattlePassResourcesWidgetS18, Text_BattleStarsAmount) == 0x0002B0, "Member 'UFortBattlePassResourcesWidgetS18::Text_BattleStarsAmount' has a wrong offset!");
static_assert(offsetof(UFortBattlePassResourcesWidgetS18, Text_StylePointsAmount) == 0x0002B8, "Member 'UFortBattlePassResourcesWidgetS18::Text_StylePointsAmount' has a wrong offset!");
static_assert(offsetof(UFortBattlePassResourcesWidgetS18, Border_StylePointsRewardsTag) == 0x0002C0, "Member 'UFortBattlePassResourcesWidgetS18::Border_StylePointsRewardsTag' has a wrong offset!");
static_assert(offsetof(UFortBattlePassResourcesWidgetS18, Border_BattleStarsRewardsTag) == 0x0002C8, "Member 'UFortBattlePassResourcesWidgetS18::Border_BattleStarsRewardsTag' has a wrong offset!");

// Class BattlePassS18UI.FortBattlePassTutorialTooltipS18
// 0x0010 (0x0298 - 0x0288)
class UFortBattlePassTutorialTooltipS18 : public UCommonUserWidget
{
public:
	class UCommonRichTextBlock*                   Text_Tooltip;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_290[0x8];                                      // 0x0290(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HideTooltip();
	void SetText(const class FText& Text);
	void ShowTooltip();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortBattlePassTutorialTooltipS18">();
	}
	static class UFortBattlePassTutorialTooltipS18* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortBattlePassTutorialTooltipS18>();
	}
};
static_assert(alignof(UFortBattlePassTutorialTooltipS18) == 0x000008, "Wrong alignment on UFortBattlePassTutorialTooltipS18");
static_assert(sizeof(UFortBattlePassTutorialTooltipS18) == 0x000298, "Wrong size on UFortBattlePassTutorialTooltipS18");
static_assert(offsetof(UFortBattlePassTutorialTooltipS18, Text_Tooltip) == 0x000288, "Member 'UFortBattlePassTutorialTooltipS18::Text_Tooltip' has a wrong offset!");

}

