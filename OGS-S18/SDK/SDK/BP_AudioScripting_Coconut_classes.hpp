#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AudioScripting_Coconut

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AudioScripting_Parent_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AudioScripting_Coconut.BP_AudioScripting_Coconut_C
// 0x0060 (0x0390 - 0x0330)
class ABP_AudioScripting_Coconut_C final : public ABP_AudioScripting_Parent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AudioScripting_Coconut_C;        // 0x0330(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Coconut_TOD_Ambiance_AC;                           // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimespanRatio;                                     // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Sound_Parameter_Name;                              // 0x0344(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Ambiance_SFX;                                      // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fade_Out_Duration;                                 // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timespan_Min;                                      // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timespan_Max;                                      // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Print_to_Screen;                                   // 0x0364(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Coconut_Master_C*                   CoconutMasterRef;                                  // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggerTime;                                       // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    Coconut_LevelSequence_Ref;                         // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Coconut_Sequence_Length;                           // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Handle_ChangeAudio;                                // 0x0388(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AudioScripting_Coconut(int32 EntryPoint);
	void InitalizeAmbientVariables();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void HandleChangeAudioParameter(float TimespanRatio_0);
	void ChangeAudioParameter();
	void SpawnAmbianceSound();
	void ReceiveBeginPlay();
	void FadeOutAmbianceAC();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AudioScripting_Coconut_C">();
	}
	static class ABP_AudioScripting_Coconut_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AudioScripting_Coconut_C>();
	}
};
static_assert(alignof(ABP_AudioScripting_Coconut_C) == 0x000008, "Wrong alignment on ABP_AudioScripting_Coconut_C");
static_assert(sizeof(ABP_AudioScripting_Coconut_C) == 0x000390, "Wrong size on ABP_AudioScripting_Coconut_C");
static_assert(offsetof(ABP_AudioScripting_Coconut_C, UberGraphFrame_BP_AudioScripting_Coconut_C) == 0x000330, "Member 'ABP_AudioScripting_Coconut_C::UberGraphFrame_BP_AudioScripting_Coconut_C' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Coconut_C, Coconut_TOD_Ambiance_AC) == 0x000338, "Member 'ABP_AudioScripting_Coconut_C::Coconut_TOD_Ambiance_AC' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Coconut_C, TimespanRatio) == 0x000340, "Member 'ABP_AudioScripting_Coconut_C::TimespanRatio' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Coconut_C, Sound_Parameter_Name) == 0x000344, "Member 'ABP_AudioScripting_Coconut_C::Sound_Parameter_Name' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Coconut_C, Ambiance_SFX) == 0x000350, "Member 'ABP_AudioScripting_Coconut_C::Ambiance_SFX' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Coconut_C, Fade_Out_Duration) == 0x000358, "Member 'ABP_AudioScripting_Coconut_C::Fade_Out_Duration' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Coconut_C, Timespan_Min) == 0x00035C, "Member 'ABP_AudioScripting_Coconut_C::Timespan_Min' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Coconut_C, Timespan_Max) == 0x000360, "Member 'ABP_AudioScripting_Coconut_C::Timespan_Max' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Coconut_C, Print_to_Screen) == 0x000364, "Member 'ABP_AudioScripting_Coconut_C::Print_to_Screen' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Coconut_C, CoconutMasterRef) == 0x000368, "Member 'ABP_AudioScripting_Coconut_C::CoconutMasterRef' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Coconut_C, TriggerTime) == 0x000370, "Member 'ABP_AudioScripting_Coconut_C::TriggerTime' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Coconut_C, Coconut_LevelSequence_Ref) == 0x000378, "Member 'ABP_AudioScripting_Coconut_C::Coconut_LevelSequence_Ref' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Coconut_C, Coconut_Sequence_Length) == 0x000380, "Member 'ABP_AudioScripting_Coconut_C::Coconut_Sequence_Length' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Coconut_C, Handle_ChangeAudio) == 0x000388, "Member 'ABP_AudioScripting_Coconut_C::Handle_ChangeAudio' has a wrong offset!");

}

