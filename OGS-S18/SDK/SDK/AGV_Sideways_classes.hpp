#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AGV_Sideways

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass AGV_Sideways.AGV_Sideways_C
// 0x0088 (0x02A8 - 0x0220)
class AAGV_Sideways_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioGameplayVolumeProxyComponent*     AudioGameplayVolumeProxy;                          // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioShapeSphereComponent*             AudioShapeSphere;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAttenuationVolumeComponent*            AttenuationVolume;                                 // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFilterVolumeComponent*                 FilterVolume;                                      // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USubmixSendVolumeComponent*             SubmixSendVolume;                                  // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FFortSubmixAnalyzerData                AGVAnalysisSettings;                               // 0x0258(0x0048)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         RadiusPadding;                                     // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AGV_Sideways(int32 EntryPoint);
	void ReceiveBeginPlay();
	void BndEvt__AudioShapeSphere_K2Node_ComponentBoundEvent_2_OnAudioShapeInsideStateChanged__DelegateSignature(bool bIsInside);
	void SetRadius(float InRadius);
	void IsOptimized(bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AGV_Sideways_C">();
	}
	static class AAGV_Sideways_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAGV_Sideways_C>();
	}
};
static_assert(alignof(AAGV_Sideways_C) == 0x000008, "Wrong alignment on AAGV_Sideways_C");
static_assert(sizeof(AAGV_Sideways_C) == 0x0002A8, "Wrong size on AAGV_Sideways_C");
static_assert(offsetof(AAGV_Sideways_C, UberGraphFrame) == 0x000220, "Member 'AAGV_Sideways_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AAGV_Sideways_C, AudioGameplayVolumeProxy) == 0x000228, "Member 'AAGV_Sideways_C::AudioGameplayVolumeProxy' has a wrong offset!");
static_assert(offsetof(AAGV_Sideways_C, AudioShapeSphere) == 0x000230, "Member 'AAGV_Sideways_C::AudioShapeSphere' has a wrong offset!");
static_assert(offsetof(AAGV_Sideways_C, AttenuationVolume) == 0x000238, "Member 'AAGV_Sideways_C::AttenuationVolume' has a wrong offset!");
static_assert(offsetof(AAGV_Sideways_C, FilterVolume) == 0x000240, "Member 'AAGV_Sideways_C::FilterVolume' has a wrong offset!");
static_assert(offsetof(AAGV_Sideways_C, SubmixSendVolume) == 0x000248, "Member 'AAGV_Sideways_C::SubmixSendVolume' has a wrong offset!");
static_assert(offsetof(AAGV_Sideways_C, DefaultSceneRoot) == 0x000250, "Member 'AAGV_Sideways_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AAGV_Sideways_C, AGVAnalysisSettings) == 0x000258, "Member 'AAGV_Sideways_C::AGVAnalysisSettings' has a wrong offset!");
static_assert(offsetof(AAGV_Sideways_C, RadiusPadding) == 0x0002A0, "Member 'AAGV_Sideways_C::RadiusPadding' has a wrong offset!");

}

