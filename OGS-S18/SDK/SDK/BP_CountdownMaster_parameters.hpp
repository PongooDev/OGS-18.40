#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CountdownMaster

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_CountdownMaster.BP_CountdownMaster_C.ExecuteUbergraph_BP_CountdownMaster
// 0x0004 (0x0004 - 0x0000)
struct BP_CountdownMaster_C_ExecuteUbergraph_BP_CountdownMaster final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CountdownMaster_C_ExecuteUbergraph_BP_CountdownMaster) == 0x000004, "Wrong alignment on BP_CountdownMaster_C_ExecuteUbergraph_BP_CountdownMaster");
static_assert(sizeof(BP_CountdownMaster_C_ExecuteUbergraph_BP_CountdownMaster) == 0x000004, "Wrong size on BP_CountdownMaster_C_ExecuteUbergraph_BP_CountdownMaster");
static_assert(offsetof(BP_CountdownMaster_C_ExecuteUbergraph_BP_CountdownMaster, EntryPoint) == 0x000000, "Member 'BP_CountdownMaster_C_ExecuteUbergraph_BP_CountdownMaster::EntryPoint' has a wrong offset!");

// Function BP_CountdownMaster.BP_CountdownMaster_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct BP_CountdownMaster_C_UserConstructionScript final
{
public:
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CountdownMaster_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_CountdownMaster_C_UserConstructionScript");
static_assert(sizeof(BP_CountdownMaster_C_UserConstructionScript) == 0x000008, "Wrong size on BP_CountdownMaster_C_UserConstructionScript");
static_assert(offsetof(BP_CountdownMaster_C_UserConstructionScript, CallFunc_FMax_ReturnValue) == 0x000000, "Member 'BP_CountdownMaster_C_UserConstructionScript::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_CountdownMaster_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_CountdownMaster.BP_CountdownMaster_C.HandleMaterialPropertyOverrides
// 0x0006 (0x0006 - 0x0000)
struct BP_CountdownMaster_C_HandleMaterialPropertyOverrides final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OverrideComponentMaterial_bSuccesful;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OverrideComponentMaterial_bSuccesful_1;   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OverrideComponentMaterial_bSuccesful_2;   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CountdownMaster_C_HandleMaterialPropertyOverrides) == 0x000001, "Wrong alignment on BP_CountdownMaster_C_HandleMaterialPropertyOverrides");
static_assert(sizeof(BP_CountdownMaster_C_HandleMaterialPropertyOverrides) == 0x000006, "Wrong size on BP_CountdownMaster_C_HandleMaterialPropertyOverrides");
static_assert(offsetof(BP_CountdownMaster_C_HandleMaterialPropertyOverrides, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_CountdownMaster_C_HandleMaterialPropertyOverrides::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_HandleMaterialPropertyOverrides, CallFunc_OverrideComponentMaterial_bSuccesful) == 0x000001, "Member 'BP_CountdownMaster_C_HandleMaterialPropertyOverrides::CallFunc_OverrideComponentMaterial_bSuccesful' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_HandleMaterialPropertyOverrides, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'BP_CountdownMaster_C_HandleMaterialPropertyOverrides::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_HandleMaterialPropertyOverrides, CallFunc_OverrideComponentMaterial_bSuccesful_1) == 0x000003, "Member 'BP_CountdownMaster_C_HandleMaterialPropertyOverrides::CallFunc_OverrideComponentMaterial_bSuccesful_1' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_HandleMaterialPropertyOverrides, CallFunc_IsValid_ReturnValue_2) == 0x000004, "Member 'BP_CountdownMaster_C_HandleMaterialPropertyOverrides::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_HandleMaterialPropertyOverrides, CallFunc_OverrideComponentMaterial_bSuccesful_2) == 0x000005, "Member 'BP_CountdownMaster_C_HandleMaterialPropertyOverrides::CallFunc_OverrideComponentMaterial_bSuccesful_2' has a wrong offset!");

// Function BP_CountdownMaster.BP_CountdownMaster_C.OverrideComponentMaterial
// 0x0018 (0x0018 - 0x0000)
struct BP_CountdownMaster_C_OverrideComponentMaterial final
{
public:
	class UPrimitiveComponent*                    InComponent;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     OverrideMaterial;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ElementIndex;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccesful;                                        // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CountdownMaster_C_OverrideComponentMaterial) == 0x000008, "Wrong alignment on BP_CountdownMaster_C_OverrideComponentMaterial");
static_assert(sizeof(BP_CountdownMaster_C_OverrideComponentMaterial) == 0x000018, "Wrong size on BP_CountdownMaster_C_OverrideComponentMaterial");
static_assert(offsetof(BP_CountdownMaster_C_OverrideComponentMaterial, InComponent) == 0x000000, "Member 'BP_CountdownMaster_C_OverrideComponentMaterial::InComponent' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_OverrideComponentMaterial, OverrideMaterial) == 0x000008, "Member 'BP_CountdownMaster_C_OverrideComponentMaterial::OverrideMaterial' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_OverrideComponentMaterial, ElementIndex) == 0x000010, "Member 'BP_CountdownMaster_C_OverrideComponentMaterial::ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_OverrideComponentMaterial, bSuccesful) == 0x000014, "Member 'BP_CountdownMaster_C_OverrideComponentMaterial::bSuccesful' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_OverrideComponentMaterial, CallFunc_IsValid_ReturnValue) == 0x000015, "Member 'BP_CountdownMaster_C_OverrideComponentMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_OverrideComponentMaterial, CallFunc_IsValid_ReturnValue_1) == 0x000016, "Member 'BP_CountdownMaster_C_OverrideComponentMaterial::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_OverrideComponentMaterial, CallFunc_BooleanAND_ReturnValue) == 0x000017, "Member 'BP_CountdownMaster_C_OverrideComponentMaterial::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_CountdownMaster.BP_CountdownMaster_C.SetHologramRelativeTransform
// 0x0144 (0x0144 - 0x0000)
struct BP_CountdownMaster_C_SetHologramRelativeTransform final
{
public:
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0018(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x00BC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_CountdownMaster_C_SetHologramRelativeTransform) == 0x000004, "Wrong alignment on BP_CountdownMaster_C_SetHologramRelativeTransform");
static_assert(sizeof(BP_CountdownMaster_C_SetHologramRelativeTransform) == 0x000144, "Wrong size on BP_CountdownMaster_C_SetHologramRelativeTransform");
static_assert(offsetof(BP_CountdownMaster_C_SetHologramRelativeTransform, CallFunc_MakeVector_ReturnValue) == 0x000000, "Member 'BP_CountdownMaster_C_SetHologramRelativeTransform::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_SetHologramRelativeTransform, CallFunc_BreakVector_X) == 0x00000C, "Member 'BP_CountdownMaster_C_SetHologramRelativeTransform::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_SetHologramRelativeTransform, CallFunc_BreakVector_Y) == 0x000010, "Member 'BP_CountdownMaster_C_SetHologramRelativeTransform::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_SetHologramRelativeTransform, CallFunc_BreakVector_Z) == 0x000014, "Member 'BP_CountdownMaster_C_SetHologramRelativeTransform::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_SetHologramRelativeTransform, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000018, "Member 'BP_CountdownMaster_C_SetHologramRelativeTransform::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_SetHologramRelativeTransform, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000A0, "Member 'BP_CountdownMaster_C_SetHologramRelativeTransform::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_SetHologramRelativeTransform, CallFunc_Divide_VectorFloat_ReturnValue) == 0x0000A4, "Member 'BP_CountdownMaster_C_SetHologramRelativeTransform::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_SetHologramRelativeTransform, CallFunc_MakeVector_ReturnValue_1) == 0x0000B0, "Member 'BP_CountdownMaster_C_SetHologramRelativeTransform::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_SetHologramRelativeTransform, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x0000BC, "Member 'BP_CountdownMaster_C_SetHologramRelativeTransform::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");

// Function BP_CountdownMaster.BP_CountdownMaster_C.HandleHLODMaterialOverrides
// 0x0004 (0x0004 - 0x0000)
struct BP_CountdownMaster_C_HandleHLODMaterialOverrides final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OverrideComponentMaterial_bSuccesful;     // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OverrideComponentMaterial_bSuccesful_1;   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CountdownMaster_C_HandleHLODMaterialOverrides) == 0x000001, "Wrong alignment on BP_CountdownMaster_C_HandleHLODMaterialOverrides");
static_assert(sizeof(BP_CountdownMaster_C_HandleHLODMaterialOverrides) == 0x000004, "Wrong size on BP_CountdownMaster_C_HandleHLODMaterialOverrides");
static_assert(offsetof(BP_CountdownMaster_C_HandleHLODMaterialOverrides, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_CountdownMaster_C_HandleHLODMaterialOverrides::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_HandleHLODMaterialOverrides, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_CountdownMaster_C_HandleHLODMaterialOverrides::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_HandleHLODMaterialOverrides, CallFunc_OverrideComponentMaterial_bSuccesful) == 0x000002, "Member 'BP_CountdownMaster_C_HandleHLODMaterialOverrides::CallFunc_OverrideComponentMaterial_bSuccesful' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_HandleHLODMaterialOverrides, CallFunc_OverrideComponentMaterial_bSuccesful_1) == 0x000003, "Member 'BP_CountdownMaster_C_HandleHLODMaterialOverrides::CallFunc_OverrideComponentMaterial_bSuccesful_1' has a wrong offset!");

// Function BP_CountdownMaster.BP_CountdownMaster_C.HandleSetupMIDs
// 0x0030 (0x0030 - 0x0000)
struct BP_CountdownMaster_C_HandleSetupMIDs final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CountdownMaster_C_HandleSetupMIDs) == 0x000008, "Wrong alignment on BP_CountdownMaster_C_HandleSetupMIDs");
static_assert(sizeof(BP_CountdownMaster_C_HandleSetupMIDs) == 0x000030, "Wrong size on BP_CountdownMaster_C_HandleSetupMIDs");
static_assert(offsetof(BP_CountdownMaster_C_HandleSetupMIDs, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_CountdownMaster_C_HandleSetupMIDs::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_HandleSetupMIDs, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'BP_CountdownMaster_C_HandleSetupMIDs::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_HandleSetupMIDs, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x00000C, "Member 'BP_CountdownMaster_C_HandleSetupMIDs::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_HandleSetupMIDs, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000020, "Member 'BP_CountdownMaster_C_HandleSetupMIDs::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_HandleSetupMIDs, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000028, "Member 'BP_CountdownMaster_C_HandleSetupMIDs::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");

// Function BP_CountdownMaster.BP_CountdownMaster_C.SetupVisibility
// 0x0050 (0x0050 - 0x0000)
struct BP_CountdownMaster_C_SetupVisibility final
{
public:
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array_1;                          // 0x0018(0x0010)(ReferenceParm)
	TArray<int32>                                 K2Node_MakeArray_Array_2;                          // 0x0028(0x0010)(ReferenceParm)
	TArray<int32>                                 K2Node_MakeArray_Array_3;                          // 0x0038(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CountdownMaster_C_SetupVisibility) == 0x000008, "Wrong alignment on BP_CountdownMaster_C_SetupVisibility");
static_assert(sizeof(BP_CountdownMaster_C_SetupVisibility) == 0x000050, "Wrong size on BP_CountdownMaster_C_SetupVisibility");
static_assert(offsetof(BP_CountdownMaster_C_SetupVisibility, K2Node_MakeArray_Array) == 0x000000, "Member 'BP_CountdownMaster_C_SetupVisibility::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_SetupVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'BP_CountdownMaster_C_SetupVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_SetupVisibility, K2Node_MakeArray_Array_1) == 0x000018, "Member 'BP_CountdownMaster_C_SetupVisibility::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_SetupVisibility, K2Node_MakeArray_Array_2) == 0x000028, "Member 'BP_CountdownMaster_C_SetupVisibility::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_SetupVisibility, K2Node_MakeArray_Array_3) == 0x000038, "Member 'BP_CountdownMaster_C_SetupVisibility::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_SetupVisibility, CallFunc_BooleanAND_ReturnValue_1) == 0x000048, "Member 'BP_CountdownMaster_C_SetupVisibility::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_CountdownMaster.BP_CountdownMaster_C.StartCountdownAudio
// 0x0028 (0x0028 - 0x0000)
struct BP_CountdownMaster_C_StartCountdownAudio final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CountdownMaster_C_StartCountdownAudio) == 0x000008, "Wrong alignment on BP_CountdownMaster_C_StartCountdownAudio");
static_assert(sizeof(BP_CountdownMaster_C_StartCountdownAudio) == 0x000028, "Wrong size on BP_CountdownMaster_C_StartCountdownAudio");
static_assert(offsetof(BP_CountdownMaster_C_StartCountdownAudio, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_CountdownMaster_C_StartCountdownAudio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_StartCountdownAudio, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'BP_CountdownMaster_C_StartCountdownAudio::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_StartCountdownAudio, CallFunc_SelectVector_ReturnValue) == 0x000010, "Member 'BP_CountdownMaster_C_StartCountdownAudio::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_StartCountdownAudio, CallFunc_IsValid_ReturnValue_1) == 0x00001C, "Member 'BP_CountdownMaster_C_StartCountdownAudio::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_StartCountdownAudio, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000020, "Member 'BP_CountdownMaster_C_StartCountdownAudio::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");

// Function BP_CountdownMaster.BP_CountdownMaster_C.StopCountdownAudio
// 0x0014 (0x0014 - 0x0000)
struct BP_CountdownMaster_C_StopCountdownAudio final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CountdownMaster_C_StopCountdownAudio) == 0x000004, "Wrong alignment on BP_CountdownMaster_C_StopCountdownAudio");
static_assert(sizeof(BP_CountdownMaster_C_StopCountdownAudio) == 0x000014, "Wrong size on BP_CountdownMaster_C_StopCountdownAudio");
static_assert(offsetof(BP_CountdownMaster_C_StopCountdownAudio, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_CountdownMaster_C_StopCountdownAudio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_StopCountdownAudio, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_CountdownMaster_C_StopCountdownAudio::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_StopCountdownAudio, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000004, "Member 'BP_CountdownMaster_C_StopCountdownAudio::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CountdownMaster_C_StopCountdownAudio, CallFunc_IsValid_ReturnValue_2) == 0x000010, "Member 'BP_CountdownMaster_C_StopCountdownAudio::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

}

