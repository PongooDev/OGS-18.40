#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerSidewaysComponent

#include "Basic.hpp"

#include "PlayerSidewaysComponent_classes.hpp"
#include "PlayerSidewaysComponent_parameters.hpp"


namespace SDK
{

// Function PlayerSidewaysComponent.PlayerSidewaysComponent_C.ExecuteUbergraph_PlayerSidewaysComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerSidewaysComponent_C::ExecuteUbergraph_PlayerSidewaysComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerSidewaysComponent_C", "ExecuteUbergraph_PlayerSidewaysComponent");

	Params::PlayerSidewaysComponent_C_ExecuteUbergraph_PlayerSidewaysComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerSidewaysComponent.PlayerSidewaysComponent_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerSidewaysComponent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerSidewaysComponent_C", "ReceiveEndPlay");

	Params::PlayerSidewaysComponent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerSidewaysComponent.PlayerSidewaysComponent_C.WaitForValidAbilitySystem
// (BlueprintCallable, BlueprintEvent)

void UPlayerSidewaysComponent_C::WaitForValidAbilitySystem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerSidewaysComponent_C", "WaitForValidAbilitySystem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerSidewaysComponent.PlayerSidewaysComponent_C.HandleSidewaysStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ASidewaysPlayspace*               NewSidewaysPlayspace                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESidewaysState                          OldState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESidewaysState                          NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerSidewaysComponent_C::HandleSidewaysStateChanged(class ASidewaysPlayspace* NewSidewaysPlayspace, ESidewaysState OldState, ESidewaysState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerSidewaysComponent_C", "HandleSidewaysStateChanged");

	Params::PlayerSidewaysComponent_C_HandleSidewaysStateChanged Parms{};

	Parms.NewSidewaysPlayspace = NewSidewaysPlayspace;
	Parms.OldState = OldState;
	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerSidewaysComponent.PlayerSidewaysComponent_C.UpdateGameplayAbilities
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortAbilitySystemComponent*      AbilitySystemComponent                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESidewaysState                          SidewaysState_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerSidewaysComponent_C::UpdateGameplayAbilities(class UFortAbilitySystemComponent* AbilitySystemComponent, ESidewaysState SidewaysState_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerSidewaysComponent_C", "UpdateGameplayAbilities");

	Params::PlayerSidewaysComponent_C_UpdateGameplayAbilities Parms{};

	Parms.AbilitySystemComponent = AbilitySystemComponent;
	Parms.SidewaysState_0 = SidewaysState_0;

	UObject::ProcessEvent(Func, &Parms);
}

}

