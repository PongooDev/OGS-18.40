#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerPawn_Athena

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FCreativeEffectColorIndex_structs.hpp"
#include "PawnHighlight_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "PlayerPawn_Athena_Generic_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PlayerPawn_Athena.PlayerPawn_Athena_C
// 0x06A0 (0x4AF0 - 0x4450)
class APlayerPawn_Athena_C final : public APlayerPawn_Athena_Generic_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_PlayerPawn_Athena_C;                // 0x4448(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortContrailsComponent*                FortContrails;                                     // 0x4450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortUnderwaterDamageComponent*         FortUnderwaterDamage;                              // 0x4458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_BlendWeight_A4943458400C3662DB243099F9EAC7E8; // 0x4460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_A4943458400C3662DB243099F9EAC7E8; // 0x4464(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4465[0x3];                                     // 0x4465(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x4468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 TargetHead;                                        // 0x4470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 TargetBody;                                        // 0x4478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             PawnHeadMaterials_0;                               // 0x4480(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UMaterialInterface*>             PawnBodyMaterials_0;                               // 0x4490(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_FlakVest;                                       // 0x44A0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayEventData                     Event_Data;                                        // 0x44C0(0x00B0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           EventSpawnEffect;                                  // 0x4570(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMale;                                            // 0x4578(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4579[0x7];                                     // 0x4579(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWeapon*                            MenuGoingCommandowWeapon;                          // 0x4580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SafeZonePassThroughSound;                          // 0x4588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasBeenOutsideSafeZone;                           // 0x4590(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4591[0x3];                                     // 0x4591(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ThreatColor;                                       // 0x4594(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45A4[0x4];                                     // 0x45A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             PlayerKilledSound;                                 // 0x45A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               WindDebrisParticles;                               // 0x45B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               FallingRainParticles;                              // 0x45B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               StormAuraParticles;                                // 0x45C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LightningSpawnLocation;                            // 0x45C8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningIntensityMin;                             // 0x45D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningIntensityMax;                             // 0x45D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45DC[0x4];                                     // 0x45DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 SafeZoneActor;                                     // 0x45E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningIntensity;                                // 0x45E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45EC[0x4];                                     // 0x45EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPointLightComponent*                   RandomLightningLight;                              // 0x45F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningTimelinePlaySpeedMin;                     // 0x45F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningTimelinePlaySpeedMax;                     // 0x45FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningFlashDiameter;                            // 0x4600(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningFlashHeight;                              // 0x4604(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningFlashRepeatDelayMin;                      // 0x4608(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningFlashRepeatDelayMax;                      // 0x460C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEmitterCameraLensEffectBase*           RainCameraLensParticles;                           // 0x4610(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _ChanceOfLightningMesh;                            // 0x4618(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowInvulnerableVisuals;                           // 0x461C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461D[0x3];                                     // 0x461D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        StormAudioLoop_Inst;                               // 0x4620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StormAudioVolume;                                  // 0x4628(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_462C[0x4];                                     // 0x462C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        FallingAudioLoop_Inst;                             // 0x4630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPlayingFallingSound;                            // 0x4638(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4639[0x3];                                     // 0x4639(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlayerAttributes_Speed_Walk;                       // 0x463C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerAttributes_Speed_Run;                        // 0x4640(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerAttributes_Speed_Sprint;                     // 0x4644(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxTrailsLOD;                                      // 0x4648(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464C[0x4];                                     // 0x464C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  MobilePostProcess;                                 // 0x4650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsOutsideSafeZoneCached;                          // 0x4658(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4659[0x7];                                     // 0x4659(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       ResOutMaterials;                                   // 0x4660(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ADuplicateResOutMesh_C*                 RezInFXActor;                                      // 0x4670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bQueueRezIn;                                       // 0x4678(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4679[0x7];                                     // 0x4679(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADuplicateResOutMesh_C*                 RezOutFXActor;                                     // 0x4680(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bQueueRezOut;                                      // 0x4688(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWasEverInWarmUp;                                  // 0x4689(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bStormAudioCleanedUp;                              // 0x468A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_468B[0x5];                                     // 0x468B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Box_Local_Transform;                               // 0x4690(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         BoundsRadius;                                      // 0x46C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C4[0x4];                                     // 0x46C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPointLightComponent*                   TeleportationPointLight;                           // 0x46C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxLightIntensity;                                 // 0x46D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Socket_MeshTop;                                    // 0x46D4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Socket_MeshBot;                                    // 0x46DC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MIDParam_Transition;                               // 0x46E4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MIDParam_DissolvePercent;                          // 0x46EC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MIDParam_DissolveDirection;                        // 0x46F4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MIDParam_DissolveBaseLoc;                          // 0x46FC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MIDParam_DissolveDistance;                         // 0x4704(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MIDParam_DissolveFirstSpawn;                       // 0x470C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4714[0x4];                                     // 0x4714(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Mat_CharacterDissolve;                             // 0x4718(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       DissolveMIDs;                                      // 0x4720(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bUseNewTeleportFX;                                 // 0x4730(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4731[0x3];                                     // 0x4731(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           OutsideSafeZoneGameplayCueTag;                     // 0x4734(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         SafeZonePhase;                                     // 0x473C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WhichSafeZoneTag;                                  // 0x4740(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOutsideSafeZoneGameplayCueActive;                 // 0x4744(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4745[0x3];                                     // 0x4745(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         SafeZoneDamageScalableFloat;                       // 0x4748(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bFrontendPartyInProgress;                          // 0x4770(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bLockOnInteractionComplete;                        // 0x4771(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4772[0x6];                                     // 0x4772(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              ResIn;                                             // 0x4778(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              ResOut;                                            // 0x4788(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              SwingRight;                                        // 0x4798(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              SwingLeft;                                         // 0x47A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bSkeletalArrayReady;                               // 0x47B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47B9[0x3];                                     // 0x47B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurDissolveSetupAttempt;                           // 0x47BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             DBNOEnterSound;                                    // 0x47C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              onFadeToWhiteTeleported;                           // 0x47C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Is_Ashton;                                         // 0x47D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47D9[0x7];                                     // 0x47D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               Ashton;                                            // 0x47E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              SwingRightEnd;                                     // 0x47E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              SwingLeftEnd;                                      // 0x47F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FGameplayTag                           PhoneGhostCue;                                     // 0x4808(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           WhiteoutCue;                                       // 0x4810(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           OutsideSafeZoneCue;                                // 0x4818(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           OutsideSafeZone2Cue;                               // 0x4820(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           OutsideSafeZone3Cue;                               // 0x4828(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayRespawnFXOnSpawn;                              // 0x4830(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_4831[0x7];                                     // 0x4831(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  PlayerPawnAthena;                                  // 0x4838(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              SwingRight2;                                       // 0x4840(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              SwingLeft2;                                        // 0x4850(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          TestProceduralWaterInIsolation;                    // 0x4860(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          NewVar_0;                                          // 0x4861(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Is_First_Water_Body;                               // 0x4862(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Is_Last_Water_Body;                                // 0x4863(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         AccumulatedNormalizedDiveSpeed;                    // 0x4864(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           WaterSprintBoostTag;                               // 0x4868(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(bool IsHidden)> CCPM_isHiddenInProp;                               // 0x4870(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMap<class UObject*, struct FPawnHighlight>   PawnHighlights;                                    // 0x4880(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UObject*                                Current_Highlight_Source;                          // 0x48D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Current_Highlight_Priority;                        // 0x48D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPawnHighlight                         Invulnerable_Highlight;                            // 0x48DC(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFCreativeEffectColorIndex             LastCreativeEffectColorIndex;                      // 0x490C(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGalileo;                                         // 0x4914(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4915[0x3];                                     // 0x4915(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         HotFixSnow;                                        // 0x4918(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSet<class FName>                             NoSnowPlaylists;                                   // 0x4940(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           GalileoPlaylistTag;                                // 0x4990(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       WeaponMIDs;                                        // 0x4998(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         AmountOfTimesToAttemptRestoreMats;                 // 0x49A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TC_PawnAthenaNPC;                                  // 0x49AC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         HitGlowBrightnessScalar;                           // 0x49B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CurrentWeaponMaterials;                            // 0x49B8(0x0010)(Edit, BlueprintVisible)
	TArray<class USkeletalMeshComponent*>         CurrentWeaponMeshes;                               // 0x49C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UMaterialInstanceDynamic*>       WeaponDissolveMIDs;                                // 0x49D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         HitGlowBrightnessScalar_Mobile;                    // 0x49E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TC_PawnAthenaDecoy;                                // 0x49EC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         ScaleRate;                                         // 0x49F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TetherQuestTag;                                    // 0x49F8(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class FName                                   FirefliesTag;                                      // 0x4A18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RightSideRim_Transform;                            // 0x4A20(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USpotLightComponent*                    Right_Side_Rim_Light;                              // 0x4A50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rim_light_Shadow_Bias;                             // 0x4A58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rim_Light_Attenuation_Radius;                      // 0x4A5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rim_Light_Intensity;                               // 0x4A60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               PlayerAimRotation;                                 // 0x4A64(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FScalableFloat                         ControlRotationReplicationTickRate;                // 0x4A70(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           Elimination_Rez_Sequence_GC;                       // 0x4A98(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Creative_Respawn_Teleportation_GC;                 // 0x4AA0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Teleport_In_GC;                                    // 0x4AA8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         RimlightDistanceFromCamera;                        // 0x4AB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RimlightOffsetFromCamera;                          // 0x4AB4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Rim_Light_Color___Night;                           // 0x4AB8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Rim_Light_Color___Day;                             // 0x4AC8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PhoneModeratorModeGameplayCue;                     // 0x4AD8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PhoneInvulnerableGameplayCue;                      // 0x4AE0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         InputDragCoefficient;                              // 0x4AE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToggleSwingNativized;                              // 0x4AEC(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_PlayerPawn_Athena(int32 EntryPoint);
	void OnCreativeStopInvulnerable();
	void OnCreativeStartInvulnerable();
	void OnCreativeModeratorModeDeactivate();
	void OnCreativeModeratorModeActivate();
	void ApplyColdTag_Retry(class UFortAbilitySystemComponent* AbilitySystemComponent_0, class AFortPlayerPawn* AffectedPawn);
	void ApplyColdTag();
	void SetupColdTag();
	void GameplayCue_Shield_PotionConsumed(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Damage_Shielded(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Healing(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Damage(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void AimTick();
	void ReplicateAimRotation(const struct FRotator& PlayerAimRotation_0);
	void EndRotationTick();
	void StartAImRotationTick();
	void OnTetherEnded(class APawn* LastTetherPawn);
	void OnTetherStarted(class APawn* LastTetherPawn);
	void OnTetheredExitReleased();
	void OnTetheredExitPressed();
	void ScalePlayerDown();
	void ScalePlayerUp();
	void OnLandscapeCheckFailedAndTeleported();
	void ServerSetCreativeEffectColorIndex(const struct FFCreativeEffectColorIndex& Index_0);
	void isHiddingInProp(bool IsHidden);
	void OnBeginWaterSprintBoost();
	void K2_OnMovementModeChanged(EMovementMode PrevMovementMode, EMovementMode NewMovementMode, uint8 PrevCustomMode, uint8 NewCustomMode);
	void OnExitedWaterBody(class AFortWaterBodyActor* WaterBody, bool bIsLastBody);
	void OnEnteredWaterBody(class AFortWaterBodyActor* WaterBody, bool bIsFirstBody);
	void OnSpawnImmunityTimeReset();
	void Play_Respawn_FX();
	void OnSuccessfulBuildingEdit();
	void RemoveSafeZoneGameplayCueServerToClient();
	void AddSafeZoneGameplayCue();
	void MeleeSwingRight_End();
	void MeleeSwingLeft_End();
	void GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void OnCreativeStartGhost();
	void OnCreativeStopGhost();
	void GameplayCue_Athena_Boost(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void WhiteoutAndTeleport(const struct FVector& DestLocation, const struct FRotator& DestRotation, bool Instant, float Gravity);
	void ClientRunSnowGC(bool Instant);
	void TeleportInNSeconds(float SecondsTillTeleport, const struct FVector& DestLocation, const struct FRotator& DestRotation);
	void GameplayCue_Athena_Reloading(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void ActivateInvincibleVisuals(float Duration);
	void GameplayCue_Abilities_Activation_DBNOEnter(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void MeleeSwingRight(bool First_Right);
	void MeleeSwingLeft(bool First_Left);
	void OnReceivedStormSurgeDamage();
	void RemoveSafeZoneGameplayCue();
	void OnOutsideSafeZonePhaseChanged(int32 SafeZonePhase_0);
	void SetSafeZoneTagWhenChanged(int32 NewWhichSafeZoneTag, const struct FGameplayTag& GameplayTag, bool bSpawnGameplayCue);
	void SetSafeZonePhaseAndGameplayCueTag(int32 InSafeZonePhase, bool bSpawnGameplayCue);
	void AddStormFX();
	void OnResInDuringWarmup();
	void OnCharacterCustomizationCompleted(class AFortPlayerPawn* Pawn);
	void OnEnteredReplayRelevancy();
	void OnLeftReplayRelevancy();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void NotifyTeammateSkydivedFromBus();
	void ReceivePossessed(class AController* NewController);
	void OnExitedWaterVolume();
	void OnEnteredWaterVolume();
	void ReceiveBeginPlay();
	void GameplayCue_Abilities_Activation_DBNOResurrect(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void RemoveStormFX();
	void GameplayCue_Athena_Player_BeingRevivedFromDBNO(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void GameplayCue_Athena_Equipping(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void SafeZoneStatusChanged();
	void ReceiveDestroyed();
	void OnReady_978607004CDEB137CACF38831BECEF40(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void UserConstructionScript();
	void InitAthenaFoleyAudio();
	void GetLocationInCircle_XY(struct FVector* LocationLocalSpace);
	void EnableWaterAudio(bool Is_Entering_Water);
	void StopLoopingAudio();
	void InWarmup(bool* bInWarmup);
	void OnStartLongInteract(class AActor* ReceivingActor, bool* Out_bConsumeEvent, bool* Out_bSkipSetInteractDuration, bool* Out_bSkipStartAnimation, EItemInteractionType* Out_ItemInteractionType);
	void QueueTeleportIn();
	void QueueTeleportOut();
	void FindBounds();
	void SpawnTeleportationLight();
	void UpdateDissolveFx(float Scalar_Transition, float Scalar_ZHeight, float Scalar_LightIntensity);
	void CleanupDissolveFX();
	void SetupDissolveFx();
	void SetPetHidden(bool NewHidden);
	void RestoreCharacterMats(bool* bFullyCompleted);
	void CleanUpTeleportationFXLight();
	void SetPartyInProgress(bool bIsPartyInProgress);
	void OnLockOnSearchCompleted(bool* bConsumeEvent);
	void LockonSearchCompleteTimedOut();
	void OnRep_PlayRespawnFXOnSpawn();
	void ApplyPawnHighlight(class UObject* Source, const struct FPawnHighlight& HitGlow);
	void Remove_Pawn_Highlight_from_Source(class UObject* Source);
	void Highlight_Pawn_from_Source(class UObject* Source, const struct FPawnHighlight& Highlight, bool Only_Update_If_Current);
	void Get_Highest_Priority_Highlight(class UObject** Source, struct FPawnHighlight* Top_Priority);
	void GalileoMaterialSetup();
	void AddSkeletalMeshComponentsFromWeaponObject(class AFortWeapon* WeaponObject);
	void RemoveSkeletalMeshComponentsFromWeaponObject(class AFortWeapon* WeaponObject);
	bool PawnIsNPC();
	bool PawnIsDecoy();
	void Validate_Rim_Light();
	void GetAimPoint(struct FRotator* ControlRotation);
	void OnRep_PlayerAimRotation();
	void handleCvarsUpdated(const class FString& CVarName);
	void Update_Rim_Light_Location();
	void Hide_Character_Parts(bool IsHidden);
	void K2_UpdateCustomMovement(float DeltaTime);
	void Get_Creative_Effect_Data(struct FFCreativeEffectColorIndex* Effect_Color);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerPawn_Athena_C">();
	}
	static class APlayerPawn_Athena_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayerPawn_Athena_C>();
	}
};
static_assert(alignof(APlayerPawn_Athena_C) == 0x000010, "Wrong alignment on APlayerPawn_Athena_C");
static_assert(sizeof(APlayerPawn_Athena_C) == 0x004AF0, "Wrong size on APlayerPawn_Athena_C");
static_assert(offsetof(APlayerPawn_Athena_C, UberGraphFrame_PlayerPawn_Athena_C) == 0x004448, "Member 'APlayerPawn_Athena_C::UberGraphFrame_PlayerPawn_Athena_C' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, FortContrails) == 0x004450, "Member 'APlayerPawn_Athena_C::FortContrails' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, FortUnderwaterDamage) == 0x004458, "Member 'APlayerPawn_Athena_C::FortUnderwaterDamage' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Timeline_0_BlendWeight_A4943458400C3662DB243099F9EAC7E8) == 0x004460, "Member 'APlayerPawn_Athena_C::Timeline_0_BlendWeight_A4943458400C3662DB243099F9EAC7E8' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Timeline_0__Direction_A4943458400C3662DB243099F9EAC7E8) == 0x004464, "Member 'APlayerPawn_Athena_C::Timeline_0__Direction_A4943458400C3662DB243099F9EAC7E8' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Timeline_0) == 0x004468, "Member 'APlayerPawn_Athena_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TargetHead) == 0x004470, "Member 'APlayerPawn_Athena_C::TargetHead' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TargetBody) == 0x004478, "Member 'APlayerPawn_Athena_C::TargetBody' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PawnHeadMaterials_0) == 0x004480, "Member 'APlayerPawn_Athena_C::PawnHeadMaterials_0' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PawnBodyMaterials_0) == 0x004490, "Member 'APlayerPawn_Athena_C::PawnBodyMaterials_0' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TC_FlakVest) == 0x0044A0, "Member 'APlayerPawn_Athena_C::TC_FlakVest' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Event_Data) == 0x0044C0, "Member 'APlayerPawn_Athena_C::Event_Data' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, EventSpawnEffect) == 0x004570, "Member 'APlayerPawn_Athena_C::EventSpawnEffect' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, IsMale) == 0x004578, "Member 'APlayerPawn_Athena_C::IsMale' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MenuGoingCommandowWeapon) == 0x004580, "Member 'APlayerPawn_Athena_C::MenuGoingCommandowWeapon' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SafeZonePassThroughSound) == 0x004588, "Member 'APlayerPawn_Athena_C::SafeZonePassThroughSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bHasBeenOutsideSafeZone) == 0x004590, "Member 'APlayerPawn_Athena_C::bHasBeenOutsideSafeZone' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ThreatColor) == 0x004594, "Member 'APlayerPawn_Athena_C::ThreatColor' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerKilledSound) == 0x0045A8, "Member 'APlayerPawn_Athena_C::PlayerKilledSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, WindDebrisParticles) == 0x0045B0, "Member 'APlayerPawn_Athena_C::WindDebrisParticles' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, FallingRainParticles) == 0x0045B8, "Member 'APlayerPawn_Athena_C::FallingRainParticles' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, StormAuraParticles) == 0x0045C0, "Member 'APlayerPawn_Athena_C::StormAuraParticles' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningSpawnLocation) == 0x0045C8, "Member 'APlayerPawn_Athena_C::LightningSpawnLocation' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningIntensityMin) == 0x0045D4, "Member 'APlayerPawn_Athena_C::LightningIntensityMin' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningIntensityMax) == 0x0045D8, "Member 'APlayerPawn_Athena_C::LightningIntensityMax' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SafeZoneActor) == 0x0045E0, "Member 'APlayerPawn_Athena_C::SafeZoneActor' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningIntensity) == 0x0045E8, "Member 'APlayerPawn_Athena_C::LightningIntensity' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RandomLightningLight) == 0x0045F0, "Member 'APlayerPawn_Athena_C::RandomLightningLight' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningTimelinePlaySpeedMin) == 0x0045F8, "Member 'APlayerPawn_Athena_C::LightningTimelinePlaySpeedMin' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningTimelinePlaySpeedMax) == 0x0045FC, "Member 'APlayerPawn_Athena_C::LightningTimelinePlaySpeedMax' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningFlashDiameter) == 0x004600, "Member 'APlayerPawn_Athena_C::LightningFlashDiameter' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningFlashHeight) == 0x004604, "Member 'APlayerPawn_Athena_C::LightningFlashHeight' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningFlashRepeatDelayMin) == 0x004608, "Member 'APlayerPawn_Athena_C::LightningFlashRepeatDelayMin' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningFlashRepeatDelayMax) == 0x00460C, "Member 'APlayerPawn_Athena_C::LightningFlashRepeatDelayMax' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RainCameraLensParticles) == 0x004610, "Member 'APlayerPawn_Athena_C::RainCameraLensParticles' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, _ChanceOfLightningMesh) == 0x004618, "Member 'APlayerPawn_Athena_C::_ChanceOfLightningMesh' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ShowInvulnerableVisuals) == 0x00461C, "Member 'APlayerPawn_Athena_C::ShowInvulnerableVisuals' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, StormAudioLoop_Inst) == 0x004620, "Member 'APlayerPawn_Athena_C::StormAudioLoop_Inst' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, StormAudioVolume) == 0x004628, "Member 'APlayerPawn_Athena_C::StormAudioVolume' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, FallingAudioLoop_Inst) == 0x004630, "Member 'APlayerPawn_Athena_C::FallingAudioLoop_Inst' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bIsPlayingFallingSound) == 0x004638, "Member 'APlayerPawn_Athena_C::bIsPlayingFallingSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerAttributes_Speed_Walk) == 0x00463C, "Member 'APlayerPawn_Athena_C::PlayerAttributes_Speed_Walk' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerAttributes_Speed_Run) == 0x004640, "Member 'APlayerPawn_Athena_C::PlayerAttributes_Speed_Run' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerAttributes_Speed_Sprint) == 0x004644, "Member 'APlayerPawn_Athena_C::PlayerAttributes_Speed_Sprint' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MaxTrailsLOD) == 0x004648, "Member 'APlayerPawn_Athena_C::MaxTrailsLOD' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MobilePostProcess) == 0x004650, "Member 'APlayerPawn_Athena_C::MobilePostProcess' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bIsOutsideSafeZoneCached) == 0x004658, "Member 'APlayerPawn_Athena_C::bIsOutsideSafeZoneCached' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ResOutMaterials) == 0x004660, "Member 'APlayerPawn_Athena_C::ResOutMaterials' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RezInFXActor) == 0x004670, "Member 'APlayerPawn_Athena_C::RezInFXActor' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bQueueRezIn) == 0x004678, "Member 'APlayerPawn_Athena_C::bQueueRezIn' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RezOutFXActor) == 0x004680, "Member 'APlayerPawn_Athena_C::RezOutFXActor' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bQueueRezOut) == 0x004688, "Member 'APlayerPawn_Athena_C::bQueueRezOut' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bWasEverInWarmUp) == 0x004689, "Member 'APlayerPawn_Athena_C::bWasEverInWarmUp' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bStormAudioCleanedUp) == 0x00468A, "Member 'APlayerPawn_Athena_C::bStormAudioCleanedUp' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Box_Local_Transform) == 0x004690, "Member 'APlayerPawn_Athena_C::Box_Local_Transform' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, BoundsRadius) == 0x0046C0, "Member 'APlayerPawn_Athena_C::BoundsRadius' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TeleportationPointLight) == 0x0046C8, "Member 'APlayerPawn_Athena_C::TeleportationPointLight' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MaxLightIntensity) == 0x0046D0, "Member 'APlayerPawn_Athena_C::MaxLightIntensity' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Socket_MeshTop) == 0x0046D4, "Member 'APlayerPawn_Athena_C::Socket_MeshTop' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Socket_MeshBot) == 0x0046DC, "Member 'APlayerPawn_Athena_C::Socket_MeshBot' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MIDParam_Transition) == 0x0046E4, "Member 'APlayerPawn_Athena_C::MIDParam_Transition' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MIDParam_DissolvePercent) == 0x0046EC, "Member 'APlayerPawn_Athena_C::MIDParam_DissolvePercent' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MIDParam_DissolveDirection) == 0x0046F4, "Member 'APlayerPawn_Athena_C::MIDParam_DissolveDirection' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MIDParam_DissolveBaseLoc) == 0x0046FC, "Member 'APlayerPawn_Athena_C::MIDParam_DissolveBaseLoc' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MIDParam_DissolveDistance) == 0x004704, "Member 'APlayerPawn_Athena_C::MIDParam_DissolveDistance' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MIDParam_DissolveFirstSpawn) == 0x00470C, "Member 'APlayerPawn_Athena_C::MIDParam_DissolveFirstSpawn' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Mat_CharacterDissolve) == 0x004718, "Member 'APlayerPawn_Athena_C::Mat_CharacterDissolve' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, DissolveMIDs) == 0x004720, "Member 'APlayerPawn_Athena_C::DissolveMIDs' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bUseNewTeleportFX) == 0x004730, "Member 'APlayerPawn_Athena_C::bUseNewTeleportFX' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, OutsideSafeZoneGameplayCueTag) == 0x004734, "Member 'APlayerPawn_Athena_C::OutsideSafeZoneGameplayCueTag' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SafeZonePhase) == 0x00473C, "Member 'APlayerPawn_Athena_C::SafeZonePhase' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, WhichSafeZoneTag) == 0x004740, "Member 'APlayerPawn_Athena_C::WhichSafeZoneTag' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bOutsideSafeZoneGameplayCueActive) == 0x004744, "Member 'APlayerPawn_Athena_C::bOutsideSafeZoneGameplayCueActive' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SafeZoneDamageScalableFloat) == 0x004748, "Member 'APlayerPawn_Athena_C::SafeZoneDamageScalableFloat' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bFrontendPartyInProgress) == 0x004770, "Member 'APlayerPawn_Athena_C::bFrontendPartyInProgress' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bLockOnInteractionComplete) == 0x004771, "Member 'APlayerPawn_Athena_C::bLockOnInteractionComplete' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ResIn) == 0x004778, "Member 'APlayerPawn_Athena_C::ResIn' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ResOut) == 0x004788, "Member 'APlayerPawn_Athena_C::ResOut' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SwingRight) == 0x004798, "Member 'APlayerPawn_Athena_C::SwingRight' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SwingLeft) == 0x0047A8, "Member 'APlayerPawn_Athena_C::SwingLeft' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bSkeletalArrayReady) == 0x0047B8, "Member 'APlayerPawn_Athena_C::bSkeletalArrayReady' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, CurDissolveSetupAttempt) == 0x0047BC, "Member 'APlayerPawn_Athena_C::CurDissolveSetupAttempt' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, DBNOEnterSound) == 0x0047C0, "Member 'APlayerPawn_Athena_C::DBNOEnterSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, onFadeToWhiteTeleported) == 0x0047C8, "Member 'APlayerPawn_Athena_C::onFadeToWhiteTeleported' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Is_Ashton) == 0x0047D8, "Member 'APlayerPawn_Athena_C::Is_Ashton' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Ashton) == 0x0047E0, "Member 'APlayerPawn_Athena_C::Ashton' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SwingRightEnd) == 0x0047E8, "Member 'APlayerPawn_Athena_C::SwingRightEnd' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SwingLeftEnd) == 0x0047F8, "Member 'APlayerPawn_Athena_C::SwingLeftEnd' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PhoneGhostCue) == 0x004808, "Member 'APlayerPawn_Athena_C::PhoneGhostCue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, WhiteoutCue) == 0x004810, "Member 'APlayerPawn_Athena_C::WhiteoutCue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, OutsideSafeZoneCue) == 0x004818, "Member 'APlayerPawn_Athena_C::OutsideSafeZoneCue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, OutsideSafeZone2Cue) == 0x004820, "Member 'APlayerPawn_Athena_C::OutsideSafeZone2Cue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, OutsideSafeZone3Cue) == 0x004828, "Member 'APlayerPawn_Athena_C::OutsideSafeZone3Cue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayRespawnFXOnSpawn) == 0x004830, "Member 'APlayerPawn_Athena_C::PlayRespawnFXOnSpawn' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerPawnAthena) == 0x004838, "Member 'APlayerPawn_Athena_C::PlayerPawnAthena' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SwingRight2) == 0x004840, "Member 'APlayerPawn_Athena_C::SwingRight2' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SwingLeft2) == 0x004850, "Member 'APlayerPawn_Athena_C::SwingLeft2' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TestProceduralWaterInIsolation) == 0x004860, "Member 'APlayerPawn_Athena_C::TestProceduralWaterInIsolation' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, NewVar_0) == 0x004861, "Member 'APlayerPawn_Athena_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Is_First_Water_Body) == 0x004862, "Member 'APlayerPawn_Athena_C::Is_First_Water_Body' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Is_Last_Water_Body) == 0x004863, "Member 'APlayerPawn_Athena_C::Is_Last_Water_Body' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, AccumulatedNormalizedDiveSpeed) == 0x004864, "Member 'APlayerPawn_Athena_C::AccumulatedNormalizedDiveSpeed' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, WaterSprintBoostTag) == 0x004868, "Member 'APlayerPawn_Athena_C::WaterSprintBoostTag' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, CCPM_isHiddenInProp) == 0x004870, "Member 'APlayerPawn_Athena_C::CCPM_isHiddenInProp' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PawnHighlights) == 0x004880, "Member 'APlayerPawn_Athena_C::PawnHighlights' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Current_Highlight_Source) == 0x0048D0, "Member 'APlayerPawn_Athena_C::Current_Highlight_Source' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Current_Highlight_Priority) == 0x0048D8, "Member 'APlayerPawn_Athena_C::Current_Highlight_Priority' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Invulnerable_Highlight) == 0x0048DC, "Member 'APlayerPawn_Athena_C::Invulnerable_Highlight' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LastCreativeEffectColorIndex) == 0x00490C, "Member 'APlayerPawn_Athena_C::LastCreativeEffectColorIndex' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, IsGalileo) == 0x004914, "Member 'APlayerPawn_Athena_C::IsGalileo' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, HotFixSnow) == 0x004918, "Member 'APlayerPawn_Athena_C::HotFixSnow' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, NoSnowPlaylists) == 0x004940, "Member 'APlayerPawn_Athena_C::NoSnowPlaylists' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, GalileoPlaylistTag) == 0x004990, "Member 'APlayerPawn_Athena_C::GalileoPlaylistTag' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, WeaponMIDs) == 0x004998, "Member 'APlayerPawn_Athena_C::WeaponMIDs' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, AmountOfTimesToAttemptRestoreMats) == 0x0049A8, "Member 'APlayerPawn_Athena_C::AmountOfTimesToAttemptRestoreMats' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TC_PawnAthenaNPC) == 0x0049AC, "Member 'APlayerPawn_Athena_C::TC_PawnAthenaNPC' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, HitGlowBrightnessScalar) == 0x0049B4, "Member 'APlayerPawn_Athena_C::HitGlowBrightnessScalar' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, CurrentWeaponMaterials) == 0x0049B8, "Member 'APlayerPawn_Athena_C::CurrentWeaponMaterials' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, CurrentWeaponMeshes) == 0x0049C8, "Member 'APlayerPawn_Athena_C::CurrentWeaponMeshes' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, WeaponDissolveMIDs) == 0x0049D8, "Member 'APlayerPawn_Athena_C::WeaponDissolveMIDs' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, HitGlowBrightnessScalar_Mobile) == 0x0049E8, "Member 'APlayerPawn_Athena_C::HitGlowBrightnessScalar_Mobile' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TC_PawnAthenaDecoy) == 0x0049EC, "Member 'APlayerPawn_Athena_C::TC_PawnAthenaDecoy' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ScaleRate) == 0x0049F4, "Member 'APlayerPawn_Athena_C::ScaleRate' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TetherQuestTag) == 0x0049F8, "Member 'APlayerPawn_Athena_C::TetherQuestTag' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, FirefliesTag) == 0x004A18, "Member 'APlayerPawn_Athena_C::FirefliesTag' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RightSideRim_Transform) == 0x004A20, "Member 'APlayerPawn_Athena_C::RightSideRim_Transform' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Right_Side_Rim_Light) == 0x004A50, "Member 'APlayerPawn_Athena_C::Right_Side_Rim_Light' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Rim_light_Shadow_Bias) == 0x004A58, "Member 'APlayerPawn_Athena_C::Rim_light_Shadow_Bias' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Rim_Light_Attenuation_Radius) == 0x004A5C, "Member 'APlayerPawn_Athena_C::Rim_Light_Attenuation_Radius' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Rim_Light_Intensity) == 0x004A60, "Member 'APlayerPawn_Athena_C::Rim_Light_Intensity' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerAimRotation) == 0x004A64, "Member 'APlayerPawn_Athena_C::PlayerAimRotation' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ControlRotationReplicationTickRate) == 0x004A70, "Member 'APlayerPawn_Athena_C::ControlRotationReplicationTickRate' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Elimination_Rez_Sequence_GC) == 0x004A98, "Member 'APlayerPawn_Athena_C::Elimination_Rez_Sequence_GC' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Creative_Respawn_Teleportation_GC) == 0x004AA0, "Member 'APlayerPawn_Athena_C::Creative_Respawn_Teleportation_GC' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Teleport_In_GC) == 0x004AA8, "Member 'APlayerPawn_Athena_C::Teleport_In_GC' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RimlightDistanceFromCamera) == 0x004AB0, "Member 'APlayerPawn_Athena_C::RimlightDistanceFromCamera' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RimlightOffsetFromCamera) == 0x004AB4, "Member 'APlayerPawn_Athena_C::RimlightOffsetFromCamera' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Rim_Light_Color___Night) == 0x004AB8, "Member 'APlayerPawn_Athena_C::Rim_Light_Color___Night' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Rim_Light_Color___Day) == 0x004AC8, "Member 'APlayerPawn_Athena_C::Rim_Light_Color___Day' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PhoneModeratorModeGameplayCue) == 0x004AD8, "Member 'APlayerPawn_Athena_C::PhoneModeratorModeGameplayCue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PhoneInvulnerableGameplayCue) == 0x004AE0, "Member 'APlayerPawn_Athena_C::PhoneInvulnerableGameplayCue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, InputDragCoefficient) == 0x004AE8, "Member 'APlayerPawn_Athena_C::InputDragCoefficient' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ToggleSwingNativized) == 0x004AEC, "Member 'APlayerPawn_Athena_C::ToggleSwingNativized' has a wrong offset!");

}

