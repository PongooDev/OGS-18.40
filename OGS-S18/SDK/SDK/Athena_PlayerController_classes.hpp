#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Athena_PlayerController

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Athena_PlayerController.Athena_PlayerController_C
// 0x00D0 (0x42B0 - 0x41E0)
class AAthena_PlayerController_C final : public AFortPlayerControllerAthena
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x41E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUnderwaterAudioComponent_C*            UnderwaterAudioComponent;                          // 0x41E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ListenerOverride;                                  // 0x41F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        VictoryRoyaleAudio;                                // 0x41F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        VictoryRoyaleMusic1;                               // 0x4200(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CurrentMusic;                                      // 0x4208(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  BladeWielderTag;                                   // 0x4210(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	EFortItemType                                 InteractingItemType;                               // 0x4230(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4231[0x7];                                     // 0x4231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  InteractionTags;                                   // 0x4238(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void(class APawn* PossessedPawn)> PawnPossessedDispatcher;                           // 0x4258(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FTimerHandle                           PermissionsRecheckTimerHandle;                     // 0x4268(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         LobbyMusicOnVictoryDelayTime;                      // 0x4270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4274[0x4];                                     // 0x4274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundMix*                              CamUnderwaterSoundMix;                             // 0x4278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CamUnderwaterLoopSound;                            // 0x4280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CamUnderwaterAudio;                                // 0x4288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CamUnderwaterStartSound;                           // 0x4290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CamUnderwaterStopSound;                            // 0x4298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        VictoryRoyaleMusic2;                               // 0x42A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Athena_PlayerController(int32 EntryPoint);
	void Change_Music(class USoundBase* New_Music, float StartTime);
	void Handle_Victory_Royale_Audio(bool Audio_Only);
	void K2_OnEnterVolume(class AFortVolume* Volume);
	void K2_OnLeaveVolume(class AFortVolume* Volume);
	void ReplicateRotationScaleReset();
	void ReactToPawnPossession(class APawn* PossessedPawn);
	void RemoveItem();
	void OnLocalInteraction(class AActor* ReceivingActor);
	void RevokeItem(TSoftObjectPtr<class UFortWorldItemDefinition> Item);
	void GrantItem(TSoftObjectPtr<class UFortWorldItemDefinition> Item);
	void OnMusicPackLoaded(const class UAthenaMusicPackItemDefinition* NewMusicPack, float StartTimeOffset);
	void Start_Victory_Royale_Music();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void PlayWinEffects(class APawn* FinisherPawn, const class UFortWeaponItemDefinition* FinishingWeapon, EDeathCause DeathCause, bool bAudioOnly);
	void ReceiveBeginPlay();
	void OnReady_B4409EAB4038578B1EBA9DB1586489B9(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void OnLoaded_F82CC70840156DFAFAF85EB0D93E5E2D(class UObject* Loaded);
	void UserConstructionScript();
	void LeftAllVolumes(bool* bLeftVolumes);
	void SetupPermissionRecheckTimer();
	bool Is_Creative_Mode();
	void FadeAudioComponents(class UAudioComponent* NewMusicComponent, class UAudioComponent* PreviousMusicComponent, class USoundBase* Music, float StartTime);
	void ResetVOIPFX();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Athena_PlayerController_C">();
	}
	static class AAthena_PlayerController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAthena_PlayerController_C>();
	}
};
static_assert(alignof(AAthena_PlayerController_C) == 0x000010, "Wrong alignment on AAthena_PlayerController_C");
static_assert(sizeof(AAthena_PlayerController_C) == 0x0042B0, "Wrong size on AAthena_PlayerController_C");
static_assert(offsetof(AAthena_PlayerController_C, UberGraphFrame) == 0x0041E0, "Member 'AAthena_PlayerController_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, UnderwaterAudioComponent) == 0x0041E8, "Member 'AAthena_PlayerController_C::UnderwaterAudioComponent' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, ListenerOverride) == 0x0041F0, "Member 'AAthena_PlayerController_C::ListenerOverride' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, VictoryRoyaleAudio) == 0x0041F8, "Member 'AAthena_PlayerController_C::VictoryRoyaleAudio' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, VictoryRoyaleMusic1) == 0x004200, "Member 'AAthena_PlayerController_C::VictoryRoyaleMusic1' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, CurrentMusic) == 0x004208, "Member 'AAthena_PlayerController_C::CurrentMusic' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, BladeWielderTag) == 0x004210, "Member 'AAthena_PlayerController_C::BladeWielderTag' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, InteractingItemType) == 0x004230, "Member 'AAthena_PlayerController_C::InteractingItemType' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, InteractionTags) == 0x004238, "Member 'AAthena_PlayerController_C::InteractionTags' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, PawnPossessedDispatcher) == 0x004258, "Member 'AAthena_PlayerController_C::PawnPossessedDispatcher' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, PermissionsRecheckTimerHandle) == 0x004268, "Member 'AAthena_PlayerController_C::PermissionsRecheckTimerHandle' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, LobbyMusicOnVictoryDelayTime) == 0x004270, "Member 'AAthena_PlayerController_C::LobbyMusicOnVictoryDelayTime' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, CamUnderwaterSoundMix) == 0x004278, "Member 'AAthena_PlayerController_C::CamUnderwaterSoundMix' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, CamUnderwaterLoopSound) == 0x004280, "Member 'AAthena_PlayerController_C::CamUnderwaterLoopSound' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, CamUnderwaterAudio) == 0x004288, "Member 'AAthena_PlayerController_C::CamUnderwaterAudio' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, CamUnderwaterStartSound) == 0x004290, "Member 'AAthena_PlayerController_C::CamUnderwaterStartSound' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, CamUnderwaterStopSound) == 0x004298, "Member 'AAthena_PlayerController_C::CamUnderwaterStopSound' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, VictoryRoyaleMusic2) == 0x0042A0, "Member 'AAthena_PlayerController_C::VictoryRoyaleMusic2' has a wrong offset!");

}

