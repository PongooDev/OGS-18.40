#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SlidingLayerAnimBP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function SlidingLayerAnimBP.SlidingLayerAnimBP_C.ExecuteUbergraph_SlidingLayerAnimBP
// 0x0160 (0x0160 - 0x0000)
struct SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetBaseAimRotation_ReturnValue;           // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortPlayerAnimInstance*                K2Node_DynamicCast_AsFort_Player_Anim_Instance;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetBaseAimRotation_ReturnValue_1;         // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0080(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BF[0x1];                                       // 0x00BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP) == 0x000010, "Wrong alignment on SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP");
static_assert(sizeof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP) == 0x000160, "Wrong size on SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, EntryPoint) == 0x000000, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_Abs_ReturnValue) == 0x000008, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000C, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000010, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000018, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, Temp_bool_IsClosed_Variable) == 0x000022, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_GetBaseAimRotation_ReturnValue) == 0x000024, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_GetBaseAimRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_GetAnimInstance_ReturnValue) == 0x000030, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, K2Node_DynamicCast_AsFort_Player_Anim_Instance) == 0x000038, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::K2Node_DynamicCast_AsFort_Player_Anim_Instance' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_GetBaseAimRotation_ReturnValue_1) == 0x000044, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_GetBaseAimRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_BooleanAND_ReturnValue) == 0x000050, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000054, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_RInterpTo_ReturnValue) == 0x000060, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_BreakRotator_Roll) == 0x00006C, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_BreakRotator_Pitch) == 0x000070, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_BreakRotator_Yaw) == 0x000074, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_FClamp_ReturnValue) == 0x000078, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00007C, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_GetTransform_ReturnValue) == 0x000080, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_GetActorUpVector_ReturnValue) == 0x0000B0, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, Temp_bool_Has_Been_Initd_Variable) == 0x0000BC, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_BreakHitResult_bBlockingHit) == 0x0000BD, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000BE, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_BreakHitResult_Time) == 0x0000C0, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_BreakHitResult_Distance) == 0x0000C4, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_BreakHitResult_Location) == 0x0000C8, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_BreakHitResult_ImpactPoint) == 0x0000D4, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_BreakHitResult_Normal) == 0x0000E0, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_BreakHitResult_ImpactNormal) == 0x0000EC, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_BreakHitResult_PhysMat) == 0x0000F8, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_BreakHitResult_HitActor) == 0x000100, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_BreakHitResult_HitComponent) == 0x000108, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_BreakHitResult_HitBoneName) == 0x000110, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_BreakHitResult_HitItem) == 0x000118, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_BreakHitResult_ElementIndex) == 0x00011C, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_BreakHitResult_FaceIndex) == 0x000120, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_BreakHitResult_TraceStart) == 0x000124, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_BreakHitResult_TraceEnd) == 0x000130, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_Dot_VectorVector_ReturnValue) == 0x00013C, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_InverseTransformDirection_ReturnValue) == 0x000140, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_DegAcos_ReturnValue) == 0x00014C, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_BreakVector_X) == 0x000150, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_BreakVector_Y) == 0x000154, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_BreakVector_Z) == 0x000158, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP, CallFunc_DegAtan2_ReturnValue) == 0x00015C, "Member 'SlidingLayerAnimBP_C_ExecuteUbergraph_SlidingLayerAnimBP::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");

// Function SlidingLayerAnimBP.SlidingLayerAnimBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct SlidingLayerAnimBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SlidingLayerAnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on SlidingLayerAnimBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(SlidingLayerAnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on SlidingLayerAnimBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(SlidingLayerAnimBP_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'SlidingLayerAnimBP_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function SlidingLayerAnimBP.SlidingLayerAnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct SlidingLayerAnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(SlidingLayerAnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on SlidingLayerAnimBP_C_AnimGraph");
static_assert(sizeof(SlidingLayerAnimBP_C_AnimGraph) == 0x000010, "Wrong size on SlidingLayerAnimBP_C_AnimGraph");
static_assert(offsetof(SlidingLayerAnimBP_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'SlidingLayerAnimBP_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function SlidingLayerAnimBP.SlidingLayerAnimBP_C.MovementMode_LocomotionUpperBodyAdditive
// 0x0030 (0x0030 - 0x0000)
struct SlidingLayerAnimBP_C_MovementMode_LocomotionUpperBodyAdditive final
{
public:
	struct FPoseLink                              InPose_0;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              IdleAdditive_CachedPose;                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              MovementMode_LocomotionUpperBodyAdditive_0;        // 0x0020(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(SlidingLayerAnimBP_C_MovementMode_LocomotionUpperBodyAdditive) == 0x000008, "Wrong alignment on SlidingLayerAnimBP_C_MovementMode_LocomotionUpperBodyAdditive");
static_assert(sizeof(SlidingLayerAnimBP_C_MovementMode_LocomotionUpperBodyAdditive) == 0x000030, "Wrong size on SlidingLayerAnimBP_C_MovementMode_LocomotionUpperBodyAdditive");
static_assert(offsetof(SlidingLayerAnimBP_C_MovementMode_LocomotionUpperBodyAdditive, InPose_0) == 0x000000, "Member 'SlidingLayerAnimBP_C_MovementMode_LocomotionUpperBodyAdditive::InPose_0' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_MovementMode_LocomotionUpperBodyAdditive, IdleAdditive_CachedPose) == 0x000010, "Member 'SlidingLayerAnimBP_C_MovementMode_LocomotionUpperBodyAdditive::IdleAdditive_CachedPose' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_MovementMode_LocomotionUpperBodyAdditive, MovementMode_LocomotionUpperBodyAdditive_0) == 0x000020, "Member 'SlidingLayerAnimBP_C_MovementMode_LocomotionUpperBodyAdditive::MovementMode_LocomotionUpperBodyAdditive_0' has a wrong offset!");

// Function SlidingLayerAnimBP.SlidingLayerAnimBP_C.MovementMode_LowerBodyOverride
// 0x0020 (0x0020 - 0x0000)
struct SlidingLayerAnimBP_C_MovementMode_LowerBodyOverride final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              MovementMode_LowerBodyOverride_0;                  // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(SlidingLayerAnimBP_C_MovementMode_LowerBodyOverride) == 0x000008, "Wrong alignment on SlidingLayerAnimBP_C_MovementMode_LowerBodyOverride");
static_assert(sizeof(SlidingLayerAnimBP_C_MovementMode_LowerBodyOverride) == 0x000020, "Wrong size on SlidingLayerAnimBP_C_MovementMode_LowerBodyOverride");
static_assert(offsetof(SlidingLayerAnimBP_C_MovementMode_LowerBodyOverride, InPose) == 0x000000, "Member 'SlidingLayerAnimBP_C_MovementMode_LowerBodyOverride::InPose' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_MovementMode_LowerBodyOverride, MovementMode_LowerBodyOverride_0) == 0x000010, "Member 'SlidingLayerAnimBP_C_MovementMode_LowerBodyOverride::MovementMode_LowerBodyOverride_0' has a wrong offset!");

// Function SlidingLayerAnimBP.SlidingLayerAnimBP_C.MovementMode_UpperBodyPose
// 0x0030 (0x0030 - 0x0000)
struct SlidingLayerAnimBP_C_MovementMode_UpperBodyPose final
{
public:
	struct FPoseLink                              UppperBodyPose_BasePose;                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              UpperBodyPose_AdditiveIdentityPose;                // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              MovementMode_UpperBodyPose_0;                      // 0x0020(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(SlidingLayerAnimBP_C_MovementMode_UpperBodyPose) == 0x000008, "Wrong alignment on SlidingLayerAnimBP_C_MovementMode_UpperBodyPose");
static_assert(sizeof(SlidingLayerAnimBP_C_MovementMode_UpperBodyPose) == 0x000030, "Wrong size on SlidingLayerAnimBP_C_MovementMode_UpperBodyPose");
static_assert(offsetof(SlidingLayerAnimBP_C_MovementMode_UpperBodyPose, UppperBodyPose_BasePose) == 0x000000, "Member 'SlidingLayerAnimBP_C_MovementMode_UpperBodyPose::UppperBodyPose_BasePose' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_MovementMode_UpperBodyPose, UpperBodyPose_AdditiveIdentityPose) == 0x000010, "Member 'SlidingLayerAnimBP_C_MovementMode_UpperBodyPose::UpperBodyPose_AdditiveIdentityPose' has a wrong offset!");
static_assert(offsetof(SlidingLayerAnimBP_C_MovementMode_UpperBodyPose, MovementMode_UpperBodyPose_0) == 0x000020, "Member 'SlidingLayerAnimBP_C_MovementMode_UpperBodyPose::MovementMode_UpperBodyPose_0' has a wrong offset!");

}

