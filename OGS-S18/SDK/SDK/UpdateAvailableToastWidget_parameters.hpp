#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UpdateAvailableToastWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UpdateAvailableToastWidget.UpdateAvailableToastWidget_C.SetupAnimBindings
// 0x0044 (0x0044 - 0x0000)
struct UpdateAvailableToastWidget_C_SetupAnimBindings final
{
public:
	bool                                          Unbind;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(UpdateAvailableToastWidget_C_SetupAnimBindings) == 0x000004, "Wrong alignment on UpdateAvailableToastWidget_C_SetupAnimBindings");
static_assert(sizeof(UpdateAvailableToastWidget_C_SetupAnimBindings) == 0x000044, "Wrong size on UpdateAvailableToastWidget_C_SetupAnimBindings");
static_assert(offsetof(UpdateAvailableToastWidget_C_SetupAnimBindings, Unbind) == 0x000000, "Member 'UpdateAvailableToastWidget_C_SetupAnimBindings::Unbind' has a wrong offset!");
static_assert(offsetof(UpdateAvailableToastWidget_C_SetupAnimBindings, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'UpdateAvailableToastWidget_C_SetupAnimBindings::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UpdateAvailableToastWidget_C_SetupAnimBindings, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'UpdateAvailableToastWidget_C_SetupAnimBindings::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UpdateAvailableToastWidget_C_SetupAnimBindings, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'UpdateAvailableToastWidget_C_SetupAnimBindings::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UpdateAvailableToastWidget_C_SetupAnimBindings, K2Node_CreateDelegate_OutputDelegate_3) == 0x000034, "Member 'UpdateAvailableToastWidget_C_SetupAnimBindings::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

// Function UpdateAvailableToastWidget.UpdateAvailableToastWidget_C.StartIntro
// 0x0008 (0x0008 - 0x0000)
struct UpdateAvailableToastWidget_C_StartIntro final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UpdateAvailableToastWidget_C_StartIntro) == 0x000008, "Wrong alignment on UpdateAvailableToastWidget_C_StartIntro");
static_assert(sizeof(UpdateAvailableToastWidget_C_StartIntro) == 0x000008, "Wrong size on UpdateAvailableToastWidget_C_StartIntro");
static_assert(offsetof(UpdateAvailableToastWidget_C_StartIntro, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'UpdateAvailableToastWidget_C_StartIntro::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function UpdateAvailableToastWidget.UpdateAvailableToastWidget_C.ShowText
// 0x0048 (0x0048 - 0x0000)
struct UpdateAvailableToastWidget_C_ShowText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UCommonTextBlock*                       TextBlock;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       LocalTextBlock;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   LocalText;                                         // 0x0028(0x0018)(Edit, BlueprintVisible)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UpdateAvailableToastWidget_C_ShowText) == 0x000008, "Wrong alignment on UpdateAvailableToastWidget_C_ShowText");
static_assert(sizeof(UpdateAvailableToastWidget_C_ShowText) == 0x000048, "Wrong size on UpdateAvailableToastWidget_C_ShowText");
static_assert(offsetof(UpdateAvailableToastWidget_C_ShowText, Text) == 0x000000, "Member 'UpdateAvailableToastWidget_C_ShowText::Text' has a wrong offset!");
static_assert(offsetof(UpdateAvailableToastWidget_C_ShowText, TextBlock) == 0x000018, "Member 'UpdateAvailableToastWidget_C_ShowText::TextBlock' has a wrong offset!");
static_assert(offsetof(UpdateAvailableToastWidget_C_ShowText, LocalTextBlock) == 0x000020, "Member 'UpdateAvailableToastWidget_C_ShowText::LocalTextBlock' has a wrong offset!");
static_assert(offsetof(UpdateAvailableToastWidget_C_ShowText, LocalText) == 0x000028, "Member 'UpdateAvailableToastWidget_C_ShowText::LocalText' has a wrong offset!");
static_assert(offsetof(UpdateAvailableToastWidget_C_ShowText, CallFunc_TextIsEmpty_ReturnValue) == 0x000040, "Member 'UpdateAvailableToastWidget_C_ShowText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function UpdateAvailableToastWidget.UpdateAvailableToastWidget_C.SetToast
// 0x0008 (0x0008 - 0x0000)
struct UpdateAvailableToastWidget_C_SetToast final
{
public:
	class UFortUINotification*                    Toast;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UpdateAvailableToastWidget_C_SetToast) == 0x000008, "Wrong alignment on UpdateAvailableToastWidget_C_SetToast");
static_assert(sizeof(UpdateAvailableToastWidget_C_SetToast) == 0x000008, "Wrong size on UpdateAvailableToastWidget_C_SetToast");
static_assert(offsetof(UpdateAvailableToastWidget_C_SetToast, Toast) == 0x000000, "Member 'UpdateAvailableToastWidget_C_SetToast::Toast' has a wrong offset!");

// Function UpdateAvailableToastWidget.UpdateAvailableToastWidget_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct UpdateAvailableToastWidget_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UpdateAvailableToastWidget_C_OnMouseEnter) == 0x000008, "Wrong alignment on UpdateAvailableToastWidget_C_OnMouseEnter");
static_assert(sizeof(UpdateAvailableToastWidget_C_OnMouseEnter) == 0x0000A8, "Wrong size on UpdateAvailableToastWidget_C_OnMouseEnter");
static_assert(offsetof(UpdateAvailableToastWidget_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'UpdateAvailableToastWidget_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(UpdateAvailableToastWidget_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'UpdateAvailableToastWidget_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function UpdateAvailableToastWidget.UpdateAvailableToastWidget_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct UpdateAvailableToastWidget_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UpdateAvailableToastWidget_C_OnMouseLeave) == 0x000008, "Wrong alignment on UpdateAvailableToastWidget_C_OnMouseLeave");
static_assert(sizeof(UpdateAvailableToastWidget_C_OnMouseLeave) == 0x000070, "Wrong size on UpdateAvailableToastWidget_C_OnMouseLeave");
static_assert(offsetof(UpdateAvailableToastWidget_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'UpdateAvailableToastWidget_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function UpdateAvailableToastWidget.UpdateAvailableToastWidget_C.OnSetToast
// 0x0008 (0x0008 - 0x0000)
struct UpdateAvailableToastWidget_C_OnSetToast final
{
public:
	class UFortUINotification*                    ToastNotification_0;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UpdateAvailableToastWidget_C_OnSetToast) == 0x000008, "Wrong alignment on UpdateAvailableToastWidget_C_OnSetToast");
static_assert(sizeof(UpdateAvailableToastWidget_C_OnSetToast) == 0x000008, "Wrong size on UpdateAvailableToastWidget_C_OnSetToast");
static_assert(offsetof(UpdateAvailableToastWidget_C_OnSetToast, ToastNotification_0) == 0x000000, "Member 'UpdateAvailableToastWidget_C_OnSetToast::ToastNotification_0' has a wrong offset!");

// Function UpdateAvailableToastWidget.UpdateAvailableToastWidget_C.ExecuteUbergraph_UpdateAvailableToastWidget
// 0x0148 (0x0148 - 0x0000)
struct UpdateAvailableToastWidget_C_ExecuteUbergraph_UpdateAvailableToastWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0020(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0058(0x0070)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00C8(0x0070)(ConstParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortUINotification*                    K2Node_Event_ToastNotification;                    // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UpdateAvailableToastWidget_C_ExecuteUbergraph_UpdateAvailableToastWidget) == 0x000008, "Wrong alignment on UpdateAvailableToastWidget_C_ExecuteUbergraph_UpdateAvailableToastWidget");
static_assert(sizeof(UpdateAvailableToastWidget_C_ExecuteUbergraph_UpdateAvailableToastWidget) == 0x000148, "Wrong size on UpdateAvailableToastWidget_C_ExecuteUbergraph_UpdateAvailableToastWidget");
static_assert(offsetof(UpdateAvailableToastWidget_C_ExecuteUbergraph_UpdateAvailableToastWidget, EntryPoint) == 0x000000, "Member 'UpdateAvailableToastWidget_C_ExecuteUbergraph_UpdateAvailableToastWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(UpdateAvailableToastWidget_C_ExecuteUbergraph_UpdateAvailableToastWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'UpdateAvailableToastWidget_C_ExecuteUbergraph_UpdateAvailableToastWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UpdateAvailableToastWidget_C_ExecuteUbergraph_UpdateAvailableToastWidget, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'UpdateAvailableToastWidget_C_ExecuteUbergraph_UpdateAvailableToastWidget::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpdateAvailableToastWidget_C_ExecuteUbergraph_UpdateAvailableToastWidget, K2Node_Event_MyGeometry) == 0x000020, "Member 'UpdateAvailableToastWidget_C_ExecuteUbergraph_UpdateAvailableToastWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UpdateAvailableToastWidget_C_ExecuteUbergraph_UpdateAvailableToastWidget, K2Node_Event_MouseEvent_1) == 0x000058, "Member 'UpdateAvailableToastWidget_C_ExecuteUbergraph_UpdateAvailableToastWidget::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(UpdateAvailableToastWidget_C_ExecuteUbergraph_UpdateAvailableToastWidget, K2Node_Event_MouseEvent) == 0x0000C8, "Member 'UpdateAvailableToastWidget_C_ExecuteUbergraph_UpdateAvailableToastWidget::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(UpdateAvailableToastWidget_C_ExecuteUbergraph_UpdateAvailableToastWidget, CallFunc_PlayAnimation_ReturnValue) == 0x000138, "Member 'UpdateAvailableToastWidget_C_ExecuteUbergraph_UpdateAvailableToastWidget::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpdateAvailableToastWidget_C_ExecuteUbergraph_UpdateAvailableToastWidget, K2Node_Event_ToastNotification) == 0x000140, "Member 'UpdateAvailableToastWidget_C_ExecuteUbergraph_UpdateAvailableToastWidget::K2Node_Event_ToastNotification' has a wrong offset!");

}

