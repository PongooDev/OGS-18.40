#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActivityBrowserView

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "DiscoveryBrowserUI_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ActivityBrowserView.ActivityBrowserView_C
// 0x0140 (0x06D0 - 0x0590)
class UActivityBrowserView_C final : public UFortActivityBrowserView
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0590(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       PromotedKeyArtOutro;                               // 0x0598(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PromotedKeyArtIntro;                               // 0x05A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowAndHideRowLoadingSpinner;                      // 0x05A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowAndHideSpinner;                                // 0x05B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FailedToLoadImageIntro;                            // 0x05B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Intro;                                             // 0x05C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       KeyArtOutro;                                       // 0x05C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       KeyArtIntro;                                       // 0x05D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBox*                         DefaultDetailsHB;                                  // 0x05D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_KeyArt_768x768;                              // 0x05E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_PromotedKeyArt_1024x1024;                    // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LoadingSpinner;                                    // 0x05F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               MaxWidthSB_KeyArt;                                 // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               MaxWidthSB_PromotedKeyArt;                         // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_ClippingBoundary;                          // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Content;                                   // 0x0610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Nav;                                       // 0x0618(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         PromotedDetailsHB;                                 // 0x0620(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RowLoadingSpinner;                                 // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Details;                                   // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonVisibilitySwitcher*              Switcher_KeyArt;                                   // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTexture*                               NextImage;                                         // 0x0640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   KeyArtParameter;                                   // 0x0648(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               DefaultImage;                                      // 0x0650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsImageLoadingState;                               // 0x0658(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_659[0x3];                                      // 0x0659(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DetailsIntroDelay;                                 // 0x065C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeOfActivityUpdate;                              // 0x0660(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_664[0x4];                                      // 0x0664(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           WaitForDelayTimer;                                 // 0x0668(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOutroState;                                      // 0x0670(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFailureState;                                    // 0x0671(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_672[0x6];                                      // 0x0672(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnPlayIntro;                                       // 0x0678(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          HasIntroPlayed;                                    // 0x0688(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_689[0x3];                                      // 0x0689(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DetailsMaxHeight;                                  // 0x068C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DetailsMaxHeightMobile;                            // 0x0690(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KeyArtMaxWidth;                                    // 0x0694(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KeyArtMaxWidthMobile;                              // 0x0698(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69C[0x4];                                      // 0x069C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         KeyArt_ImageWidgets;                               // 0x06A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          IsPromotedContentDisplayed;                        // 0x06B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B1[0x7];                                      // 0x06B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(bool IsPromoted, bool IsFirstRow)> OnRowUpdated;                                      // 0x06B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsImageLoadingSpinnerActive;                       // 0x06C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ActivityBrowserView(int32 EntryPoint);
	void OnActivityUpdated();
	void OnPreviewImageChanged(const bool bIsLoading, const class UTexture* Texture);
	void OnRowChanged(const int32 NewCategoryIndex);
	void PreConstruct(bool IsDesignTime);
	void OnMoviePlayingChanged(const bool bIsPlaying);
	void OnOutroAnimationFinished();
	void OnQueryActivitiesFinished();
	void OnInitialized();
	void Construct();
	void Finished_6FCEE49A460F5BF362D0D2A0DA9061B5();
	void GetCurrentKeyArtImage(class UTexture** Texture);
	void GetCurrentKeyArtMaterial(class UMaterialInstanceDynamic** DynamicMaterial);
	void GetCurrentKeyArtIntro(class UWidgetAnimation** KeyArtIntro_0);
	void GetCurrentKeyArtOutro(class UWidgetAnimation** KeyArtIntro_0);
	void GetCurrentImageSpinnerAnimation(class UWidgetAnimation** SpinnerAnimation);
	void GetTimeSinceLastUpdate(float* TimeSinceUpdate);
	void GetHasIntroPlayed(bool* IsFinishedLoading);
	void ResetScreenState();
	void StopIntroAnimations();
	void UpdateDetailVisibility();
	void SnapToEndOfAnimation(class UWidgetAnimation* InAnimation, EUMGSequencePlayMode PlayMode);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ActivityBrowserView_C">();
	}
	static class UActivityBrowserView_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActivityBrowserView_C>();
	}
};
static_assert(alignof(UActivityBrowserView_C) == 0x000008, "Wrong alignment on UActivityBrowserView_C");
static_assert(sizeof(UActivityBrowserView_C) == 0x0006D0, "Wrong size on UActivityBrowserView_C");
static_assert(offsetof(UActivityBrowserView_C, UberGraphFrame) == 0x000590, "Member 'UActivityBrowserView_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, PromotedKeyArtOutro) == 0x000598, "Member 'UActivityBrowserView_C::PromotedKeyArtOutro' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, PromotedKeyArtIntro) == 0x0005A0, "Member 'UActivityBrowserView_C::PromotedKeyArtIntro' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, ShowAndHideRowLoadingSpinner) == 0x0005A8, "Member 'UActivityBrowserView_C::ShowAndHideRowLoadingSpinner' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, ShowAndHideSpinner) == 0x0005B0, "Member 'UActivityBrowserView_C::ShowAndHideSpinner' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, FailedToLoadImageIntro) == 0x0005B8, "Member 'UActivityBrowserView_C::FailedToLoadImageIntro' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, Intro) == 0x0005C0, "Member 'UActivityBrowserView_C::Intro' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, KeyArtOutro) == 0x0005C8, "Member 'UActivityBrowserView_C::KeyArtOutro' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, KeyArtIntro) == 0x0005D0, "Member 'UActivityBrowserView_C::KeyArtIntro' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, DefaultDetailsHB) == 0x0005D8, "Member 'UActivityBrowserView_C::DefaultDetailsHB' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, Image_KeyArt_768x768) == 0x0005E0, "Member 'UActivityBrowserView_C::Image_KeyArt_768x768' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, Image_PromotedKeyArt_1024x1024) == 0x0005E8, "Member 'UActivityBrowserView_C::Image_PromotedKeyArt_1024x1024' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, LoadingSpinner) == 0x0005F0, "Member 'UActivityBrowserView_C::LoadingSpinner' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, MaxWidthSB_KeyArt) == 0x0005F8, "Member 'UActivityBrowserView_C::MaxWidthSB_KeyArt' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, MaxWidthSB_PromotedKeyArt) == 0x000600, "Member 'UActivityBrowserView_C::MaxWidthSB_PromotedKeyArt' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, Overlay_ClippingBoundary) == 0x000608, "Member 'UActivityBrowserView_C::Overlay_ClippingBoundary' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, Overlay_Content) == 0x000610, "Member 'UActivityBrowserView_C::Overlay_Content' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, Overlay_Nav) == 0x000618, "Member 'UActivityBrowserView_C::Overlay_Nav' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, PromotedDetailsHB) == 0x000620, "Member 'UActivityBrowserView_C::PromotedDetailsHB' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, RowLoadingSpinner) == 0x000628, "Member 'UActivityBrowserView_C::RowLoadingSpinner' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, SizeBox_Details) == 0x000630, "Member 'UActivityBrowserView_C::SizeBox_Details' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, Switcher_KeyArt) == 0x000638, "Member 'UActivityBrowserView_C::Switcher_KeyArt' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, NextImage) == 0x000640, "Member 'UActivityBrowserView_C::NextImage' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, KeyArtParameter) == 0x000648, "Member 'UActivityBrowserView_C::KeyArtParameter' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, DefaultImage) == 0x000650, "Member 'UActivityBrowserView_C::DefaultImage' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, IsImageLoadingState) == 0x000658, "Member 'UActivityBrowserView_C::IsImageLoadingState' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, DetailsIntroDelay) == 0x00065C, "Member 'UActivityBrowserView_C::DetailsIntroDelay' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, TimeOfActivityUpdate) == 0x000660, "Member 'UActivityBrowserView_C::TimeOfActivityUpdate' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, WaitForDelayTimer) == 0x000668, "Member 'UActivityBrowserView_C::WaitForDelayTimer' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, IsOutroState) == 0x000670, "Member 'UActivityBrowserView_C::IsOutroState' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, IsFailureState) == 0x000671, "Member 'UActivityBrowserView_C::IsFailureState' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, OnPlayIntro) == 0x000678, "Member 'UActivityBrowserView_C::OnPlayIntro' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, HasIntroPlayed) == 0x000688, "Member 'UActivityBrowserView_C::HasIntroPlayed' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, DetailsMaxHeight) == 0x00068C, "Member 'UActivityBrowserView_C::DetailsMaxHeight' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, DetailsMaxHeightMobile) == 0x000690, "Member 'UActivityBrowserView_C::DetailsMaxHeightMobile' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, KeyArtMaxWidth) == 0x000694, "Member 'UActivityBrowserView_C::KeyArtMaxWidth' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, KeyArtMaxWidthMobile) == 0x000698, "Member 'UActivityBrowserView_C::KeyArtMaxWidthMobile' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, KeyArt_ImageWidgets) == 0x0006A0, "Member 'UActivityBrowserView_C::KeyArt_ImageWidgets' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, IsPromotedContentDisplayed) == 0x0006B0, "Member 'UActivityBrowserView_C::IsPromotedContentDisplayed' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, OnRowUpdated) == 0x0006B8, "Member 'UActivityBrowserView_C::OnRowUpdated' has a wrong offset!");
static_assert(offsetof(UActivityBrowserView_C, IsImageLoadingSpinnerActive) == 0x0006C8, "Member 'UActivityBrowserView_C::IsImageLoadingSpinnerActive' has a wrong offset!");

}

