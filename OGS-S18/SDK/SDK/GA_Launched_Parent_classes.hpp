#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Launched_Parent

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Launched_Parent.GA_Launched_Parent_C
// 0x0170 (0x0C18 - 0x0AA8)
class UGA_Launched_Parent_C : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AA8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UForceFeedbackEffect*                   ForcedFeedback;                                    // 0x0AB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 PlayerLaunchedCameraShakeTemplate;                 // 0x0AB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PlayerLaunchedGameplayCue;                         // 0x0AC0(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           VehicleLaunchedGameplayCue;                        // 0x0AC8(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Velocity;                                          // 0x0AD0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         GravityScale;                                      // 0x0AF8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         VehicleVelocityModifier;                           // 0x0B20(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         RedeployTime;                                      // 0x0B48(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         DefaultGravity;                                    // 0x0B70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   VehicleCenterOfMassSocketName;                     // 0x0B74(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VehicleDefaultMassValue;                           // 0x0B7C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VehicleLaunchFromCenterofMassZOffset;              // 0x0B80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B84[0x4];                                      // 0x0B84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GEAppliedImmunityToFallDamageTemplate;             // 0x0B88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GEAppliedRedeployTemplate;                         // 0x0B90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           RedeployPromptTimerHandle;                         // 0x0B98(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           EmergencyTimerHandle;                              // 0x0BA0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         EmergencyShutdownTime;                             // 0x0BA8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GEAppliedLaunched;                                 // 0x0BD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            GELaunchedAppliedHandle;                           // 0x0BD8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  GTDefaultImmunityGrantedTag;                       // 0x0BE0(0x0020)(Edit, BlueprintVisible)
	struct FActiveGameplayEffectHandle            GERedeployHandle;                                  // 0x0C00(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          OverridesVel;                                      // 0x0C08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C09[0x7];                                      // 0x0C09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraLensInterfaceClassSupport       CameraLensClass_PlayerLaunched;                    // 0x0C10(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void ExecuteUbergraph_GA_Launched_Parent(int32 EntryPoint);
	void OnParachute();
	void ListenForWalking();
	void K2_OnEndAbility(bool bWasCancelled);
	void ForceEndAbilityIgnoreLanded();
	void EmergencyTimer();
	void ApplyVisualFeedback(bool bEndAbility);
	void OnPawnLanded_Event_0(const struct FHitResult& Hit);
	void RedeployPrompt();
	void BindRedeployPromptNotfication();
	void ApplyGameplayCuePlayerLaunch();
	void ApplyGameplayCueVehicleLaunch();
	void AttemptLaunchFortPawn(class AFortPawn* FortPawn);
	void AttemptLaunchVehicle(class AFortAthenaVehicle* Vehicle);
	void K2_ActivateAbility();
	void OnChange_E60F4D3A46AA36D5B2FFFBA15F082EB9(EMovementMode NewMovementMode);
	class UObject* GetSourceObject();
	void GetFortActorFromInfo(class AActor** Actor, bool* Valid);
	void IsVehicleBeingLaunched(class AActor* Actor, bool* Valid, class AFortAthenaVehicle** AsFort_Athena_Vehicle);
	void IsPlayerBeingLaunched(class AActor* Actor, class AFortPawn** AsFort_Pawn, bool* Valid);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Launched_Parent_C">();
	}
	static class UGA_Launched_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Launched_Parent_C>();
	}
};
static_assert(alignof(UGA_Launched_Parent_C) == 0x000008, "Wrong alignment on UGA_Launched_Parent_C");
static_assert(sizeof(UGA_Launched_Parent_C) == 0x000C18, "Wrong size on UGA_Launched_Parent_C");
static_assert(offsetof(UGA_Launched_Parent_C, UberGraphFrame) == 0x000AA8, "Member 'UGA_Launched_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Launched_Parent_C, ForcedFeedback) == 0x000AB0, "Member 'UGA_Launched_Parent_C::ForcedFeedback' has a wrong offset!");
static_assert(offsetof(UGA_Launched_Parent_C, PlayerLaunchedCameraShakeTemplate) == 0x000AB8, "Member 'UGA_Launched_Parent_C::PlayerLaunchedCameraShakeTemplate' has a wrong offset!");
static_assert(offsetof(UGA_Launched_Parent_C, PlayerLaunchedGameplayCue) == 0x000AC0, "Member 'UGA_Launched_Parent_C::PlayerLaunchedGameplayCue' has a wrong offset!");
static_assert(offsetof(UGA_Launched_Parent_C, VehicleLaunchedGameplayCue) == 0x000AC8, "Member 'UGA_Launched_Parent_C::VehicleLaunchedGameplayCue' has a wrong offset!");
static_assert(offsetof(UGA_Launched_Parent_C, Velocity) == 0x000AD0, "Member 'UGA_Launched_Parent_C::Velocity' has a wrong offset!");
static_assert(offsetof(UGA_Launched_Parent_C, GravityScale) == 0x000AF8, "Member 'UGA_Launched_Parent_C::GravityScale' has a wrong offset!");
static_assert(offsetof(UGA_Launched_Parent_C, VehicleVelocityModifier) == 0x000B20, "Member 'UGA_Launched_Parent_C::VehicleVelocityModifier' has a wrong offset!");
static_assert(offsetof(UGA_Launched_Parent_C, RedeployTime) == 0x000B48, "Member 'UGA_Launched_Parent_C::RedeployTime' has a wrong offset!");
static_assert(offsetof(UGA_Launched_Parent_C, DefaultGravity) == 0x000B70, "Member 'UGA_Launched_Parent_C::DefaultGravity' has a wrong offset!");
static_assert(offsetof(UGA_Launched_Parent_C, VehicleCenterOfMassSocketName) == 0x000B74, "Member 'UGA_Launched_Parent_C::VehicleCenterOfMassSocketName' has a wrong offset!");
static_assert(offsetof(UGA_Launched_Parent_C, VehicleDefaultMassValue) == 0x000B7C, "Member 'UGA_Launched_Parent_C::VehicleDefaultMassValue' has a wrong offset!");
static_assert(offsetof(UGA_Launched_Parent_C, VehicleLaunchFromCenterofMassZOffset) == 0x000B80, "Member 'UGA_Launched_Parent_C::VehicleLaunchFromCenterofMassZOffset' has a wrong offset!");
static_assert(offsetof(UGA_Launched_Parent_C, GEAppliedImmunityToFallDamageTemplate) == 0x000B88, "Member 'UGA_Launched_Parent_C::GEAppliedImmunityToFallDamageTemplate' has a wrong offset!");
static_assert(offsetof(UGA_Launched_Parent_C, GEAppliedRedeployTemplate) == 0x000B90, "Member 'UGA_Launched_Parent_C::GEAppliedRedeployTemplate' has a wrong offset!");
static_assert(offsetof(UGA_Launched_Parent_C, RedeployPromptTimerHandle) == 0x000B98, "Member 'UGA_Launched_Parent_C::RedeployPromptTimerHandle' has a wrong offset!");
static_assert(offsetof(UGA_Launched_Parent_C, EmergencyTimerHandle) == 0x000BA0, "Member 'UGA_Launched_Parent_C::EmergencyTimerHandle' has a wrong offset!");
static_assert(offsetof(UGA_Launched_Parent_C, EmergencyShutdownTime) == 0x000BA8, "Member 'UGA_Launched_Parent_C::EmergencyShutdownTime' has a wrong offset!");
static_assert(offsetof(UGA_Launched_Parent_C, GEAppliedLaunched) == 0x000BD0, "Member 'UGA_Launched_Parent_C::GEAppliedLaunched' has a wrong offset!");
static_assert(offsetof(UGA_Launched_Parent_C, GELaunchedAppliedHandle) == 0x000BD8, "Member 'UGA_Launched_Parent_C::GELaunchedAppliedHandle' has a wrong offset!");
static_assert(offsetof(UGA_Launched_Parent_C, GTDefaultImmunityGrantedTag) == 0x000BE0, "Member 'UGA_Launched_Parent_C::GTDefaultImmunityGrantedTag' has a wrong offset!");
static_assert(offsetof(UGA_Launched_Parent_C, GERedeployHandle) == 0x000C00, "Member 'UGA_Launched_Parent_C::GERedeployHandle' has a wrong offset!");
static_assert(offsetof(UGA_Launched_Parent_C, OverridesVel) == 0x000C08, "Member 'UGA_Launched_Parent_C::OverridesVel' has a wrong offset!");
static_assert(offsetof(UGA_Launched_Parent_C, CameraLensClass_PlayerLaunched) == 0x000C10, "Member 'UGA_Launched_Parent_C::CameraLensClass_PlayerLaunched' has a wrong offset!");

}

