#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SmallSidewaysPlayspaceEncounterComponent

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Struct_Athena_SidewaysEncounter_StageData_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Struct_Athena_SidewaysEncounter_State_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Enum_Athena_SidewaysEncounter_State_structs.hpp"
#include "Struct_Athena_SidewaysEncounter_EQS_Data_structs.hpp"
#include "BaseSidewaysPlayspaceEncounterComponent_classes.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass SmallSidewaysPlayspaceEncounterComponent.SmallSidewaysPlayspaceEncounterComponent_C
// 0x06A0 (0x07F8 - 0x0158)
class USmallSidewaysPlayspaceEncounterComponent_C final : public UBaseSidewaysPlayspaceEncounterComponent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0158(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTimelineComponent*                     BubbleScale;                                       // 0x0160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AFortPawn*>                      SpawnedPawns;                                      // 0x0168(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class AFortAthenaLivingWorldVolume*           CurrentLivingWorldEncounterPointProviderVolume;    // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          EncounterVolumeEnabled;                            // 0x0180(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          EncounterTimerEnabled;                             // 0x0181(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          EncounterStageActive;                              // 0x0182(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_183[0x1];                                      // 0x0183(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EncounterTotalScoreSpawned;                        // 0x0184(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EncounterTotalScoreTarget;                         // 0x0188(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EncounterTotalScoreEliminated;                     // 0x018C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EncounterStageScoreSpawned;                        // 0x0190(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EncounterStageScoreTarget;                         // 0x0194(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EncounterStageScoreEliminated;                     // 0x0198(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OverkillEnabled;                                   // 0x019C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EncounterStageOverkillPoints;                      // 0x01A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EncounterTotalOverkillPoints;                      // 0x01A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OverkillThresholdL;                                // 0x01A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OverkillThresholdM;                                // 0x01AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OverkillThresholdS;                                // 0x01B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentEncounterWaveDurationMax;                   // 0x01B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentEncounterWaveDurationMin;                   // 0x01B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurrentEncounterLootTier;                          // 0x01BC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EncounterNoSpawnTimeoutFailure;                    // 0x01C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          EncounterCleanupTimeoutFailure;                    // 0x01C5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FinalWaveBeaten;                                   // 0x01C6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AutoKillInProgress;                                // 0x01C7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	Enum_Athena_SidewaysEncounter_State           HighestCombatState;                                // 0x01C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAthenaLivingWorldEncounterInstance* LWMEncounterInstance;                              // 0x01D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortGameStateAthena*                   CachedGameState;                                   // 0x01D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<Enum_Athena_SidewaysEncounter_State, struct FStruct_Athena_SidewaysEncounter_State> MAP_EncounterStateSettings;                        // 0x01E0(0x0050)(Edit, BlueprintVisible, ContainsInstancedReference)
	TMap<float, struct FStruct_Athena_SidewaysEncounter_EQS_Data> EncounterEQSDistanceData;                          // 0x0230(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class FName>                      OverkillLootTiers_Solo;                            // 0x0280(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class FName>                      OverkillLootTiers_Duo;                             // 0x02D0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class FName>                      OverkillLootTiers_Trio;                            // 0x0320(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class FName>                      OverkillLootTiers_Squad;                           // 0x0370(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         EncounterNoSpawnTimeoutDuration_HF;                // 0x03C0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         EncounterLastStageCleanupTimeoutDuration_HF;       // 0x03E8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         EncounterStageWarningCountdownDuration_HF;         // 0x0410(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         EncounterStageWarningCountdownPulseTime_HF;        // 0x0438(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         NPC_SmallBag_Score_HF;                             // 0x0460(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         NPC_IO_Score_HF;                                   // 0x0488(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         NPC_Misc_Score_HF;                                 // 0x04B0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<TSoftObjectPtr<class UFortAthenaLivingWorldEncounter>> DeimosEncounterTypes_Solo;                         // 0x04D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<TSoftObjectPtr<class UFortAthenaLivingWorldEncounter>> DeimosEncounterTypes_Duo;                          // 0x04E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<TSoftObjectPtr<class UFortAthenaLivingWorldEncounter>> DeimosEncounterTypes_Trio;                         // 0x04F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<TSoftObjectPtr<class UFortAthenaLivingWorldEncounter>> DeimosEncounterTypes_Squad;                        // 0x0508(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSoftObjectPtr<class UFortAthenaLivingWorldEncounter> DeimosEncounterForcedTest;                         // 0x0518(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash)
	bool                                          SpawnEnvironmentActors;                            // 0x0540(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DebugEncounterObject;                              // 0x0541(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_542[0x6];                                      // 0x0542(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_Athena_SidewaysEncounter_StageData> EncounterStageData_Solo;                           // 0x0548(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FStruct_Athena_SidewaysEncounter_StageData> EncounterStageData_Duo;                            // 0x0558(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FStruct_Athena_SidewaysEncounter_StageData> EncounterStageData_Trio;                           // 0x0568(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FStruct_Athena_SidewaysEncounter_StageData> EncounterStageData_Squad;                          // 0x0578(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         RadiusScaleMult;                                   // 0x0588(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BubbleCurrentScale;                                // 0x058C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BubbleStartScale;                                  // 0x0598(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BubbleEndScale;                                    // 0x059C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LootTier_Success;                                  // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LootTier_Overkill;                                 // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Row_MaxIdleLife;                                   // 0x05B0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           Timer_EncounterInactiveDespawn;                    // 0x05D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          DoesEncounterEverDespawn;                          // 0x05E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E1[0x3];                                      // 0x05E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EnvironmentalsZOffset;                             // 0x05E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         EnvironmentalActorsToSpawn;                        // 0x05E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class ABuildingActor*>                 SpawnedEnvironmentalActors;                        // 0x05F8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<struct FVector>                        EnvironmentalActorLocations;                       // 0x0608(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSubclassOf<class ACBGA_SpookyMist_C>         EncounterSpookyMist;                               // 0x0618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FScalableFloat                         SpookyMistCount;                                   // 0x0620(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector>                        SpookyMistLocations;                               // 0x0648(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSubclassOf<class ABuildingActor>             SpookyMist;                                        // 0x0658(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UEnvQuery*                              EQS_SpookyMist;                                    // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_Spawn;                                          // 0x0668(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_Despawn;                                        // 0x0670(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_Destruction_Failed;                             // 0x0678(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_Destruction_Success;                            // 0x0680(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_Closing_Failed;                                 // 0x0688(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_Closing_Success;                                // 0x0690(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_Overkill_First;                                 // 0x0698(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_Overkill_Normal;                                // 0x06A0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_Elimimination_Positive;                         // 0x06A8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_Elimination_Neutral;                            // 0x06B0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             MusicOverkill;                                     // 0x06B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             MusicLoss;                                         // 0x06C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             MusicCountdown;                                    // 0x06C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   EncounterStageVolume;                              // 0x06D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Timer_OutOfSafeZoneDespawn;                        // 0x06D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Row_OutOfSafeZoneFrequencyCheck;                   // 0x06E0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSubclassOf<class UObject>                    PillarParentClass;                                 // 0x0708(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FScalableFloat                         Row_PillarScaleMin;                                // 0x0710(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_PillarScaleMax;                                // 0x0738(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          PlayersMustCleanupEnemies;                         // 0x0760(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AutoKillEnemiesBeforeClosingBubble;                // 0x0761(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_762[0x2];                                      // 0x0762(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           MapTrackerColor;                                   // 0x0764(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_774[0x4];                                      // 0x0774(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffect>            GE_Stage1_Quest;                                   // 0x0778(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            GE_Stage2_Quest;                                   // 0x0780(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            GE_Stage3_Quest;                                   // 0x0788(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            GE_DropNoLoot;                                     // 0x0790(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         ScoreValue;                                        // 0x0798(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EncounterChestScale;                               // 0x079C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_SpawnAI;                                        // 0x07A8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Class_0;                                           // 0x07B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_Stage3Success;                                  // 0x07B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Row_MaxIdleLifeForPreDrop;                         // 0x07C0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSubclassOf<class UGameplayEffect>            Visited_Sideways;                                  // 0x07E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CanSpawnEnemies;                                   // 0x07F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_SmallSidewaysPlayspaceEncounterComponent(int32 EntryPoint);
	void CE_UpdateCoreFX_Stage3();
	void CE_UpdateCoreFX_Stage1();
	void CE_UpdateCoreFX_Stage2();
	void CheckInSafezoneTimer();
	void SpawnOverkillLoot();
	void TrackOverkillTotal();
	void EncounterTimerCountdown();
	void CloseEncounter();
	void ElimFeedback(class AFortPawn* EliminatedFortPawn);
	void StartEncounter();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void EncounterSoloC();
	void EncounterSoloB();
	void EncounterSoloA();
	void EncounterSoloE();
	void EncounterTimerMin();
	void ServerDespawnTriggered();
	void SetupEncounterDespawn();
	void DespawnCosmetics();
	void DestroyCosmetics();
	void SpawnInCosmetics();
	void SpawnGhostRocks(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus);
	void EQSSpawnGhostRocks();
	void CleanUpEnvironmentals();
	void FindActorsToSpawn();
	void EQSForEnvironmentalsFinished(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus);
	void _PlaceBuildingEnvironmentals();
	void DisableAndUnbindVolume();
	void EnableAndBindVolume();
	void TryToCloseEncounter();
	void RequestSpawnEventGeneration();
	void EncounterNoSpawnTimeout();
	void SetEncounterNoSpawnTimeout();
	void CleanupTimeout();
	void SetCleanupTimeout();
	void DisableVolumeAndTimerThenProgressState();
	void TryToProgressEncounter();
	void SetEncounterTimer();
	void EncounterTimer();
	void StartEncounterStage();
	void OnEndPlay_Event(class AActor* Actor, EEndPlayReason EndPlayReason);
	void OnDied_Event(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void OnActorSpawnedResult_Event(class AActor* SpawnedActor, bool bResult);
	void SpawnSuccessLoot();
	void EncounterFinished();
	void BubbleScalingFinished();
	void ScaleBubble();
	void ClosingStarted();
	void Stage3Started();
	void Stage2Started();
	void Stage1Started();
	void InactiveStarted();
	void EncounterStateChanged(Enum_Athena_SidewaysEncounter_State State);
	void ActivateEncounterBubble();
	void OnReady_44B18A374355C4B8E3CF6EB14CCC9637(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void ProgressState();
	void ScalableFloatIsValid(const struct FScalableFloat& ScalableFloat, bool* IsValid);
	void GetScalableFloatHotfixValue(const struct FScalableFloat& ScalableFloat, float AtLevel, bool* AsBool, int32* AsIntRounded, float* AsFloat);
	void SetEncounterSuccessVariables();
	void EncounterHasSpawnedAI(bool* HasSpawnedAI);
	void DebugPrintString(const class FString& String, bool ForcePrint);
	void AddEnvironmentalActors(const struct FScalableFloat& Min, const struct FScalableFloat& Max, class UClass* Actor, const TArray<class UClass*>& RandomActor, bool PickRandomActor);
	void Destroy_Buildings(float EndScale);
	void PlayStateChangeGC();
	void UpdateLoopingAudio(class USoundBase* OverrideOrOverkillMusic);
	void Start_LWM_Encounter();
	class FString EncounterTimersAsString();
	void EncounterStageScoreEliminationTargetHit(bool* ElimTargetHit, int32* OverkillOrUnderkillScore);
	bool EncounterStageScoreEliminationFallbackTargetHit();
	void EncounterStageScoreEliminationTargetOverkill(bool* Overkill, int32* OverkillOrUnderkillScore);
	void GetEncounterStageData(struct FScalableFloat* EncounterWaveDurationMax, struct FScalableFloat* EncounterWaveDurationMin, struct FScalableFloat* EncounterPointEliminationTarget, class FName* EncounterLootTier, TMap<int32, class FName>* OverkillLootTiers);
	void GetPlaylistGametype(bool* Solo, bool* Duo, bool* Trio, bool* Squad_or_Rumble);
	void GetBuildingOwner(class ABGA_Athena_SidewaysEncounter_EnvCoreSmall_C** BuildingOwner);
	void GetSidewaysBubble(class ABGA_Athena_SidewaysEncounter_BubbleSmall_C** Bubble);
	void CopyComponentReferences();
	void EnsureVisualRadiusIsInSteppedIncrements(float VisualRadius, float* VisualRadiusInSteppedIncrements);
	void SetEQSParamsIntoEncounterPointProvider();
	void UpdateTimerUI();
	void SendInitialDataToUI();
	void ForciblyAutoKillEnemiesBeforeClosingBubble();
	void SendAllDataToUI();
	bool EncounterClosing();
	void SpawnPillar(const struct FTransform& SpawnTransform, class ABuildingGameplayActor* CoreReference, class ABuildingActor** ActorSpawned);
	void SpawnChest(const struct FTransform& SpawnTransform, class ABuildingGameplayActor* CoreReference, class ABuildingActor** ActorSpawned);
	struct FTransform Trace_for_Chest_Placement(const struct FTransform& TransformIn, bool* TraceSuccess);
	bool GameIsInPreDrop();
	void GetGrabber(class ABGA_Athena_SidewaysEncounter_Grabber_C** AsBGA_Athena_Sideways_Encounter_Grabber);
	void SetEncounterState(Enum_Athena_SidewaysEncounter_State EncounterState);
	void GetEncounterState(Enum_Athena_SidewaysEncounter_State* EncounterState);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SmallSidewaysPlayspaceEncounterComponent_C">();
	}
	static class USmallSidewaysPlayspaceEncounterComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmallSidewaysPlayspaceEncounterComponent_C>();
	}
};
static_assert(alignof(USmallSidewaysPlayspaceEncounterComponent_C) == 0x000008, "Wrong alignment on USmallSidewaysPlayspaceEncounterComponent_C");
static_assert(sizeof(USmallSidewaysPlayspaceEncounterComponent_C) == 0x0007F8, "Wrong size on USmallSidewaysPlayspaceEncounterComponent_C");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, UberGraphFrame) == 0x000158, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, BubbleScale) == 0x000160, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::BubbleScale' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, SpawnedPawns) == 0x000168, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::SpawnedPawns' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, CurrentLivingWorldEncounterPointProviderVolume) == 0x000178, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::CurrentLivingWorldEncounterPointProviderVolume' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EncounterVolumeEnabled) == 0x000180, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EncounterVolumeEnabled' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EncounterTimerEnabled) == 0x000181, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EncounterTimerEnabled' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EncounterStageActive) == 0x000182, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EncounterStageActive' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EncounterTotalScoreSpawned) == 0x000184, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EncounterTotalScoreSpawned' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EncounterTotalScoreTarget) == 0x000188, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EncounterTotalScoreTarget' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EncounterTotalScoreEliminated) == 0x00018C, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EncounterTotalScoreEliminated' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EncounterStageScoreSpawned) == 0x000190, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EncounterStageScoreSpawned' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EncounterStageScoreTarget) == 0x000194, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EncounterStageScoreTarget' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EncounterStageScoreEliminated) == 0x000198, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EncounterStageScoreEliminated' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, OverkillEnabled) == 0x00019C, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::OverkillEnabled' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EncounterStageOverkillPoints) == 0x0001A0, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EncounterStageOverkillPoints' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EncounterTotalOverkillPoints) == 0x0001A4, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EncounterTotalOverkillPoints' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, OverkillThresholdL) == 0x0001A8, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::OverkillThresholdL' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, OverkillThresholdM) == 0x0001AC, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::OverkillThresholdM' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, OverkillThresholdS) == 0x0001B0, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::OverkillThresholdS' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, CurrentEncounterWaveDurationMax) == 0x0001B4, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::CurrentEncounterWaveDurationMax' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, CurrentEncounterWaveDurationMin) == 0x0001B8, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::CurrentEncounterWaveDurationMin' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, CurrentEncounterLootTier) == 0x0001BC, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::CurrentEncounterLootTier' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EncounterNoSpawnTimeoutFailure) == 0x0001C4, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EncounterNoSpawnTimeoutFailure' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EncounterCleanupTimeoutFailure) == 0x0001C5, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EncounterCleanupTimeoutFailure' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, FinalWaveBeaten) == 0x0001C6, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::FinalWaveBeaten' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, AutoKillInProgress) == 0x0001C7, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::AutoKillInProgress' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, HighestCombatState) == 0x0001C8, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::HighestCombatState' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, LWMEncounterInstance) == 0x0001D0, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::LWMEncounterInstance' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, CachedGameState) == 0x0001D8, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::CachedGameState' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, MAP_EncounterStateSettings) == 0x0001E0, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::MAP_EncounterStateSettings' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EncounterEQSDistanceData) == 0x000230, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EncounterEQSDistanceData' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, OverkillLootTiers_Solo) == 0x000280, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::OverkillLootTiers_Solo' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, OverkillLootTiers_Duo) == 0x0002D0, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::OverkillLootTiers_Duo' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, OverkillLootTiers_Trio) == 0x000320, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::OverkillLootTiers_Trio' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, OverkillLootTiers_Squad) == 0x000370, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::OverkillLootTiers_Squad' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EncounterNoSpawnTimeoutDuration_HF) == 0x0003C0, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EncounterNoSpawnTimeoutDuration_HF' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EncounterLastStageCleanupTimeoutDuration_HF) == 0x0003E8, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EncounterLastStageCleanupTimeoutDuration_HF' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EncounterStageWarningCountdownDuration_HF) == 0x000410, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EncounterStageWarningCountdownDuration_HF' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EncounterStageWarningCountdownPulseTime_HF) == 0x000438, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EncounterStageWarningCountdownPulseTime_HF' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, NPC_SmallBag_Score_HF) == 0x000460, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::NPC_SmallBag_Score_HF' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, NPC_IO_Score_HF) == 0x000488, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::NPC_IO_Score_HF' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, NPC_Misc_Score_HF) == 0x0004B0, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::NPC_Misc_Score_HF' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, DeimosEncounterTypes_Solo) == 0x0004D8, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::DeimosEncounterTypes_Solo' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, DeimosEncounterTypes_Duo) == 0x0004E8, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::DeimosEncounterTypes_Duo' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, DeimosEncounterTypes_Trio) == 0x0004F8, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::DeimosEncounterTypes_Trio' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, DeimosEncounterTypes_Squad) == 0x000508, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::DeimosEncounterTypes_Squad' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, DeimosEncounterForcedTest) == 0x000518, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::DeimosEncounterForcedTest' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, SpawnEnvironmentActors) == 0x000540, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::SpawnEnvironmentActors' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, DebugEncounterObject) == 0x000541, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::DebugEncounterObject' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EncounterStageData_Solo) == 0x000548, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EncounterStageData_Solo' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EncounterStageData_Duo) == 0x000558, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EncounterStageData_Duo' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EncounterStageData_Trio) == 0x000568, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EncounterStageData_Trio' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EncounterStageData_Squad) == 0x000578, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EncounterStageData_Squad' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, RadiusScaleMult) == 0x000588, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::RadiusScaleMult' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, BubbleCurrentScale) == 0x00058C, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::BubbleCurrentScale' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, BubbleStartScale) == 0x000598, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::BubbleStartScale' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, BubbleEndScale) == 0x00059C, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::BubbleEndScale' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, LootTier_Success) == 0x0005A0, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::LootTier_Success' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, LootTier_Overkill) == 0x0005A8, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::LootTier_Overkill' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, Row_MaxIdleLife) == 0x0005B0, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::Row_MaxIdleLife' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, Timer_EncounterInactiveDespawn) == 0x0005D8, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::Timer_EncounterInactiveDespawn' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, DoesEncounterEverDespawn) == 0x0005E0, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::DoesEncounterEverDespawn' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EnvironmentalsZOffset) == 0x0005E4, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EnvironmentalsZOffset' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EnvironmentalActorsToSpawn) == 0x0005E8, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EnvironmentalActorsToSpawn' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, SpawnedEnvironmentalActors) == 0x0005F8, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::SpawnedEnvironmentalActors' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EnvironmentalActorLocations) == 0x000608, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EnvironmentalActorLocations' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EncounterSpookyMist) == 0x000618, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EncounterSpookyMist' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, SpookyMistCount) == 0x000620, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::SpookyMistCount' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, SpookyMistLocations) == 0x000648, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::SpookyMistLocations' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, SpookyMist) == 0x000658, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::SpookyMist' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EQS_SpookyMist) == 0x000660, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EQS_SpookyMist' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, GC_Spawn) == 0x000668, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::GC_Spawn' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, GC_Despawn) == 0x000670, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::GC_Despawn' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, GC_Destruction_Failed) == 0x000678, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::GC_Destruction_Failed' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, GC_Destruction_Success) == 0x000680, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::GC_Destruction_Success' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, GC_Closing_Failed) == 0x000688, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::GC_Closing_Failed' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, GC_Closing_Success) == 0x000690, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::GC_Closing_Success' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, GC_Overkill_First) == 0x000698, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::GC_Overkill_First' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, GC_Overkill_Normal) == 0x0006A0, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::GC_Overkill_Normal' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, GC_Elimimination_Positive) == 0x0006A8, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::GC_Elimimination_Positive' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, GC_Elimination_Neutral) == 0x0006B0, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::GC_Elimination_Neutral' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, MusicOverkill) == 0x0006B8, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::MusicOverkill' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, MusicLoss) == 0x0006C0, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::MusicLoss' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, MusicCountdown) == 0x0006C8, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::MusicCountdown' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EncounterStageVolume) == 0x0006D0, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EncounterStageVolume' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, Timer_OutOfSafeZoneDespawn) == 0x0006D8, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::Timer_OutOfSafeZoneDespawn' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, Row_OutOfSafeZoneFrequencyCheck) == 0x0006E0, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::Row_OutOfSafeZoneFrequencyCheck' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, PillarParentClass) == 0x000708, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::PillarParentClass' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, Row_PillarScaleMin) == 0x000710, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::Row_PillarScaleMin' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, Row_PillarScaleMax) == 0x000738, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::Row_PillarScaleMax' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, PlayersMustCleanupEnemies) == 0x000760, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::PlayersMustCleanupEnemies' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, AutoKillEnemiesBeforeClosingBubble) == 0x000761, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::AutoKillEnemiesBeforeClosingBubble' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, MapTrackerColor) == 0x000764, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::MapTrackerColor' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, GE_Stage1_Quest) == 0x000778, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::GE_Stage1_Quest' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, GE_Stage2_Quest) == 0x000780, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::GE_Stage2_Quest' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, GE_Stage3_Quest) == 0x000788, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::GE_Stage3_Quest' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, GE_DropNoLoot) == 0x000790, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::GE_DropNoLoot' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, ScoreValue) == 0x000798, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::ScoreValue' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, EncounterChestScale) == 0x00079C, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::EncounterChestScale' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, GC_SpawnAI) == 0x0007A8, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::GC_SpawnAI' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, Class_0) == 0x0007B0, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::Class_0' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, GC_Stage3Success) == 0x0007B8, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::GC_Stage3Success' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, Row_MaxIdleLifeForPreDrop) == 0x0007C0, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::Row_MaxIdleLifeForPreDrop' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, Visited_Sideways) == 0x0007E8, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::Visited_Sideways' has a wrong offset!");
static_assert(offsetof(USmallSidewaysPlayspaceEncounterComponent_C, CanSpawnEnemies) == 0x0007F0, "Member 'USmallSidewaysPlayspaceEncounterComponent_C::CanSpawnEnemies' has a wrong offset!");

}

