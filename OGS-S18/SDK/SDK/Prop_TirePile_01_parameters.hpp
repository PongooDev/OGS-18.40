#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_TirePile_01

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function Prop_TirePile_01.Prop_TirePile_01_C.ExecuteUbergraph_Prop_TirePile_01
// 0x02B8 (0x02B8 - 0x0000)
struct Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortProjectileMovementComponent*       CallFunc_GetComponentByClass_ReturnValue;          // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortProjectilePetrol*                  K2Node_DynamicCast_AsFort_Projectile_Petrol;       // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectileMovementComponent*           CallFunc_GetComponentByClass_ReturnValue_1;        // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortAIPawn*                            K2Node_DynamicCast_AsFort_AIPawn;                  // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BB[0x5];                                      // 0x01BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CA[0x6];                                      // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPickup*                            K2Node_DynamicCast_AsFort_Pickup;                  // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x01E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn_1;           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LaunchHoverboard_Success;                 // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CeilingCheck_Success;                     // 0x023D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CeilingCheck_Success_1;                   // 0x023E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23F[0x1];                                      // 0x023F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Center;                         // 0x0250(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26A[0x2];                                      // 0x026A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x026C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27A[0x6];                                      // 0x027A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0298(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x02A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01) == 0x000008, "Wrong alignment on Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01");
static_assert(sizeof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01) == 0x0002B8, "Wrong size on Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, EntryPoint) == 0x000000, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000008, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000020, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BreakHitResult_bBlockingHit) == 0x0000B0, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000B1, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BreakHitResult_Time) == 0x0000B4, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BreakHitResult_Distance) == 0x0000B8, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BreakHitResult_Location) == 0x0000BC, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BreakHitResult_ImpactPoint) == 0x0000C8, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BreakHitResult_Normal) == 0x0000D4, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BreakHitResult_ImpactNormal) == 0x0000E0, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BreakHitResult_PhysMat) == 0x0000F0, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BreakHitResult_HitActor) == 0x0000F8, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BreakHitResult_HitComponent) == 0x000100, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BreakHitResult_HitBoneName) == 0x000108, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BreakHitResult_HitItem) == 0x000110, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BreakHitResult_ElementIndex) == 0x000114, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BreakHitResult_FaceIndex) == 0x000118, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BreakHitResult_TraceStart) == 0x00011C, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BreakHitResult_TraceEnd) == 0x000128, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000134, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_GetVelocity_ReturnValue) == 0x000140, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_GetComponentByClass_ReturnValue) == 0x000150, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BreakVector_X) == 0x000158, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BreakVector_Y) == 0x00015C, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BreakVector_Z) == 0x000160, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_IsValid_ReturnValue) == 0x000164, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_MakeVector_ReturnValue) == 0x000168, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000174, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_VSize_ReturnValue) == 0x000178, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00017C, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000180, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, K2Node_DynamicCast_AsFort_Projectile_Petrol) == 0x000188, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::K2Node_DynamicCast_AsFort_Projectile_Petrol' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, K2Node_DynamicCast_bSuccess) == 0x000190, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_Add_FloatFloat_ReturnValue) == 0x000194, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_Not_PreBool_ReturnValue) == 0x000198, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_MakeVector_ReturnValue_1) == 0x00019C, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0001A8, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, K2Node_DynamicCast_AsFort_AIPawn) == 0x0001B0, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::K2Node_DynamicCast_AsFort_AIPawn' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, K2Node_DynamicCast_bSuccess_1) == 0x0001B8, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_IsValid_ReturnValue_1) == 0x0001B9, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BooleanOR_ReturnValue) == 0x0001BA, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x0001C0, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, K2Node_DynamicCast_bSuccess_2) == 0x0001C8, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BooleanAND_ReturnValue) == 0x0001C9, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, K2Node_DynamicCast_AsFort_Pickup) == 0x0001D0, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::K2Node_DynamicCast_AsFort_Pickup' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, K2Node_DynamicCast_bSuccess_3) == 0x0001D8, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001D9, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BooleanAND_ReturnValue_1) == 0x0001DA, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_IsValid_ReturnValue_2) == 0x0001DB, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x0001E0, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x0001E8, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_ClampVectorSize_ReturnValue) == 0x0001F0, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BreakVector_X_1) == 0x0001FC, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BreakVector_Y_1) == 0x000200, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BreakVector_Z_1) == 0x000204, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_MakeVector_ReturnValue_2) == 0x000208, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, Temp_bool_IsClosed_Variable_1) == 0x000214, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, K2Node_DynamicCast_AsFort_Player_Pawn_1) == 0x000218, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::K2Node_DynamicCast_AsFort_Player_Pawn_1' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, K2Node_DynamicCast_bSuccess_4) == 0x000220, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000224, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_MakeVector_ReturnValue_3) == 0x000230, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_LaunchHoverboard_Success) == 0x00023C, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_LaunchHoverboard_Success' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_CeilingCheck_Success) == 0x00023D, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_CeilingCheck_Success' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_CeilingCheck_Success_1) == 0x00023E, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_CeilingCheck_Success_1' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_MakeVector_ReturnValue_4) == 0x000240, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_GetTimeSeconds_ReturnValue) == 0x00024C, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, K2Node_CustomEvent_Center) == 0x000250, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::K2Node_CustomEvent_Center' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_MakeVector_ReturnValue_5) == 0x00025C, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, Temp_bool_Has_Been_Initd_Variable) == 0x000268, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BooleanAND_ReturnValue_2) == 0x000269, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x00026C, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, Temp_bool_Has_Been_Initd_Variable_1) == 0x000278, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_IsValid_ReturnValue_3) == 0x000279, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_GetController_ReturnValue) == 0x000280, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000288, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, K2Node_DynamicCast_bSuccess_5) == 0x000290, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000298, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x0002A0, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0002B0, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01, CallFunc_BooleanOR_ReturnValue_1) == 0x0002B1, "Member 'Prop_TirePile_01_C_ExecuteUbergraph_Prop_TirePile_01::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function Prop_TirePile_01.Prop_TirePile_01_C.MakeWobbleEffect
// 0x000C (0x000C - 0x0000)
struct Prop_TirePile_01_C_MakeWobbleEffect final
{
public:
	struct FVector                                Center;                                            // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_TirePile_01_C_MakeWobbleEffect) == 0x000004, "Wrong alignment on Prop_TirePile_01_C_MakeWobbleEffect");
static_assert(sizeof(Prop_TirePile_01_C_MakeWobbleEffect) == 0x00000C, "Wrong size on Prop_TirePile_01_C_MakeWobbleEffect");
static_assert(offsetof(Prop_TirePile_01_C_MakeWobbleEffect, Center) == 0x000000, "Member 'Prop_TirePile_01_C_MakeWobbleEffect::Center' has a wrong offset!");

// Function Prop_TirePile_01.Prop_TirePile_01_C.BndEvt__Jump_Collision_K2Node_ComponentBoundEvent_252_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct Prop_TirePile_01_C_BndEvt__Jump_Collision_K2Node_ComponentBoundEvent_252_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Prop_TirePile_01_C_BndEvt__Jump_Collision_K2Node_ComponentBoundEvent_252_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Prop_TirePile_01_C_BndEvt__Jump_Collision_K2Node_ComponentBoundEvent_252_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Prop_TirePile_01_C_BndEvt__Jump_Collision_K2Node_ComponentBoundEvent_252_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on Prop_TirePile_01_C_BndEvt__Jump_Collision_K2Node_ComponentBoundEvent_252_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Prop_TirePile_01_C_BndEvt__Jump_Collision_K2Node_ComponentBoundEvent_252_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Prop_TirePile_01_C_BndEvt__Jump_Collision_K2Node_ComponentBoundEvent_252_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_BndEvt__Jump_Collision_K2Node_ComponentBoundEvent_252_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Prop_TirePile_01_C_BndEvt__Jump_Collision_K2Node_ComponentBoundEvent_252_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_BndEvt__Jump_Collision_K2Node_ComponentBoundEvent_252_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Prop_TirePile_01_C_BndEvt__Jump_Collision_K2Node_ComponentBoundEvent_252_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_BndEvt__Jump_Collision_K2Node_ComponentBoundEvent_252_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Prop_TirePile_01_C_BndEvt__Jump_Collision_K2Node_ComponentBoundEvent_252_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_BndEvt__Jump_Collision_K2Node_ComponentBoundEvent_252_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Prop_TirePile_01_C_BndEvt__Jump_Collision_K2Node_ComponentBoundEvent_252_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_BndEvt__Jump_Collision_K2Node_ComponentBoundEvent_252_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Prop_TirePile_01_C_BndEvt__Jump_Collision_K2Node_ComponentBoundEvent_252_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function Prop_TirePile_01.Prop_TirePile_01_C.CeilingCheck
// 0x0130 (0x0130 - 0x0000)
struct Prop_TirePile_01_C_CeilingCheck final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x0070(0x0010)(ReferenceParm)
	struct FHitResult                             CallFunc_CapsuleTraceSingle_OutHit;                // 0x0080(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingle_ReturnValue;           // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors_1;            // 0x0118(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_TirePile_01_C_CeilingCheck) == 0x000008, "Wrong alignment on Prop_TirePile_01_C_CeilingCheck");
static_assert(sizeof(Prop_TirePile_01_C_CeilingCheck) == 0x000130, "Wrong size on Prop_TirePile_01_C_CeilingCheck");
static_assert(offsetof(Prop_TirePile_01_C_CeilingCheck, Success) == 0x000000, "Member 'Prop_TirePile_01_C_CeilingCheck::Success' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CeilingCheck, ActorsToIgnore) == 0x000008, "Member 'Prop_TirePile_01_C_CeilingCheck::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CeilingCheck, Temp_int_Array_Index_Variable) == 0x000018, "Member 'Prop_TirePile_01_C_CeilingCheck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CeilingCheck, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'Prop_TirePile_01_C_CeilingCheck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CeilingCheck, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'Prop_TirePile_01_C_CeilingCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CeilingCheck, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000028, "Member 'Prop_TirePile_01_C_CeilingCheck::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CeilingCheck, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'Prop_TirePile_01_C_CeilingCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CeilingCheck, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000034, "Member 'Prop_TirePile_01_C_CeilingCheck::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CeilingCheck, CallFunc_BreakVector_X) == 0x000040, "Member 'Prop_TirePile_01_C_CeilingCheck::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CeilingCheck, CallFunc_BreakVector_Y) == 0x000044, "Member 'Prop_TirePile_01_C_CeilingCheck::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CeilingCheck, CallFunc_BreakVector_Z) == 0x000048, "Member 'Prop_TirePile_01_C_CeilingCheck::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CeilingCheck, CallFunc_Array_Add_ReturnValue) == 0x00004C, "Member 'Prop_TirePile_01_C_CeilingCheck::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CeilingCheck, CallFunc_Add_FloatFloat_ReturnValue) == 0x000050, "Member 'Prop_TirePile_01_C_CeilingCheck::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CeilingCheck, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000054, "Member 'Prop_TirePile_01_C_CeilingCheck::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CeilingCheck, CallFunc_MakeVector_ReturnValue) == 0x000058, "Member 'Prop_TirePile_01_C_CeilingCheck::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CeilingCheck, CallFunc_MakeVector_ReturnValue_1) == 0x000064, "Member 'Prop_TirePile_01_C_CeilingCheck::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CeilingCheck, CallFunc_GetAttachedActors_OutActors) == 0x000070, "Member 'Prop_TirePile_01_C_CeilingCheck::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CeilingCheck, CallFunc_CapsuleTraceSingle_OutHit) == 0x000080, "Member 'Prop_TirePile_01_C_CeilingCheck::CallFunc_CapsuleTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CeilingCheck, CallFunc_CapsuleTraceSingle_ReturnValue) == 0x000108, "Member 'Prop_TirePile_01_C_CeilingCheck::CallFunc_CapsuleTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CeilingCheck, CallFunc_Array_Get_Item) == 0x000110, "Member 'Prop_TirePile_01_C_CeilingCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CeilingCheck, CallFunc_GetAttachedActors_OutActors_1) == 0x000118, "Member 'Prop_TirePile_01_C_CeilingCheck::CallFunc_GetAttachedActors_OutActors_1' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CeilingCheck, CallFunc_Array_Length_ReturnValue) == 0x000128, "Member 'Prop_TirePile_01_C_CeilingCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CeilingCheck, CallFunc_Less_IntInt_ReturnValue) == 0x00012C, "Member 'Prop_TirePile_01_C_CeilingCheck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Prop_TirePile_01.Prop_TirePile_01_C.CheckJumpingOrientation
// 0x0064 (0x0064 - 0x0000)
struct Prop_TirePile_01_C_CheckJumpingOrientation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_TirePile_01_C_CheckJumpingOrientation) == 0x000004, "Wrong alignment on Prop_TirePile_01_C_CheckJumpingOrientation");
static_assert(sizeof(Prop_TirePile_01_C_CheckJumpingOrientation) == 0x000064, "Wrong size on Prop_TirePile_01_C_CheckJumpingOrientation");
static_assert(offsetof(Prop_TirePile_01_C_CheckJumpingOrientation, ReturnValue) == 0x000000, "Member 'Prop_TirePile_01_C_CheckJumpingOrientation::ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CheckJumpingOrientation, CallFunc_GetActorForwardVector_ReturnValue) == 0x00000C, "Member 'Prop_TirePile_01_C_CheckJumpingOrientation::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CheckJumpingOrientation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'Prop_TirePile_01_C_CheckJumpingOrientation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CheckJumpingOrientation, CallFunc_BreakVector_X) == 0x00001C, "Member 'Prop_TirePile_01_C_CheckJumpingOrientation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CheckJumpingOrientation, CallFunc_BreakVector_Y) == 0x000020, "Member 'Prop_TirePile_01_C_CheckJumpingOrientation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CheckJumpingOrientation, CallFunc_BreakVector_Z) == 0x000024, "Member 'Prop_TirePile_01_C_CheckJumpingOrientation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CheckJumpingOrientation, CallFunc_Abs_ReturnValue) == 0x000028, "Member 'Prop_TirePile_01_C_CheckJumpingOrientation::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CheckJumpingOrientation, CallFunc_MakeVector_ReturnValue) == 0x00002C, "Member 'Prop_TirePile_01_C_CheckJumpingOrientation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CheckJumpingOrientation, CallFunc_Round_ReturnValue) == 0x000038, "Member 'Prop_TirePile_01_C_CheckJumpingOrientation::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CheckJumpingOrientation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00003C, "Member 'Prop_TirePile_01_C_CheckJumpingOrientation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CheckJumpingOrientation, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000048, "Member 'Prop_TirePile_01_C_CheckJumpingOrientation::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CheckJumpingOrientation, CallFunc_MakeVector_ReturnValue_1) == 0x00004C, "Member 'Prop_TirePile_01_C_CheckJumpingOrientation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_TirePile_01_C_CheckJumpingOrientation, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000058, "Member 'Prop_TirePile_01_C_CheckJumpingOrientation::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");

}

