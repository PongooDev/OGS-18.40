#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TempestRuntime

#include "Basic.hpp"


namespace SDK
{

// Enum TempestRuntime.ETempestState
// NumValues: 0x0006
enum class ETempestState : uint8
{
	Unformed                                 = 0,
	Forming                                  = 1,
	Active                                   = 2,
	Dissipating                              = 3,
	Complete                                 = 4,
	ETempestState_MAX                        = 5,
};

// ScriptStruct TempestRuntime.TempestStateInfo
// 0x000C (0x000C - 0x0000)
struct FTempestStateInfo final
{
public:
	ETempestState                                 CurrentState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartTime;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndTime;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTempestStateInfo) == 0x000004, "Wrong alignment on FTempestStateInfo");
static_assert(sizeof(FTempestStateInfo) == 0x00000C, "Wrong size on FTempestStateInfo");
static_assert(offsetof(FTempestStateInfo, CurrentState) == 0x000000, "Member 'FTempestStateInfo::CurrentState' has a wrong offset!");
static_assert(offsetof(FTempestStateInfo, StartTime) == 0x000004, "Member 'FTempestStateInfo::StartTime' has a wrong offset!");
static_assert(offsetof(FTempestStateInfo, EndTime) == 0x000008, "Member 'FTempestStateInfo::EndTime' has a wrong offset!");

// ScriptStruct TempestRuntime.TempestStateChangeTimerInfo
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x04) FTempestStateChangeTimerInfo final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FTempestStateChangeTimerInfo) == 0x000004, "Wrong alignment on FTempestStateChangeTimerInfo");
static_assert(sizeof(FTempestStateChangeTimerInfo) == 0x000008, "Wrong size on FTempestStateChangeTimerInfo");

}

