#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SortAndFilterButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUILegacy_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass SortAndFilterButton.SortAndFilterButton_C
// 0x0050 (0x0C70 - 0x0C20)
class USortAndFilterButton_C final : public UCommonButtonLegacy
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0C20(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ShowPipOutline;                                    // 0x0C28(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Deselected;                                        // 0x0C30(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Selected;                                          // 0x0C38(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hover;                                             // 0x0C40(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_ButtonAction;                                 // 0x0C48(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Button_Description;                                // 0x0C50(0x0018)(Edit, BlueprintVisible)
	bool                                          IsSelected;                                        // 0x0C68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_SortAndFilterButton(int32 EntryPoint);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void BP_OnDeselected();
	void BP_OnSelected();
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void SetText(const class FText& Text);
	void ResetAnimations();
	void SnapToEndOfAnimation(class UWidgetAnimation* Animation, EUMGSequencePlayMode PlayMode);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SortAndFilterButton_C">();
	}
	static class USortAndFilterButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USortAndFilterButton_C>();
	}
};
static_assert(alignof(USortAndFilterButton_C) == 0x000008, "Wrong alignment on USortAndFilterButton_C");
static_assert(sizeof(USortAndFilterButton_C) == 0x000C70, "Wrong size on USortAndFilterButton_C");
static_assert(offsetof(USortAndFilterButton_C, UberGraphFrame) == 0x000C20, "Member 'USortAndFilterButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USortAndFilterButton_C, ShowPipOutline) == 0x000C28, "Member 'USortAndFilterButton_C::ShowPipOutline' has a wrong offset!");
static_assert(offsetof(USortAndFilterButton_C, Deselected) == 0x000C30, "Member 'USortAndFilterButton_C::Deselected' has a wrong offset!");
static_assert(offsetof(USortAndFilterButton_C, Selected) == 0x000C38, "Member 'USortAndFilterButton_C::Selected' has a wrong offset!");
static_assert(offsetof(USortAndFilterButton_C, Hover) == 0x000C40, "Member 'USortAndFilterButton_C::Hover' has a wrong offset!");
static_assert(offsetof(USortAndFilterButton_C, Text_ButtonAction) == 0x000C48, "Member 'USortAndFilterButton_C::Text_ButtonAction' has a wrong offset!");
static_assert(offsetof(USortAndFilterButton_C, Button_Description) == 0x000C50, "Member 'USortAndFilterButton_C::Button_Description' has a wrong offset!");
static_assert(offsetof(USortAndFilterButton_C, IsSelected) == 0x000C68, "Member 'USortAndFilterButton_C::IsSelected' has a wrong offset!");

}

