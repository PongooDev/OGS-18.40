#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HermesPlaysetsUI

#include "Basic.hpp"


namespace SDK
{

// Enum HermesPlaysetsUI.EDownloadOnDemandErrorMessage
// NumValues: 0x0005
enum class EDownloadOnDemandErrorMessage : uint8
{
	ProjectLinkCodeFailedToResolve           = 0,
	ProjectLinkCodeAlreadyUsed               = 1,
	ProjectBeaconFailedToDownload            = 2,
	ProjectHasNoPlaysetsDownloadFailed       = 3,
	EDownloadOnDemandErrorMessage_MAX        = 4,
};

// ScriptStruct HermesPlaysetsUI.DownloadProjectInfo
// 0x0078 (0x0078 - 0x0000)
struct FDownloadProjectInfo final
{
public:
	class FString                                 LinkCode;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   DisplayName;                                       // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UTexture2DDynamic*                      PreviewTexture;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PreviewTextureURL;                                 // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ShortDescription;                                  // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   FullDescription;                                   // 0x0058(0x0018)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          bSelected;                                         // 0x0070(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGotBadData;                                       // 0x0071(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGhost;                                            // 0x0072(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDownloaded;                                       // 0x0073(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDownloading;                                      // 0x0074(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FDownloadProjectInfo) == 0x000008, "Wrong alignment on FDownloadProjectInfo");
static_assert(sizeof(FDownloadProjectInfo) == 0x000078, "Wrong size on FDownloadProjectInfo");
static_assert(offsetof(FDownloadProjectInfo, LinkCode) == 0x000000, "Member 'FDownloadProjectInfo::LinkCode' has a wrong offset!");
static_assert(offsetof(FDownloadProjectInfo, DisplayName) == 0x000010, "Member 'FDownloadProjectInfo::DisplayName' has a wrong offset!");
static_assert(offsetof(FDownloadProjectInfo, PreviewTexture) == 0x000028, "Member 'FDownloadProjectInfo::PreviewTexture' has a wrong offset!");
static_assert(offsetof(FDownloadProjectInfo, PreviewTextureURL) == 0x000030, "Member 'FDownloadProjectInfo::PreviewTextureURL' has a wrong offset!");
static_assert(offsetof(FDownloadProjectInfo, ShortDescription) == 0x000040, "Member 'FDownloadProjectInfo::ShortDescription' has a wrong offset!");
static_assert(offsetof(FDownloadProjectInfo, FullDescription) == 0x000058, "Member 'FDownloadProjectInfo::FullDescription' has a wrong offset!");
static_assert(offsetof(FDownloadProjectInfo, bSelected) == 0x000070, "Member 'FDownloadProjectInfo::bSelected' has a wrong offset!");
static_assert(offsetof(FDownloadProjectInfo, bGotBadData) == 0x000071, "Member 'FDownloadProjectInfo::bGotBadData' has a wrong offset!");
static_assert(offsetof(FDownloadProjectInfo, bGhost) == 0x000072, "Member 'FDownloadProjectInfo::bGhost' has a wrong offset!");
static_assert(offsetof(FDownloadProjectInfo, bDownloaded) == 0x000073, "Member 'FDownloadProjectInfo::bDownloaded' has a wrong offset!");
static_assert(offsetof(FDownloadProjectInfo, bDownloading) == 0x000074, "Member 'FDownloadProjectInfo::bDownloading' has a wrong offset!");

// ScriptStruct HermesPlaysetsUI.ModuleData
// 0x0010 (0x0010 - 0x0000)
struct FModuleData final
{
public:
	TArray<class UFortItemDefinition*>            DownloadedItems;                                   // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FModuleData) == 0x000008, "Wrong alignment on FModuleData");
static_assert(sizeof(FModuleData) == 0x000010, "Wrong size on FModuleData");
static_assert(offsetof(FModuleData, DownloadedItems) == 0x000000, "Member 'FModuleData::DownloadedItems' has a wrong offset!");

}

