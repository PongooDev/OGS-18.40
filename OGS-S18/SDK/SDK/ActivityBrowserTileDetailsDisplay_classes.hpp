#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActivityBrowserTileDetailsDisplay

#include "Basic.hpp"

#include "DiscoveryBrowserUI_classes.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "UMG_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ActivityBrowserTileDetailsDisplay.ActivityBrowserTileDetailsDisplay_C
// 0x00F8 (0x0D78 - 0x0C80)
class UActivityBrowserTileDetailsDisplay_C final : public UFortActivityTileDetailsDisplay
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0C80(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       SetDisabledColoration;                             // 0x0C88(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnDisabledClick;                                   // 0x0C90(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnDisabledIconPulse;                               // 0x0C98(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnHoverUnhoverRehover;                             // 0x0CA0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnImageLoaded;                                     // 0x0CA8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HoverPulse;                                        // 0x0CB0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnIntro;                                           // 0x0CB8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnHoverSelect;                                     // 0x0CC0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonActionWidget*                    Action_SelectGamepad;                              // 0x0CC8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       DisabledWarningMessage;                            // 0x0CD0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_FriendsPlaying;                                 // 0x0CD8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_ActivityInfo;                        // 0x0CE0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_PlayerCount;                         // 0x0CE8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               IconOvr;                                           // 0x0CF0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_KeyArt;                                      // 0x0CF8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortMobileImage*                       Image_PlayerIcon;                                  // 0x0D00(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               OriginalContentBanner;                             // 0x0D08(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OvrDisabledWarning;                                // 0x0D10(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Primary;                                   // 0x0D18(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_FriendCount;                                  // 0x0D20(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FName                                   KeyArtParameter;                                   // 0x0D28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MissingArtParameter;                               // 0x0D30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HasFavoriteButtonParameter;                        // 0x0D38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HasDetailsButtonParameter;                         // 0x0D40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   IsFavoritedParameter;                              // 0x0D48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsKeyArtValid;                                     // 0x0D50(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D51[0x7];                                      // 0x0D51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               DefaultImage;                                      // 0x0D58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTileActive;                                      // 0x0D60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D61[0x7];                                      // 0x0D61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           DisabledClickTimer;                                // 0x0D68(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         DisabledClickDuration;                             // 0x0D70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActivityValid;                                   // 0x0D74(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ActivityBrowserTileDetailsDisplay(int32 EntryPoint);
	void OnSocialUsersPlayingChanged(int32 NumPlaying);
	void OnLocalPlayerDemoted();
	void OnLocalPlayerPromotedToLeader();
	void DisableClickTimerExpired();
	void BP_OnClicked();
	void OnPartySizeChanged(const int32 PartySize);
	void OnTileActiveSet(const bool bIsTileActive);
	void OnInitialized();
	void Construct();
	void OnIsFavoriteChanged(const bool bIsFavorite);
	void OnDetailsUpdated();
	void BP_OnUnhovered();
	void BP_OnHovered();
	void OnPreviewImageChanged(const bool bIsLoading, const class UTexture* Texture);
	void HandleInputMethodChanged(ECommonInputType bNewInputType);
	void Destruct();
	void SetFavoriteButtonAvailable();
	void SetDetailsButtonAvailable();
	void SnapToEndOfAnimation(class UWidgetAnimation* InAnimation, EUMGSequencePlayMode PlayMode);
	void SetEpicActivityStyling();
	void RefreshDisabledState();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ActivityBrowserTileDetailsDisplay_C">();
	}
	static class UActivityBrowserTileDetailsDisplay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActivityBrowserTileDetailsDisplay_C>();
	}
};
static_assert(alignof(UActivityBrowserTileDetailsDisplay_C) == 0x000008, "Wrong alignment on UActivityBrowserTileDetailsDisplay_C");
static_assert(sizeof(UActivityBrowserTileDetailsDisplay_C) == 0x000D78, "Wrong size on UActivityBrowserTileDetailsDisplay_C");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, UberGraphFrame) == 0x000C80, "Member 'UActivityBrowserTileDetailsDisplay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, SetDisabledColoration) == 0x000C88, "Member 'UActivityBrowserTileDetailsDisplay_C::SetDisabledColoration' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, OnDisabledClick) == 0x000C90, "Member 'UActivityBrowserTileDetailsDisplay_C::OnDisabledClick' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, OnDisabledIconPulse) == 0x000C98, "Member 'UActivityBrowserTileDetailsDisplay_C::OnDisabledIconPulse' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, OnHoverUnhoverRehover) == 0x000CA0, "Member 'UActivityBrowserTileDetailsDisplay_C::OnHoverUnhoverRehover' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, OnImageLoaded) == 0x000CA8, "Member 'UActivityBrowserTileDetailsDisplay_C::OnImageLoaded' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, HoverPulse) == 0x000CB0, "Member 'UActivityBrowserTileDetailsDisplay_C::HoverPulse' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, OnIntro) == 0x000CB8, "Member 'UActivityBrowserTileDetailsDisplay_C::OnIntro' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, OnHoverSelect) == 0x000CC0, "Member 'UActivityBrowserTileDetailsDisplay_C::OnHoverSelect' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, Action_SelectGamepad) == 0x000CC8, "Member 'UActivityBrowserTileDetailsDisplay_C::Action_SelectGamepad' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, DisabledWarningMessage) == 0x000CD0, "Member 'UActivityBrowserTileDetailsDisplay_C::DisabledWarningMessage' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, HB_FriendsPlaying) == 0x000CD8, "Member 'UActivityBrowserTileDetailsDisplay_C::HB_FriendsPlaying' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, HorizontalBox_ActivityInfo) == 0x000CE0, "Member 'UActivityBrowserTileDetailsDisplay_C::HorizontalBox_ActivityInfo' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, HorizontalBox_PlayerCount) == 0x000CE8, "Member 'UActivityBrowserTileDetailsDisplay_C::HorizontalBox_PlayerCount' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, IconOvr) == 0x000CF0, "Member 'UActivityBrowserTileDetailsDisplay_C::IconOvr' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, Image_KeyArt) == 0x000CF8, "Member 'UActivityBrowserTileDetailsDisplay_C::Image_KeyArt' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, Image_PlayerIcon) == 0x000D00, "Member 'UActivityBrowserTileDetailsDisplay_C::Image_PlayerIcon' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, OriginalContentBanner) == 0x000D08, "Member 'UActivityBrowserTileDetailsDisplay_C::OriginalContentBanner' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, OvrDisabledWarning) == 0x000D10, "Member 'UActivityBrowserTileDetailsDisplay_C::OvrDisabledWarning' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, SizeBox_Primary) == 0x000D18, "Member 'UActivityBrowserTileDetailsDisplay_C::SizeBox_Primary' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, Text_FriendCount) == 0x000D20, "Member 'UActivityBrowserTileDetailsDisplay_C::Text_FriendCount' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, KeyArtParameter) == 0x000D28, "Member 'UActivityBrowserTileDetailsDisplay_C::KeyArtParameter' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, MissingArtParameter) == 0x000D30, "Member 'UActivityBrowserTileDetailsDisplay_C::MissingArtParameter' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, HasFavoriteButtonParameter) == 0x000D38, "Member 'UActivityBrowserTileDetailsDisplay_C::HasFavoriteButtonParameter' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, HasDetailsButtonParameter) == 0x000D40, "Member 'UActivityBrowserTileDetailsDisplay_C::HasDetailsButtonParameter' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, IsFavoritedParameter) == 0x000D48, "Member 'UActivityBrowserTileDetailsDisplay_C::IsFavoritedParameter' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, IsKeyArtValid) == 0x000D50, "Member 'UActivityBrowserTileDetailsDisplay_C::IsKeyArtValid' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, DefaultImage) == 0x000D58, "Member 'UActivityBrowserTileDetailsDisplay_C::DefaultImage' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, IsTileActive) == 0x000D60, "Member 'UActivityBrowserTileDetailsDisplay_C::IsTileActive' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, DisabledClickTimer) == 0x000D68, "Member 'UActivityBrowserTileDetailsDisplay_C::DisabledClickTimer' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, DisabledClickDuration) == 0x000D70, "Member 'UActivityBrowserTileDetailsDisplay_C::DisabledClickDuration' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileDetailsDisplay_C, IsActivityValid) == 0x000D74, "Member 'UActivityBrowserTileDetailsDisplay_C::IsActivityValid' has a wrong offset!");

}

