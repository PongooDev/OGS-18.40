#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPS18_BattlePassScreen

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPS18_BattlePassScreen.BPS18_BattlePassScreen_C.ExecuteUbergraph_BPS18_BattlePassScreen
// 0x08D8 (0x08D8 - 0x0000)
struct BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	EBattlePassCurrencyType                       Temp_byte_Variable_3;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0058(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0070(0x0018)()
	EBattlePassCurrencyType                       Temp_byte_Variable_4;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_5;                              // 0x0090(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00A8(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00C0(0x0018)()
	EBattlePassView                               Temp_byte_Variable_5;                              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          Temp_byte_Variable_6;                              // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_7;                              // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBattlePassCurrencyType                       Temp_byte_Variable_8;                              // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassCurrencyType                       Temp_byte_Variable_9;                              // 0x00DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_8;                              // 0x00E8(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x0100(0x0018)()
	bool                                          Temp_bool_Variable_6;                              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_13;                             // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_14;                             // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_15;                             // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x011E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_16;                             // 0x011F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_17;                             // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_CurrentIndex;                         // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalNumVariants;                     // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0140(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0188(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01D8(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_18;                             // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_19;                             // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassView                               K2Node_Event_NewView;                              // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F3[0x5];                                      // 0x01F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AVaultWorld_C*>                  CallFunc_GetAllActorsOfClass_OutActors;            // 0x01F8(0x0010)(ReferenceParm)
	TArray<class AFrontendCamera_VaultRotator_C*> CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0208(0x0010)(ReferenceParm)
	class AVaultWorld_C*                          CallFunc_Array_Get_Item;                           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_225[0x3];                                      // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_20;                             // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_232[0x2];                                      // 0x0232(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldPlayBPVideo_ReturnValue;            // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23A[0x6];                                      // 0x023A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UIconTextButton_C*                      K2Node_DynamicCast_AsIcon_Text_Button;             // 0x0240(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_RowDisplayName;                       // 0x0250(0x0018)(ConstParm)
	ESlateVisibility                              Temp_byte_Variable_21;                             // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortRarityItemData                    K2Node_Event_Rarity;                               // 0x0270(0x0080)()
	bool                                          K2Node_Event_bNoReward;                            // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortItemDefinition*              K2Node_Event_RewardItem;                           // 0x02F8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFrontendCamera_VaultRotator_C*         CallFunc_Array_Get_Item_1;                         // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue_1;                // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_22;                             // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassView                               Temp_byte_Variable_23;                             // 0x030A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_24;                             // 0x030B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_25;                             // 0x030D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x030E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x030F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_Description;                          // 0x0318(0x0018)(ConstParm)
	int32                                         K2Node_Event_OwnedRewards_1;                       // 0x0330(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NeededRewards;                        // 0x0334(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShowPrerequisiteLock;                // 0x0338(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0350(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0398(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x03E0(0x0010)(ReferenceParm)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F4[0x4];                                      // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x03F8(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_26;                             // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_27;                             // 0x0411(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_28;                             // 0x0412(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_413[0x1];                                      // 0x0413(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_OwnedRewards;                         // 0x0414(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalRewards;                         // 0x0418(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0420(0x0040)(HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_469[0x3];                                      // 0x0469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0470(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B4[0x4];                                      // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x04B8(0x0010)(ReferenceParm)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CC[0x4];                                      // 0x04CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x04D0(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_29;                             // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_30;                             // 0x04E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_31;                             // 0x04EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x04EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_Event_Cost;                                 // 0x04EC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassCurrencyType                       K2Node_Event_CurrencyType_1;                       // 0x04F0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassCurrencyType                       K2Node_Event_CurrencyType;                         // 0x04F1(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F2[0x6];                                      // 0x04F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x04F8(0x0018)()
	class FText                                   K2Node_Select_Default_3;                           // 0x0510(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0528(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0568(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x05A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x05B8(0x0018)()
	EBattlePassView                               Temp_byte_Variable_32;                             // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassView                               Temp_byte_Variable_33;                             // 0x05D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x05D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x05D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_34;                             // 0x05D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_35;                             // 0x05D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_36;                             // 0x05D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_37;                             // 0x05D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bTransitionForward;                   // 0x05D8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D9[0x7];                                      // 0x05D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x05E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default_5;                           // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E9[0x3];                                      // 0x05E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x05EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x05FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60C[0x4];                                      // 0x060C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_1;          // 0x0610(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_Select_Default_6;                           // 0x0618(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_2;                        // 0x0628(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63C[0x4];                                      // 0x063C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_3;                        // 0x0648(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_Select_Default_7;                           // 0x0658(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_2;          // 0x0668(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue_1;               // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_671[0x3];                                      // 0x0671(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin_4;                        // 0x0674(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_5;                        // 0x0684(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMobileGame_ReturnValue_2;               // 0x0694(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_695[0x3];                                      // 0x0695(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_Select_Default_8;                           // 0x0698(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_6;                        // 0x06A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_7;                        // 0x06B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_Select_Default_9;                           // 0x06C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_3;          // 0x06D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_Event_Delay;                                // 0x06E0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetTimespanAsText_ReturnValue;            // 0x06E8(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_38;                             // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_701[0x7];                                      // 0x0701(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x0708(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x0748(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x0758(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_39;                             // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_771[0x7];                                      // 0x0771(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default_10;                          // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_11;                          // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_40;                             // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_41;                             // 0x0789(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78A[0x2];                                      // 0x078A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x078C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassInputs                             K2Node_Event_InputType;                            // 0x0798(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_799[0x7];                                      // 0x0799(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UBattlePassInputData*             K2Node_Event_InputData;                            // 0x07A0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePassBulkBuyInputData*            K2Node_DynamicCast_AsBattle_Pass_Bulk_Buy_Input_Data; // 0x07A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x07B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B1[0x7];                                      // 0x07B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPS18_GetAllButton_C*                  K2Node_DynamicCast_AsBPS18_Get_All_Button;         // 0x07B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x07C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetData_IsPageCompleted;                  // 0x07C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C2[0x2];                                      // 0x07C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetData_StartingPage;                     // 0x07C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetData_EndingPage;                       // 0x07C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetData_PurchaseCost;                     // 0x07CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x07D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D1[0x7];                                      // 0x07D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_GetQuestPageDelay_ReturnValue;            // 0x07D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetTimespanAsText_ReturnValue_1;          // 0x07E0(0x0018)()
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x07F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7FC[0x4];                                      // 0x07FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x0800(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0840(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_841[0x7];                                      // 0x0841(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x0848(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_5;                     // 0x0858(0x0018)()
	class FText                                   K2Node_Select_Default_12;                          // 0x0870(0x0018)()
	int32                                         K2Node_Event_Level;                                // 0x0888(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_88C[0x4];                                      // 0x088C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_13;                          // 0x0890(0x0018)()
	EBattlePassView                               Temp_byte_Variable_42;                             // 0x08A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_14;                          // 0x08A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8AA[0x6];                                      // 0x08AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_GetQuestPageDelay_ReturnValue_1;          // 0x08B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue_1;            // 0x08B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x08BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x08BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_BattlePassRequiredVisible;      // 0x08BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_ComingSoonVisible;              // 0x08BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_CustomizationSkinRequiredVisible; // 0x08C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_15;                          // 0x08C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_16;                          // 0x08C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_17;                          // 0x08C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x08C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSeasonalCustomizationItemOwned_ReturnValue; // 0x08C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x08C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x08CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x08CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x08CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSeasonalCustomizationItemOwned_ReturnValue_1; // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen) == 0x000008, "Wrong alignment on BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen");
static_assert(sizeof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen) == 0x0008D8, "Wrong size on BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, EntryPoint) == 0x000000, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable) == 0x000004, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_1) == 0x000005, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_2) == 0x000006, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_bool_Variable) == 0x000007, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_text_Variable) == 0x000008, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_text_Variable_1) == 0x000020, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_3) == 0x000038, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_text_Variable_2) == 0x000040, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_text_Variable_3) == 0x000058, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_text_Variable_4) == 0x000070, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_4) == 0x000088, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_text_Variable_5) == 0x000090, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_text_Variable_6) == 0x0000A8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_text_Variable_7) == 0x0000C0, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_5) == 0x0000D8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_bool_Variable_1) == 0x0000D9, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_6) == 0x0000DA, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_7) == 0x0000DB, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_bool_Variable_2) == 0x0000DC, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_bool_Variable_3) == 0x0000DD, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_8) == 0x0000DE, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_9) == 0x0000DF, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_bool_Variable_4) == 0x0000E0, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_10) == 0x0000E1, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_11) == 0x0000E2, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_bool_Variable_5) == 0x0000E3, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_text_Variable_8) == 0x0000E8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_text_Variable_9) == 0x000100, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_bool_Variable_6) == 0x000118, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_12) == 0x000119, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_13) == 0x00011A, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_bool_Variable_7) == 0x00011B, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_14) == 0x00011C, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_15) == 0x00011D, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_bool_Variable_8) == 0x00011E, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_16) == 0x00011F, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_17) == 0x000120, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_bool_True_if_break_was_hit_Variable) == 0x000121, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_int_Array_Index_Variable) == 0x000124, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Not_PreBool_ReturnValue) == 0x000128, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Event_CurrentIndex) == 0x00012C, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Event_CurrentIndex' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Event_TotalNumVariants) == 0x000130, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Event_TotalNumVariants' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_PlayAnimation_ReturnValue) == 0x000138, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData) == 0x000140, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Greater_IntInt_ReturnValue) == 0x000180, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Add_IntInt_ReturnValue) == 0x000184, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_1) == 0x000188, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_MakeArray_Array) == 0x0001C8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Format_ReturnValue) == 0x0001D8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_18) == 0x0001F0, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_19) == 0x0001F1, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Event_NewView) == 0x0001F2, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Event_NewView' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_GetAllActorsOfClass_OutActors) == 0x0001F8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000208, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Array_Get_Item) == 0x000218, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Array_Length_ReturnValue) == 0x000220, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_ActorHasTag_ReturnValue) == 0x000224, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Array_Length_ReturnValue_1) == 0x000228, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_int_Loop_Counter_Variable) == 0x00022C, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_20) == 0x000230, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Less_IntInt_ReturnValue) == 0x000231, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Add_IntInt_ReturnValue_1) == 0x000234, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_BooleanAND_ReturnValue) == 0x000238, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_ShouldPlayBPVideo_ReturnValue) == 0x000239, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_ShouldPlayBPVideo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_DynamicCast_AsIcon_Text_Button) == 0x000240, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_DynamicCast_AsIcon_Text_Button' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_DynamicCast_bSuccess) == 0x000248, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Event_RowDisplayName) == 0x000250, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Event_RowDisplayName' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_21) == 0x000268, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_int_Array_Index_Variable_1) == 0x00026C, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Event_Rarity) == 0x000270, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Event_Rarity' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Event_bNoReward) == 0x0002F0, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Event_bNoReward' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Event_RewardItem) == 0x0002F8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Event_RewardItem' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Array_Get_Item_1) == 0x000300, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_ActorHasTag_ReturnValue_1) == 0x000308, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_ActorHasTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_22) == 0x000309, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_23) == 0x00030A, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_24) == 0x00030B, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Select_Default) == 0x00030C, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_25) == 0x00030D, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_bool_True_if_break_was_hit_Variable_1) == 0x00030E, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Not_PreBool_ReturnValue_1) == 0x00030F, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Event_IsDesignTime) == 0x000310, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Event_Description) == 0x000318, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Event_Description' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Event_OwnedRewards_1) == 0x000330, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Event_OwnedRewards_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Event_NeededRewards) == 0x000334, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Event_NeededRewards' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Event_bShowPrerequisiteLock) == 0x000338, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Event_bShowPrerequisiteLock' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000340, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Select_Default_1) == 0x000348, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_2) == 0x000350, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000390, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_3) == 0x000398, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0003D8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_MakeArray_Array_1) == 0x0003E0, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0003F0, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Format_ReturnValue_1) == 0x0003F8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_26) == 0x000410, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_27) == 0x000411, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_28) == 0x000412, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Event_OwnedRewards) == 0x000414, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Event_OwnedRewards' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Event_TotalRewards) == 0x000418, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Event_TotalRewards' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_4) == 0x000420, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000460, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000468, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x00046C, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_5) == 0x000470, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x0004B0, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_MakeArray_Array_2) == 0x0004B8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0004C8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Format_ReturnValue_2) == 0x0004D0, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_29) == 0x0004E8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_30) == 0x0004E9, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_31) == 0x0004EA, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_31' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Not_PreBool_ReturnValue_2) == 0x0004EB, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Event_Cost) == 0x0004EC, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Event_Cost' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Event_CurrencyType_1) == 0x0004F0, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Event_CurrencyType_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Event_CurrencyType) == 0x0004F1, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Event_CurrencyType' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Select_Default_2) == 0x0004F8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Select_Default_3) == 0x000510, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_6) == 0x000528, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_7) == 0x000568, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_MakeArray_Array_3) == 0x0005A8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Format_ReturnValue_3) == 0x0005B8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_32) == 0x0005D0, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_32' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_33) == 0x0005D1, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_33' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Select_Default_4) == 0x0005D2, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_IsMobileGame_ReturnValue) == 0x0005D3, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_34) == 0x0005D4, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_34' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_35) == 0x0005D5, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_35' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_36) == 0x0005D6, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_36' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_37) == 0x0005D7, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_37' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Event_bTransitionForward) == 0x0005D8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Event_bTransitionForward' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x0005E0, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Select_Default_5) == 0x0005E8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_MakeStruct_Margin) == 0x0005EC, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_MakeStruct_Margin_1) == 0x0005FC, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_SlotAsOverlaySlot_ReturnValue_1) == 0x000610, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_SlotAsOverlaySlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Select_Default_6) == 0x000618, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_MakeStruct_Margin_2) == 0x000628, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_MakeStruct_Margin_2' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_GetEndTime_ReturnValue) == 0x000638, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_PlayAnimation_ReturnValue_1) == 0x000640, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_MakeStruct_Margin_3) == 0x000648, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_MakeStruct_Margin_3' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Select_Default_7) == 0x000658, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_SlotAsOverlaySlot_ReturnValue_2) == 0x000668, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_SlotAsOverlaySlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_IsMobileGame_ReturnValue_1) == 0x000670, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_IsMobileGame_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_MakeStruct_Margin_4) == 0x000674, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_MakeStruct_Margin_4' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_MakeStruct_Margin_5) == 0x000684, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_MakeStruct_Margin_5' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_IsMobileGame_ReturnValue_2) == 0x000694, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_IsMobileGame_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Select_Default_8) == 0x000698, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_MakeStruct_Margin_6) == 0x0006A8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_MakeStruct_Margin_6' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_MakeStruct_Margin_7) == 0x0006B8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_MakeStruct_Margin_7' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Select_Default_9) == 0x0006C8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_SlotAsOverlaySlot_ReturnValue_3) == 0x0006D8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_SlotAsOverlaySlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Event_Delay) == 0x0006E0, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_GetTimespanAsText_ReturnValue) == 0x0006E8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_GetTimespanAsText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_38) == 0x000700, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_38' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_8) == 0x000708, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_MakeArray_Array_4) == 0x000748, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Format_ReturnValue_4) == 0x000758, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_39) == 0x000770, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_39' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Select_Default_10) == 0x000778, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Select_Default_11) == 0x000780, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_40) == 0x000788, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_40' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_41) == 0x000789, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_41' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_SelectInt_ReturnValue) == 0x00078C, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_PlayAnimationForward_ReturnValue) == 0x000790, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Event_InputType) == 0x000798, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Event_InputType' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Event_InputData) == 0x0007A0, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Event_InputData' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_DynamicCast_AsBattle_Pass_Bulk_Buy_Input_Data) == 0x0007A8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_DynamicCast_AsBattle_Pass_Bulk_Buy_Input_Data' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_DynamicCast_bSuccess_1) == 0x0007B0, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_DynamicCast_AsBPS18_Get_All_Button) == 0x0007B8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_DynamicCast_AsBPS18_Get_All_Button' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_DynamicCast_bSuccess_2) == 0x0007C0, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_GetData_IsPageCompleted) == 0x0007C1, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_GetData_IsPageCompleted' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_GetData_StartingPage) == 0x0007C4, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_GetData_StartingPage' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_GetData_EndingPage) == 0x0007C8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_GetData_EndingPage' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_GetData_PurchaseCost) == 0x0007CC, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_GetData_PurchaseCost' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_SwitchEnum_CmpSuccess) == 0x0007D0, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_GetQuestPageDelay_ReturnValue) == 0x0007D8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_GetQuestPageDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_GetTimespanAsText_ReturnValue_1) == 0x0007E0, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_GetTimespanAsText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_GetTotalSeconds_ReturnValue) == 0x0007F8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_9) == 0x000800, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000840, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_MakeArray_Array_5) == 0x000848, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Format_ReturnValue_5) == 0x000858, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Format_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Select_Default_12) == 0x000870, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Event_Level) == 0x000888, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Event_Level' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Select_Default_13) == 0x000890, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_byte_Variable_42) == 0x0008A8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_byte_Variable_42' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Select_Default_14) == 0x0008A9, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_GetQuestPageDelay_ReturnValue_1) == 0x0008B0, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_GetQuestPageDelay_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_GetTotalSeconds_ReturnValue_1) == 0x0008B8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_GetTotalSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Not_PreBool_ReturnValue_3) == 0x0008BC, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0008BD, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_CustomEvent_BattlePassRequiredVisible) == 0x0008BE, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_CustomEvent_BattlePassRequiredVisible' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_CustomEvent_ComingSoonVisible) == 0x0008BF, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_CustomEvent_ComingSoonVisible' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_CustomEvent_CustomizationSkinRequiredVisible) == 0x0008C0, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_CustomEvent_CustomizationSkinRequiredVisible' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Select_Default_15) == 0x0008C1, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Select_Default_16) == 0x0008C2, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Select_Default_16' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, K2Node_Select_Default_17) == 0x0008C3, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::K2Node_Select_Default_17' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, Temp_int_Loop_Counter_Variable_1) == 0x0008C4, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_IsSeasonalCustomizationItemOwned_ReturnValue) == 0x0008C8, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_IsSeasonalCustomizationItemOwned_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Not_PreBool_ReturnValue_4) == 0x0008C9, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Less_IntInt_ReturnValue_1) == 0x0008CA, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_BooleanAND_ReturnValue_1) == 0x0008CB, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_Add_IntInt_ReturnValue_2) == 0x0008CC, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen, CallFunc_IsSeasonalCustomizationItemOwned_ReturnValue_1) == 0x0008D0, "Member 'BPS18_BattlePassScreen_C_ExecuteUbergraph_BPS18_BattlePassScreen::CallFunc_IsSeasonalCustomizationItemOwned_ReturnValue_1' has a wrong offset!");

// Function BPS18_BattlePassScreen.BPS18_BattlePassScreen_C.SetTagVisibility
// 0x0003 (0x0003 - 0x0000)
struct BPS18_BattlePassScreen_C_SetTagVisibility final
{
public:
	bool                                          BattlePassRequiredVisible;                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ComingSoonVisible;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CustomizationSkinRequiredVisible;                  // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPS18_BattlePassScreen_C_SetTagVisibility) == 0x000001, "Wrong alignment on BPS18_BattlePassScreen_C_SetTagVisibility");
static_assert(sizeof(BPS18_BattlePassScreen_C_SetTagVisibility) == 0x000003, "Wrong size on BPS18_BattlePassScreen_C_SetTagVisibility");
static_assert(offsetof(BPS18_BattlePassScreen_C_SetTagVisibility, BattlePassRequiredVisible) == 0x000000, "Member 'BPS18_BattlePassScreen_C_SetTagVisibility::BattlePassRequiredVisible' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_SetTagVisibility, ComingSoonVisible) == 0x000001, "Member 'BPS18_BattlePassScreen_C_SetTagVisibility::ComingSoonVisible' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_SetTagVisibility, CustomizationSkinRequiredVisible) == 0x000002, "Member 'BPS18_BattlePassScreen_C_SetTagVisibility::CustomizationSkinRequiredVisible' has a wrong offset!");

// Function BPS18_BattlePassScreen.BPS18_BattlePassScreen_C.OnLevelChanged
// 0x0004 (0x0004 - 0x0000)
struct BPS18_BattlePassScreen_C_OnLevelChanged final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS18_BattlePassScreen_C_OnLevelChanged) == 0x000004, "Wrong alignment on BPS18_BattlePassScreen_C_OnLevelChanged");
static_assert(sizeof(BPS18_BattlePassScreen_C_OnLevelChanged) == 0x000004, "Wrong size on BPS18_BattlePassScreen_C_OnLevelChanged");
static_assert(offsetof(BPS18_BattlePassScreen_C_OnLevelChanged, Level) == 0x000000, "Member 'BPS18_BattlePassScreen_C_OnLevelChanged::Level' has a wrong offset!");

// Function BPS18_BattlePassScreen.BPS18_BattlePassScreen_C.OnSetDynamicInput
// 0x0010 (0x0010 - 0x0000)
struct BPS18_BattlePassScreen_C_OnSetDynamicInput final
{
public:
	EBattlePassInputs                             InputType;                                         // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UBattlePassInputData*             InputData;                                         // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS18_BattlePassScreen_C_OnSetDynamicInput) == 0x000008, "Wrong alignment on BPS18_BattlePassScreen_C_OnSetDynamicInput");
static_assert(sizeof(BPS18_BattlePassScreen_C_OnSetDynamicInput) == 0x000010, "Wrong size on BPS18_BattlePassScreen_C_OnSetDynamicInput");
static_assert(offsetof(BPS18_BattlePassScreen_C_OnSetDynamicInput, InputType) == 0x000000, "Member 'BPS18_BattlePassScreen_C_OnSetDynamicInput::InputType' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_OnSetDynamicInput, InputData) == 0x000008, "Member 'BPS18_BattlePassScreen_C_OnSetDynamicInput::InputData' has a wrong offset!");

// Function BPS18_BattlePassScreen.BPS18_BattlePassScreen_C.OnItemDelayed
// 0x0008 (0x0008 - 0x0000)
struct BPS18_BattlePassScreen_C_OnItemDelayed final
{
public:
	struct FTimespan                              Delay;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS18_BattlePassScreen_C_OnItemDelayed) == 0x000008, "Wrong alignment on BPS18_BattlePassScreen_C_OnItemDelayed");
static_assert(sizeof(BPS18_BattlePassScreen_C_OnItemDelayed) == 0x000008, "Wrong size on BPS18_BattlePassScreen_C_OnItemDelayed");
static_assert(offsetof(BPS18_BattlePassScreen_C_OnItemDelayed, Delay) == 0x000000, "Member 'BPS18_BattlePassScreen_C_OnItemDelayed::Delay' has a wrong offset!");

// Function BPS18_BattlePassScreen.BPS18_BattlePassScreen_C.OnTransitionItemDetails
// 0x0001 (0x0001 - 0x0000)
struct BPS18_BattlePassScreen_C_OnTransitionItemDetails final
{
public:
	bool                                          bTransitionForward;                                // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPS18_BattlePassScreen_C_OnTransitionItemDetails) == 0x000001, "Wrong alignment on BPS18_BattlePassScreen_C_OnTransitionItemDetails");
static_assert(sizeof(BPS18_BattlePassScreen_C_OnTransitionItemDetails) == 0x000001, "Wrong size on BPS18_BattlePassScreen_C_OnTransitionItemDetails");
static_assert(offsetof(BPS18_BattlePassScreen_C_OnTransitionItemDetails, bTransitionForward) == 0x000000, "Member 'BPS18_BattlePassScreen_C_OnTransitionItemDetails::bTransitionForward' has a wrong offset!");

// Function BPS18_BattlePassScreen.BPS18_BattlePassScreen_C.OnInsufficientFunds
// 0x0001 (0x0001 - 0x0000)
struct BPS18_BattlePassScreen_C_OnInsufficientFunds final
{
public:
	EBattlePassCurrencyType                       CurrencyType;                                      // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS18_BattlePassScreen_C_OnInsufficientFunds) == 0x000001, "Wrong alignment on BPS18_BattlePassScreen_C_OnInsufficientFunds");
static_assert(sizeof(BPS18_BattlePassScreen_C_OnInsufficientFunds) == 0x000001, "Wrong size on BPS18_BattlePassScreen_C_OnInsufficientFunds");
static_assert(offsetof(BPS18_BattlePassScreen_C_OnInsufficientFunds, CurrencyType) == 0x000000, "Member 'BPS18_BattlePassScreen_C_OnInsufficientFunds::CurrencyType' has a wrong offset!");

// Function BPS18_BattlePassScreen.BPS18_BattlePassScreen_C.OnSetItemPrice
// 0x0008 (0x0008 - 0x0000)
struct BPS18_BattlePassScreen_C_OnSetItemPrice final
{
public:
	int32                                         Cost;                                              // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassCurrencyType                       CurrencyType;                                      // 0x0004(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS18_BattlePassScreen_C_OnSetItemPrice) == 0x000004, "Wrong alignment on BPS18_BattlePassScreen_C_OnSetItemPrice");
static_assert(sizeof(BPS18_BattlePassScreen_C_OnSetItemPrice) == 0x000008, "Wrong size on BPS18_BattlePassScreen_C_OnSetItemPrice");
static_assert(offsetof(BPS18_BattlePassScreen_C_OnSetItemPrice, Cost) == 0x000000, "Member 'BPS18_BattlePassScreen_C_OnSetItemPrice::Cost' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_OnSetItemPrice, CurrencyType) == 0x000004, "Member 'BPS18_BattlePassScreen_C_OnSetItemPrice::CurrencyType' has a wrong offset!");

// Function BPS18_BattlePassScreen.BPS18_BattlePassScreen_C.OnSetClaimedRewardInfo
// 0x0008 (0x0008 - 0x0000)
struct BPS18_BattlePassScreen_C_OnSetClaimedRewardInfo final
{
public:
	int32                                         OwnedRewards;                                      // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalRewards;                                      // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS18_BattlePassScreen_C_OnSetClaimedRewardInfo) == 0x000004, "Wrong alignment on BPS18_BattlePassScreen_C_OnSetClaimedRewardInfo");
static_assert(sizeof(BPS18_BattlePassScreen_C_OnSetClaimedRewardInfo) == 0x000008, "Wrong size on BPS18_BattlePassScreen_C_OnSetClaimedRewardInfo");
static_assert(offsetof(BPS18_BattlePassScreen_C_OnSetClaimedRewardInfo, OwnedRewards) == 0x000000, "Member 'BPS18_BattlePassScreen_C_OnSetClaimedRewardInfo::OwnedRewards' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_OnSetClaimedRewardInfo, TotalRewards) == 0x000004, "Member 'BPS18_BattlePassScreen_C_OnSetClaimedRewardInfo::TotalRewards' has a wrong offset!");

// Function BPS18_BattlePassScreen.BPS18_BattlePassScreen_C.OnSetPrerequisiteInfo
// 0x0028 (0x0028 - 0x0000)
struct BPS18_BattlePassScreen_C_OnSetPrerequisiteInfo final
{
public:
	class FText                                   Description;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         OwnedRewards;                                      // 0x0018(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NeededRewards;                                     // 0x001C(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowPrerequisiteLock;                             // 0x0020(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPS18_BattlePassScreen_C_OnSetPrerequisiteInfo) == 0x000008, "Wrong alignment on BPS18_BattlePassScreen_C_OnSetPrerequisiteInfo");
static_assert(sizeof(BPS18_BattlePassScreen_C_OnSetPrerequisiteInfo) == 0x000028, "Wrong size on BPS18_BattlePassScreen_C_OnSetPrerequisiteInfo");
static_assert(offsetof(BPS18_BattlePassScreen_C_OnSetPrerequisiteInfo, Description) == 0x000000, "Member 'BPS18_BattlePassScreen_C_OnSetPrerequisiteInfo::Description' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_OnSetPrerequisiteInfo, OwnedRewards) == 0x000018, "Member 'BPS18_BattlePassScreen_C_OnSetPrerequisiteInfo::OwnedRewards' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_OnSetPrerequisiteInfo, NeededRewards) == 0x00001C, "Member 'BPS18_BattlePassScreen_C_OnSetPrerequisiteInfo::NeededRewards' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_OnSetPrerequisiteInfo, bShowPrerequisiteLock) == 0x000020, "Member 'BPS18_BattlePassScreen_C_OnSetPrerequisiteInfo::bShowPrerequisiteLock' has a wrong offset!");

// Function BPS18_BattlePassScreen.BPS18_BattlePassScreen_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BPS18_BattlePassScreen_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPS18_BattlePassScreen_C_PreConstruct) == 0x000001, "Wrong alignment on BPS18_BattlePassScreen_C_PreConstruct");
static_assert(sizeof(BPS18_BattlePassScreen_C_PreConstruct) == 0x000001, "Wrong size on BPS18_BattlePassScreen_C_PreConstruct");
static_assert(offsetof(BPS18_BattlePassScreen_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BPS18_BattlePassScreen_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BPS18_BattlePassScreen.BPS18_BattlePassScreen_C.OnViewReward
// 0x0090 (0x0090 - 0x0000)
struct BPS18_BattlePassScreen_C_OnViewReward final
{
public:
	struct FFortRarityItemData                    Rarity;                                            // 0x0000(0x0080)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bNoReward;                                         // 0x0080(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortItemDefinition*              RewardItem;                                        // 0x0088(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS18_BattlePassScreen_C_OnViewReward) == 0x000008, "Wrong alignment on BPS18_BattlePassScreen_C_OnViewReward");
static_assert(sizeof(BPS18_BattlePassScreen_C_OnViewReward) == 0x000090, "Wrong size on BPS18_BattlePassScreen_C_OnViewReward");
static_assert(offsetof(BPS18_BattlePassScreen_C_OnViewReward, Rarity) == 0x000000, "Member 'BPS18_BattlePassScreen_C_OnViewReward::Rarity' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_OnViewReward, bNoReward) == 0x000080, "Member 'BPS18_BattlePassScreen_C_OnViewReward::bNoReward' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_OnViewReward, RewardItem) == 0x000088, "Member 'BPS18_BattlePassScreen_C_OnViewReward::RewardItem' has a wrong offset!");

// Function BPS18_BattlePassScreen.BPS18_BattlePassScreen_C.OnPreviewActionButtonUpdated
// 0x0018 (0x0018 - 0x0000)
struct BPS18_BattlePassScreen_C_OnPreviewActionButtonUpdated final
{
public:
	class FText                                   RowDisplayName;                                    // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BPS18_BattlePassScreen_C_OnPreviewActionButtonUpdated) == 0x000008, "Wrong alignment on BPS18_BattlePassScreen_C_OnPreviewActionButtonUpdated");
static_assert(sizeof(BPS18_BattlePassScreen_C_OnPreviewActionButtonUpdated) == 0x000018, "Wrong size on BPS18_BattlePassScreen_C_OnPreviewActionButtonUpdated");
static_assert(offsetof(BPS18_BattlePassScreen_C_OnPreviewActionButtonUpdated, RowDisplayName) == 0x000000, "Member 'BPS18_BattlePassScreen_C_OnPreviewActionButtonUpdated::RowDisplayName' has a wrong offset!");

// Function BPS18_BattlePassScreen.BPS18_BattlePassScreen_C.OnBattlePassViewChanged
// 0x0001 (0x0001 - 0x0000)
struct BPS18_BattlePassScreen_C_OnBattlePassViewChanged final
{
public:
	EBattlePassView                               NewView;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS18_BattlePassScreen_C_OnBattlePassViewChanged) == 0x000001, "Wrong alignment on BPS18_BattlePassScreen_C_OnBattlePassViewChanged");
static_assert(sizeof(BPS18_BattlePassScreen_C_OnBattlePassViewChanged) == 0x000001, "Wrong size on BPS18_BattlePassScreen_C_OnBattlePassViewChanged");
static_assert(offsetof(BPS18_BattlePassScreen_C_OnBattlePassViewChanged, NewView) == 0x000000, "Member 'BPS18_BattlePassScreen_C_OnBattlePassViewChanged::NewView' has a wrong offset!");

// Function BPS18_BattlePassScreen.BPS18_BattlePassScreen_C.OnVariantUpdate
// 0x0008 (0x0008 - 0x0000)
struct BPS18_BattlePassScreen_C_OnVariantUpdate final
{
public:
	int32                                         CurrentIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalNumVariants;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS18_BattlePassScreen_C_OnVariantUpdate) == 0x000004, "Wrong alignment on BPS18_BattlePassScreen_C_OnVariantUpdate");
static_assert(sizeof(BPS18_BattlePassScreen_C_OnVariantUpdate) == 0x000008, "Wrong size on BPS18_BattlePassScreen_C_OnVariantUpdate");
static_assert(offsetof(BPS18_BattlePassScreen_C_OnVariantUpdate, CurrentIndex) == 0x000000, "Member 'BPS18_BattlePassScreen_C_OnVariantUpdate::CurrentIndex' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_OnVariantUpdate, TotalNumVariants) == 0x000004, "Member 'BPS18_BattlePassScreen_C_OnVariantUpdate::TotalNumVariants' has a wrong offset!");

// Function BPS18_BattlePassScreen.BPS18_BattlePassScreen_C.HandleViewReward
// 0x000C (0x000C - 0x0000)
struct BPS18_BattlePassScreen_C_HandleViewReward final
{
public:
	bool                                          bInNoReward;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InNumRewardsToPurchase;                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS18_BattlePassScreen_C_HandleViewReward) == 0x000004, "Wrong alignment on BPS18_BattlePassScreen_C_HandleViewReward");
static_assert(sizeof(BPS18_BattlePassScreen_C_HandleViewReward) == 0x00000C, "Wrong size on BPS18_BattlePassScreen_C_HandleViewReward");
static_assert(offsetof(BPS18_BattlePassScreen_C_HandleViewReward, bInNoReward) == 0x000000, "Member 'BPS18_BattlePassScreen_C_HandleViewReward::bInNoReward' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_HandleViewReward, InNumRewardsToPurchase) == 0x000004, "Member 'BPS18_BattlePassScreen_C_HandleViewReward::InNumRewardsToPurchase' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_HandleViewReward, Temp_bool_Variable) == 0x000008, "Member 'BPS18_BattlePassScreen_C_HandleViewReward::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_HandleViewReward, Temp_byte_Variable) == 0x000009, "Member 'BPS18_BattlePassScreen_C_HandleViewReward::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_HandleViewReward, Temp_byte_Variable_1) == 0x00000A, "Member 'BPS18_BattlePassScreen_C_HandleViewReward::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_HandleViewReward, K2Node_Select_Default) == 0x00000B, "Member 'BPS18_BattlePassScreen_C_HandleViewReward::K2Node_Select_Default' has a wrong offset!");

// Function BPS18_BattlePassScreen.BPS18_BattlePassScreen_C.HandleWatchVideoRequest
// 0x00B0 (0x00B0 - 0x0000)
struct BPS18_BattlePassScreen_C_HandleWatchVideoRequest final
{
public:
	bool                                          PlayFromDisc;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortStreamMediaSource*                 StreamSource;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UseElectraForWatchBattlePassMovie_ReturnValue; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortRuntimeOptions*                    CallFunc_GetRuntimeOptions_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVideoWidgetConfig                     K2Node_MakeStruct_VideoWidgetConfig;               // 0x0020(0x0080)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortActivatableMovieWidget_C*          CallFunc_Create_ReturnValue;                       // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS18_BattlePassScreen_C_HandleWatchVideoRequest) == 0x000008, "Wrong alignment on BPS18_BattlePassScreen_C_HandleWatchVideoRequest");
static_assert(sizeof(BPS18_BattlePassScreen_C_HandleWatchVideoRequest) == 0x0000B0, "Wrong size on BPS18_BattlePassScreen_C_HandleWatchVideoRequest");
static_assert(offsetof(BPS18_BattlePassScreen_C_HandleWatchVideoRequest, PlayFromDisc) == 0x000000, "Member 'BPS18_BattlePassScreen_C_HandleWatchVideoRequest::PlayFromDisc' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_HandleWatchVideoRequest, StreamSource) == 0x000008, "Member 'BPS18_BattlePassScreen_C_HandleWatchVideoRequest::StreamSource' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_HandleWatchVideoRequest, CallFunc_UseElectraForWatchBattlePassMovie_ReturnValue) == 0x000010, "Member 'BPS18_BattlePassScreen_C_HandleWatchVideoRequest::CallFunc_UseElectraForWatchBattlePassMovie_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_HandleWatchVideoRequest, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BPS18_BattlePassScreen_C_HandleWatchVideoRequest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_HandleWatchVideoRequest, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'BPS18_BattlePassScreen_C_HandleWatchVideoRequest::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_HandleWatchVideoRequest, CallFunc_GetRuntimeOptions_ReturnValue) == 0x000018, "Member 'BPS18_BattlePassScreen_C_HandleWatchVideoRequest::CallFunc_GetRuntimeOptions_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_HandleWatchVideoRequest, K2Node_MakeStruct_VideoWidgetConfig) == 0x000020, "Member 'BPS18_BattlePassScreen_C_HandleWatchVideoRequest::K2Node_MakeStruct_VideoWidgetConfig' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_HandleWatchVideoRequest, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000A0, "Member 'BPS18_BattlePassScreen_C_HandleWatchVideoRequest::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_HandleWatchVideoRequest, CallFunc_Create_ReturnValue) == 0x0000A8, "Member 'BPS18_BattlePassScreen_C_HandleWatchVideoRequest::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function BPS18_BattlePassScreen.BPS18_BattlePassScreen_C.HandleRewardTimelineAnimation
// 0x0018 (0x0018 - 0x0000)
struct BPS18_BattlePassScreen_C_HandleRewardTimelineAnimation final
{
public:
	bool                                          bAnimateRewardTimeline;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS18_BattlePassScreen_C_HandleRewardTimelineAnimation) == 0x000008, "Wrong alignment on BPS18_BattlePassScreen_C_HandleRewardTimelineAnimation");
static_assert(sizeof(BPS18_BattlePassScreen_C_HandleRewardTimelineAnimation) == 0x000018, "Wrong size on BPS18_BattlePassScreen_C_HandleRewardTimelineAnimation");
static_assert(offsetof(BPS18_BattlePassScreen_C_HandleRewardTimelineAnimation, bAnimateRewardTimeline) == 0x000000, "Member 'BPS18_BattlePassScreen_C_HandleRewardTimelineAnimation::bAnimateRewardTimeline' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_HandleRewardTimelineAnimation, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'BPS18_BattlePassScreen_C_HandleRewardTimelineAnimation::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_HandleRewardTimelineAnimation, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'BPS18_BattlePassScreen_C_HandleRewardTimelineAnimation::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function BPS18_BattlePassScreen.BPS18_BattlePassScreen_C.Set landing Page text
// 0x0038 (0x0038 - 0x0000)
struct BPS18_BattlePassScreen_C_Set_landing_Page_text final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Description;                                       // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         State_Index;                                       // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS18_BattlePassScreen_C_Set_landing_Page_text) == 0x000008, "Wrong alignment on BPS18_BattlePassScreen_C_Set_landing_Page_text");
static_assert(sizeof(BPS18_BattlePassScreen_C_Set_landing_Page_text) == 0x000038, "Wrong size on BPS18_BattlePassScreen_C_Set_landing_Page_text");
static_assert(offsetof(BPS18_BattlePassScreen_C_Set_landing_Page_text, Title) == 0x000000, "Member 'BPS18_BattlePassScreen_C_Set_landing_Page_text::Title' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_Set_landing_Page_text, Description) == 0x000018, "Member 'BPS18_BattlePassScreen_C_Set_landing_Page_text::Description' has a wrong offset!");
static_assert(offsetof(BPS18_BattlePassScreen_C_Set_landing_Page_text, State_Index) == 0x000030, "Member 'BPS18_BattlePassScreen_C_Set_landing_Page_text::State_Index' has a wrong offset!");

}

