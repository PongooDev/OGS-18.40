#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemShopTile

#include "Basic.hpp"

#include "ItemShopTile_classes.hpp"
#include "ItemShopTile_parameters.hpp"


namespace SDK
{

// Function ItemShopTile.ItemShopTile_C.ExecuteUbergraph_ItemShopTile
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemShopTile_C::ExecuteUbergraph_ItemShopTile(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemShopTile_C", "ExecuteUbergraph_ItemShopTile");

	Params::ItemShopTile_C_ExecuteUbergraph_ItemShopTile Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemShopTile.ItemShopTile_C.SetRestingStateVisual
// (BlueprintCallable, BlueprintEvent)

void UItemShopTile_C::SetRestingStateVisual()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemShopTile_C", "SetRestingStateVisual");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemShopTile.ItemShopTile_C.SetHoveredStateVisual
// (BlueprintCallable, BlueprintEvent)

void UItemShopTile_C::SetHoveredStateVisual()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemShopTile_C", "SetHoveredStateVisual");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemShopTile.ItemShopTile_C.OnPeekStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsInPeekState                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemShopTile_C::OnPeekStateChanged(bool bIsInPeekState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemShopTile_C", "OnPeekStateChanged");

	Params::ItemShopTile_C_OnPeekStateChanged Parms{};

	Parms.bIsInPeekState = bIsInPeekState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemShopTile.ItemShopTile_C.OnDefaultBackgroundRequested
// (Event, Protected, BlueprintEvent)

void UItemShopTile_C::OnDefaultBackgroundRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemShopTile_C", "OnDefaultBackgroundRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemShopTile.ItemShopTile_C.OnActiveStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsActiveState                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemShopTile_C::OnActiveStateChanged(bool bIsActiveState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemShopTile_C", "OnActiveStateChanged");

	Params::ItemShopTile_C_OnActiveStateChanged Parms{};

	Parms.bIsActiveState = bIsActiveState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemShopTile.ItemShopTile_C.OnPrePresentationSwap
// (Event, Protected, BlueprintEvent)

void UItemShopTile_C::OnPrePresentationSwap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemShopTile_C", "OnPrePresentationSwap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemShopTile.ItemShopTile_C.OnUpdateItemLivePreview
// (Event, Protected, BlueprintEvent)
// Parameters:
// EItemShopTileSize                       TileSize                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UFortItemThumbnailRenderer*       ThumbnailRendererPtr                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFortItemCaptureActor*            CaptureActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemShopTile_C::OnUpdateItemLivePreview(EItemShopTileSize TileSize, class UFortItemThumbnailRenderer* ThumbnailRendererPtr, class AFortItemCaptureActor* CaptureActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemShopTile_C", "OnUpdateItemLivePreview");

	Params::ItemShopTile_C_OnUpdateItemLivePreview Parms{};

	Parms.TileSize = TileSize;
	Parms.ThumbnailRendererPtr = ThumbnailRendererPtr;
	Parms.CaptureActor = CaptureActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemShopTile.ItemShopTile_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UItemShopTile_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemShopTile_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemShopTile.ItemShopTile_C.OnUpdateViolator
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// EViolatorIntensity                      ViolatorIntensity                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ViolatorText                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UItemShopTile_C::OnUpdateViolator(EViolatorIntensity ViolatorIntensity, const class FText& ViolatorText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemShopTile_C", "OnUpdateViolator");

	Params::ItemShopTile_C_OnUpdateViolator Parms{};

	Parms.ViolatorIntensity = ViolatorIntensity;
	Parms.ViolatorText = std::move(ViolatorText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemShopTile.ItemShopTile_C.OnUpdateTileSize
// (Event, Protected, BlueprintEvent)
// Parameters:
// EItemShopTileSize                       TileSize                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemShopTile_C::OnUpdateTileSize(EItemShopTileSize TileSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemShopTile_C", "OnUpdateTileSize");

	Params::ItemShopTile_C_OnUpdateTileSize Parms{};

	Parms.TileSize = TileSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemShopTile.ItemShopTile_C.BP_OnUnhovered
// (Event, Protected, BlueprintEvent)

void UItemShopTile_C::BP_OnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemShopTile_C", "BP_OnUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemShopTile.ItemShopTile_C.BP_OnHovered
// (Event, Protected, BlueprintEvent)

void UItemShopTile_C::BP_OnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemShopTile_C", "BP_OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemShopTile.ItemShopTile_C.OnUpdateSeriesOrRarityColors
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFortColorPalette                ColorPalette                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UItemShopTile_C::OnUpdateSeriesOrRarityColors(const struct FFortColorPalette& ColorPalette)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemShopTile_C", "OnUpdateSeriesOrRarityColors");

	Params::ItemShopTile_C_OnUpdateSeriesOrRarityColors Parms{};

	Parms.ColorPalette = std::move(ColorPalette);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemShopTile.ItemShopTile_C.OnCurrencySet
// (Event, Protected, BlueprintEvent)
// Parameters:
// EItemShopCurrency                       Currency                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemShopTile_C::OnCurrencySet(EItemShopCurrency Currency)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemShopTile_C", "OnCurrencySet");

	Params::ItemShopTile_C_OnCurrencySet Parms{};

	Parms.Currency = Currency;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemShopTile.ItemShopTile_C.OnDisplayAssetImageLoaded
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UTexture2D*                       OfferImage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemShopTile_C::OnDisplayAssetImageLoaded(class UTexture2D* OfferImage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemShopTile_C", "OnDisplayAssetImageLoaded");

	Params::ItemShopTile_C_OnDisplayAssetImageLoaded Parms{};

	Parms.OfferImage = OfferImage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemShopTile.ItemShopTile_C.Finished_96D736524C98985E2E55778A647A151E
// (BlueprintCallable, BlueprintEvent)

void UItemShopTile_C::Finished_96D736524C98985E2E55778A647A151E()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemShopTile_C", "Finished_96D736524C98985E2E55778A647A151E");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemShopTile.ItemShopTile_C.SetMaterials
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UItemShopTile_C::SetMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemShopTile_C", "SetMaterials");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemShopTile.ItemShopTile_C.SetRimBrushColor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCommonActionWidget*              IconRim                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemShopTile_C::SetRimBrushColor(class UCommonActionWidget* IconRim, const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemShopTile_C", "SetRimBrushColor");

	Params::ItemShopTile_C_SetRimBrushColor Parms{};

	Parms.IconRim = IconRim;
	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemShopTile.ItemShopTile_C.SetCurrencyTypeStyling
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         self2                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EItemShopCurrency                       Currency                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemShopTile_C::SetCurrencyTypeStyling(class UMaterialInstanceDynamic* self2, EItemShopCurrency Currency)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemShopTile_C", "SetCurrencyTypeStyling");

	Params::ItemShopTile_C_SetCurrencyTypeStyling Parms{};

	Parms.self2 = self2;
	Parms.Currency = Currency;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemShopTile.ItemShopTile_C.IsMobileFrontend
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsMobileFrontend                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemShopTile_C::IsMobileFrontend(bool* bIsMobileFrontend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemShopTile_C", "IsMobileFrontend");

	Params::ItemShopTile_C_IsMobileFrontend Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsMobileFrontend != nullptr)
		*bIsMobileFrontend = Parms.bIsMobileFrontend;
}

}

