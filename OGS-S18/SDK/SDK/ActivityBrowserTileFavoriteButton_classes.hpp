#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActivityBrowserTileFavoriteButton

#include "Basic.hpp"

#include "CommonUI_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ActivityBrowserTileFavoriteButton.ActivityBrowserTileFavoriteButton_C
// 0x0078 (0x0C48 - 0x0BD0)
class UActivityBrowserTileFavoriteButton_C final : public UCommonButtonBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0BD0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FocusFlash;                                        // 0x0BD8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnUnfavorited;                                     // 0x0BE0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnFocusNotFavoritedRenderOpacity;                  // 0x0BE8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnFavorited;                                       // 0x0BF0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnPCHoverUnHover;                                  // 0x0BF8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnFocus;                                           // 0x0C00(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_FavoriteIcon;                                // 0x0C08(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Pulse;                                       // 0x0C10(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               ScalingSB;                                         // 0x0C18(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Is_Favorite;                                       // 0x0C20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsTileFocused;                                     // 0x0C21(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C22[0x6];                                      // 0x0C22(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Unfavorite_Sound;                                  // 0x0C28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Favorite_Sound;                                    // 0x0C30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsingGamepad;                                      // 0x0C38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsTileButton;                                      // 0x0C39(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLargeVersion;                                    // 0x0C3A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C3B[0x1];                                      // 0x0C3B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         KeybindShift_X;                                    // 0x0C3C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KeybindShift_Y;                                    // 0x0C40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BrushPadding;                                      // 0x0C44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ActivityBrowserTileFavoriteButton(int32 EntryPoint);
	void OnIsFavoriteChanged(bool bIsFavorite);
	void PreConstruct(bool IsDesignTime);
	void OnTileFocused();
	void SetFavoriteNoAnim(bool IsFavorite);
	void OnTileLostFocus();
	void BP_OnClicked();
	void OnUnfavoritedAnimFinished();
	void OnFavoritedAnimFinished();
	void Construct();
	void OnTileReset();
	void BP_OnUnhovered();
	void BP_OnHovered();
	void SnapAnimationToEnd(class UWidgetAnimation* InAnimation, EUMGSequencePlayMode PlayMode);
	void IsFocused(bool* IsFocused_0);
	void StyleForLargeVersion();
	void PlayModalFocusFlash();
	void ChangeKeybindLocation();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ActivityBrowserTileFavoriteButton_C">();
	}
	static class UActivityBrowserTileFavoriteButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActivityBrowserTileFavoriteButton_C>();
	}
};
static_assert(alignof(UActivityBrowserTileFavoriteButton_C) == 0x000008, "Wrong alignment on UActivityBrowserTileFavoriteButton_C");
static_assert(sizeof(UActivityBrowserTileFavoriteButton_C) == 0x000C48, "Wrong size on UActivityBrowserTileFavoriteButton_C");
static_assert(offsetof(UActivityBrowserTileFavoriteButton_C, UberGraphFrame) == 0x000BD0, "Member 'UActivityBrowserTileFavoriteButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileFavoriteButton_C, FocusFlash) == 0x000BD8, "Member 'UActivityBrowserTileFavoriteButton_C::FocusFlash' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileFavoriteButton_C, OnUnfavorited) == 0x000BE0, "Member 'UActivityBrowserTileFavoriteButton_C::OnUnfavorited' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileFavoriteButton_C, OnFocusNotFavoritedRenderOpacity) == 0x000BE8, "Member 'UActivityBrowserTileFavoriteButton_C::OnFocusNotFavoritedRenderOpacity' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileFavoriteButton_C, OnFavorited) == 0x000BF0, "Member 'UActivityBrowserTileFavoriteButton_C::OnFavorited' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileFavoriteButton_C, OnPCHoverUnHover) == 0x000BF8, "Member 'UActivityBrowserTileFavoriteButton_C::OnPCHoverUnHover' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileFavoriteButton_C, OnFocus) == 0x000C00, "Member 'UActivityBrowserTileFavoriteButton_C::OnFocus' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileFavoriteButton_C, Image_FavoriteIcon) == 0x000C08, "Member 'UActivityBrowserTileFavoriteButton_C::Image_FavoriteIcon' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileFavoriteButton_C, Image_Pulse) == 0x000C10, "Member 'UActivityBrowserTileFavoriteButton_C::Image_Pulse' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileFavoriteButton_C, ScalingSB) == 0x000C18, "Member 'UActivityBrowserTileFavoriteButton_C::ScalingSB' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileFavoriteButton_C, Is_Favorite) == 0x000C20, "Member 'UActivityBrowserTileFavoriteButton_C::Is_Favorite' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileFavoriteButton_C, IsTileFocused) == 0x000C21, "Member 'UActivityBrowserTileFavoriteButton_C::IsTileFocused' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileFavoriteButton_C, Unfavorite_Sound) == 0x000C28, "Member 'UActivityBrowserTileFavoriteButton_C::Unfavorite_Sound' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileFavoriteButton_C, Favorite_Sound) == 0x000C30, "Member 'UActivityBrowserTileFavoriteButton_C::Favorite_Sound' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileFavoriteButton_C, UsingGamepad) == 0x000C38, "Member 'UActivityBrowserTileFavoriteButton_C::UsingGamepad' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileFavoriteButton_C, IsTileButton) == 0x000C39, "Member 'UActivityBrowserTileFavoriteButton_C::IsTileButton' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileFavoriteButton_C, IsLargeVersion) == 0x000C3A, "Member 'UActivityBrowserTileFavoriteButton_C::IsLargeVersion' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileFavoriteButton_C, KeybindShift_X) == 0x000C3C, "Member 'UActivityBrowserTileFavoriteButton_C::KeybindShift_X' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileFavoriteButton_C, KeybindShift_Y) == 0x000C40, "Member 'UActivityBrowserTileFavoriteButton_C::KeybindShift_Y' has a wrong offset!");
static_assert(offsetof(UActivityBrowserTileFavoriteButton_C, BrushPadding) == 0x000C44, "Member 'UActivityBrowserTileFavoriteButton_C::BrushPadding' has a wrong offset!");

}

