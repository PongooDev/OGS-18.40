#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemShopTile

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ItemShopTile.ItemShopTile_C
// 0x0138 (0x0EE0 - 0x0DA8)
class UItemShopTile_C final : public UAthenaItemShopTile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0DA8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       UI_Elements_Bacchus_AlternativePressed;            // 0x0DB0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HideUILayer_OfferIdentifier;                       // 0x0DB8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CoolUIReveal_OfferIdentifier;                      // 0x0DC0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UI_Elements_Bacchus_AlternativeHover;              // 0x0DC8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ViolatorJiggle;                                    // 0x0DD0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ControllerPromptHoverAnim;                         // 0x0DD8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Portrait_HoverBurst;                               // 0x0DE0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HideUILayer_Violator;                              // 0x0DE8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CoolUIReveal_Violator;                             // 0x0DF0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BlueTintonDisabled;                                // 0x0DF8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PresentationSwap_WIP;                              // 0x0E00(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UI_Elements_Hover;                                 // 0x0E08(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Portrait_Hover;                                    // 0x0E10(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UOverlay*                               AnimatedWrap;                                      // 0x0E18(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               AnimatedWrapSizeBox;                               // 0x0E20(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonVisibilityWidgetLegacy*          CommonVisibilityWidget_0;                          // 0x0E28(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               HighIntensityViolator;                             // 0x0E30(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       HighIntensityViolatorText;                         // 0x0E38(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Strike;                                        // 0x0E40(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               LowIntensityViolator;                              // 0x0E48(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       LowIntensityViolatorText;                          // 0x0E50(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               MediumIntensityViolator;                           // 0x0E58(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       MediumIntensityViolatorText;                       // 0x0E60(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OfferIdentifier;                                   // 0x0E68(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 OffscreenOverlay;                                  // 0x0E70(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 OwnedBacking;                                      // 0x0E78(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PlayStationStoreLogo;                              // 0x0E80(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Price_Backing;                                     // 0x0E88(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         PriceBox;                                          // 0x0E90(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                PricePadding;                                      // 0x0E98(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Subscription_Backing;                              // 0x0EA0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_Name_2;                                       // 0x0EA8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               TileOverallSizeBox;                                // 0x0EB0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonVisibilitySwitcher*              ViolatorSwitcher;                                  // 0x0EB8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           VbuckRimBrushColor;                                // 0x0EC0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           RMTRimBrushColor;                                  // 0x0ED0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ItemShopTile(int32 EntryPoint);
	void SetRestingStateVisual();
	void SetHoveredStateVisual();
	void OnPeekStateChanged(bool bIsInPeekState);
	void OnDefaultBackgroundRequested();
	void OnActiveStateChanged(bool bIsActiveState);
	void OnPrePresentationSwap();
	void OnUpdateItemLivePreview(EItemShopTileSize TileSize, class UFortItemThumbnailRenderer* ThumbnailRendererPtr, class AFortItemCaptureActor* CaptureActor);
	void Construct();
	void OnUpdateViolator(EViolatorIntensity ViolatorIntensity, const class FText& ViolatorText);
	void OnUpdateTileSize(EItemShopTileSize TileSize);
	void BP_OnUnhovered();
	void BP_OnHovered();
	void OnUpdateSeriesOrRarityColors(const struct FFortColorPalette& ColorPalette);
	void OnCurrencySet(EItemShopCurrency Currency);
	void OnDisplayAssetImageLoaded(class UTexture2D* OfferImage);
	void Finished_96D736524C98985E2E55778A647A151E();
	void SetMaterials();
	void SetRimBrushColor(class UCommonActionWidget* IconRim, const struct FLinearColor& Color);
	void SetCurrencyTypeStyling(class UMaterialInstanceDynamic* self2, EItemShopCurrency Currency);
	void IsMobileFrontend(bool* bIsMobileFrontend);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ItemShopTile_C">();
	}
	static class UItemShopTile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemShopTile_C>();
	}
};
static_assert(alignof(UItemShopTile_C) == 0x000008, "Wrong alignment on UItemShopTile_C");
static_assert(sizeof(UItemShopTile_C) == 0x000EE0, "Wrong size on UItemShopTile_C");
static_assert(offsetof(UItemShopTile_C, UberGraphFrame) == 0x000DA8, "Member 'UItemShopTile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, UI_Elements_Bacchus_AlternativePressed) == 0x000DB0, "Member 'UItemShopTile_C::UI_Elements_Bacchus_AlternativePressed' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, HideUILayer_OfferIdentifier) == 0x000DB8, "Member 'UItemShopTile_C::HideUILayer_OfferIdentifier' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, CoolUIReveal_OfferIdentifier) == 0x000DC0, "Member 'UItemShopTile_C::CoolUIReveal_OfferIdentifier' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, UI_Elements_Bacchus_AlternativeHover) == 0x000DC8, "Member 'UItemShopTile_C::UI_Elements_Bacchus_AlternativeHover' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, ViolatorJiggle) == 0x000DD0, "Member 'UItemShopTile_C::ViolatorJiggle' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, ControllerPromptHoverAnim) == 0x000DD8, "Member 'UItemShopTile_C::ControllerPromptHoverAnim' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, Portrait_HoverBurst) == 0x000DE0, "Member 'UItemShopTile_C::Portrait_HoverBurst' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, HideUILayer_Violator) == 0x000DE8, "Member 'UItemShopTile_C::HideUILayer_Violator' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, CoolUIReveal_Violator) == 0x000DF0, "Member 'UItemShopTile_C::CoolUIReveal_Violator' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, BlueTintonDisabled) == 0x000DF8, "Member 'UItemShopTile_C::BlueTintonDisabled' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, PresentationSwap_WIP) == 0x000E00, "Member 'UItemShopTile_C::PresentationSwap_WIP' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, UI_Elements_Hover) == 0x000E08, "Member 'UItemShopTile_C::UI_Elements_Hover' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, Portrait_Hover) == 0x000E10, "Member 'UItemShopTile_C::Portrait_Hover' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, AnimatedWrap) == 0x000E18, "Member 'UItemShopTile_C::AnimatedWrap' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, AnimatedWrapSizeBox) == 0x000E20, "Member 'UItemShopTile_C::AnimatedWrapSizeBox' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, CommonVisibilityWidget_0) == 0x000E28, "Member 'UItemShopTile_C::CommonVisibilityWidget_0' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, HighIntensityViolator) == 0x000E30, "Member 'UItemShopTile_C::HighIntensityViolator' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, HighIntensityViolatorText) == 0x000E38, "Member 'UItemShopTile_C::HighIntensityViolatorText' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, IMG_Strike) == 0x000E40, "Member 'UItemShopTile_C::IMG_Strike' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, LowIntensityViolator) == 0x000E48, "Member 'UItemShopTile_C::LowIntensityViolator' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, LowIntensityViolatorText) == 0x000E50, "Member 'UItemShopTile_C::LowIntensityViolatorText' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, MediumIntensityViolator) == 0x000E58, "Member 'UItemShopTile_C::MediumIntensityViolator' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, MediumIntensityViolatorText) == 0x000E60, "Member 'UItemShopTile_C::MediumIntensityViolatorText' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, OfferIdentifier) == 0x000E68, "Member 'UItemShopTile_C::OfferIdentifier' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, OffscreenOverlay) == 0x000E70, "Member 'UItemShopTile_C::OffscreenOverlay' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, OwnedBacking) == 0x000E78, "Member 'UItemShopTile_C::OwnedBacking' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, PlayStationStoreLogo) == 0x000E80, "Member 'UItemShopTile_C::PlayStationStoreLogo' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, Price_Backing) == 0x000E88, "Member 'UItemShopTile_C::Price_Backing' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, PriceBox) == 0x000E90, "Member 'UItemShopTile_C::PriceBox' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, PricePadding) == 0x000E98, "Member 'UItemShopTile_C::PricePadding' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, Subscription_Backing) == 0x000EA0, "Member 'UItemShopTile_C::Subscription_Backing' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, Text_Name_2) == 0x000EA8, "Member 'UItemShopTile_C::Text_Name_2' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, TileOverallSizeBox) == 0x000EB0, "Member 'UItemShopTile_C::TileOverallSizeBox' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, ViolatorSwitcher) == 0x000EB8, "Member 'UItemShopTile_C::ViolatorSwitcher' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, VbuckRimBrushColor) == 0x000EC0, "Member 'UItemShopTile_C::VbuckRimBrushColor' has a wrong offset!");
static_assert(offsetof(UItemShopTile_C, RMTRimBrushColor) == 0x000ED0, "Member 'UItemShopTile_C::RMTRimBrushColor' has a wrong offset!");

}

