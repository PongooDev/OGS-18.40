#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ValetRuntime

#include "Basic.hpp"

#include "ValetRuntime_classes.hpp"
#include "ValetRuntime_parameters.hpp"


namespace SDK
{

// Function ValetRuntime.DagwoodNetworkPhysicsComponent.SetPendingInputCmd
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FFortDagwoodCmd                  In                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UDagwoodNetworkPhysicsComponent::SetPendingInputCmd(const struct FFortDagwoodCmd& In)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DagwoodNetworkPhysicsComponent", "SetPendingInputCmd");

	Params::DagwoodNetworkPhysicsComponent_SetPendingInputCmd Parms{};

	Parms.In = std::move(In);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.DagwoodNetworkPhysicsComponent.SetState_GT
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FDagwoodInPersistent             In                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UDagwoodNetworkPhysicsComponent::SetState_GT(const struct FDagwoodInPersistent& In)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DagwoodNetworkPhysicsComponent", "SetState_GT");

	Params::DagwoodNetworkPhysicsComponent_SetState_GT Parms{};

	Parms.In = std::move(In);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.DagwoodNetworkPhysicsComponent.GetPendingInputCmd
// (Final, Native, Public, Const)
// Parameters:
// struct FFortDagwoodCmd                  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FFortDagwoodCmd UDagwoodNetworkPhysicsComponent::GetPendingInputCmd() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DagwoodNetworkPhysicsComponent", "GetPendingInputCmd");

	Params::DagwoodNetworkPhysicsComponent_GetPendingInputCmd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.DagwoodNetworkPhysicsComponent.GetState_GT
// (Final, Native, Public, Const)
// Parameters:
// struct FDagwoodInPersistent             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FDagwoodInPersistent UDagwoodNetworkPhysicsComponent::GetState_GT() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DagwoodNetworkPhysicsComponent", "GetState_GT");

	Params::DagwoodNetworkPhysicsComponent_GetState_GT Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.DagwoodNetworkPhysicsComponent.GetState_PT
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDagwoodState_PT                 ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FDagwoodState_PT UDagwoodNetworkPhysicsComponent::GetState_PT() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DagwoodNetworkPhysicsComponent", "GetState_PT");

	Params::DagwoodNetworkPhysicsComponent_GetState_PT Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortAthenaMutator_OverrideValetVehicleParameters.OnPlaylistLoaded
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FName                             PlaylistName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            PlaylistContainerTags                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AFortAthenaMutator_OverrideValetVehicleParameters::OnPlaylistLoaded(class FName PlaylistName, const struct FGameplayTagContainer& PlaylistContainerTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMutator_OverrideValetVehicleParameters", "OnPlaylistLoaded");

	Params::FortAthenaMutator_OverrideValetVehicleParameters_OnPlaylistLoaded Parms{};

	Parms.PlaylistName = PlaylistName;
	Parms.PlaylistContainerTags = std::move(PlaylistContainerTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortContextualTutorial_VehicleValetLowFuel.HandleStartSkydivingForActivation
// (Final, Native, Private)

void UFortContextualTutorial_VehicleValetLowFuel::HandleStartSkydivingForActivation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortContextualTutorial_VehicleValetLowFuel", "HandleStartSkydivingForActivation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortContextualTutorial_VehicleValetLowFuel.HandleVehicleStateChanged
// (Final, Native, Private)
// Parameters:
// class AFortPlayerPawn*                  PlayerPawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           NewVehicle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OldVehicle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortContextualTutorial_VehicleValetLowFuel::HandleVehicleStateChanged(class AFortPlayerPawn* PlayerPawn, class AActor* NewVehicle, class AActor* OldVehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortContextualTutorial_VehicleValetLowFuel", "HandleVehicleStateChanged");

	Params::FortContextualTutorial_VehicleValetLowFuel_HandleVehicleStateChanged Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.NewVehicle = NewVehicle;
	Parms.OldVehicle = OldVehicle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.ApplyTireMod
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     NewTireModTag                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            EventInstigator                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::ApplyTireMod(const struct FGameplayTag& NewTireModTag, const class AFortPlayerController* EventInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "ApplyTireMod");

	Params::FortDagwoodVehicle_ApplyTireMod Parms{};

	Parms.NewTireModTag = std::move(NewTireModTag);
	Parms.EventInstigator = EventInstigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.ApplyVehicleModMountedGun
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortDagwoodModsConfigs*          ModConfigsRef                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::ApplyVehicleModMountedGun(class UFortDagwoodModsConfigs* ModConfigsRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "ApplyVehicleModMountedGun");

	Params::FortDagwoodVehicle_ApplyVehicleModMountedGun Parms{};

	Parms.ModConfigsRef = ModConfigsRef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.BP_OnBoostFinished
// (Event, Protected, BlueprintEvent)

void AFortDagwoodVehicle::BP_OnBoostFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "BP_OnBoostFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ValetRuntime.FortDagwoodVehicle.BP_OnBoostStarted
// (Event, Protected, BlueprintEvent)

void AFortDagwoodVehicle::BP_OnBoostStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "BP_OnBoostStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ValetRuntime.FortDagwoodVehicle.CleanupLoopingPooledFX
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AFortDagwoodVehicle::CleanupLoopingPooledFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "CleanupLoopingPooledFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ValetRuntime.FortDagwoodVehicle.GetCurrentDagwoodRuntimeProperties
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const struct FDagwoodRuntimeModifiers   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FDagwoodRuntimeModifiers AFortDagwoodVehicle::GetCurrentDagwoodRuntimeProperties()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "GetCurrentDagwoodRuntimeProperties");

	Params::FortDagwoodVehicle_GetCurrentDagwoodRuntimeProperties Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.MakeInoperable
// (Final, Native, Public, BlueprintCallable)

void AFortDagwoodVehicle::MakeInoperable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "MakeInoperable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.MakeOperable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bAddGas                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::MakeOperable(bool bAddGas)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "MakeOperable");

	Params::FortDagwoodVehicle_MakeOperable Parms{};

	Parms.bAddGas = bAddGas;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.NativeOnFuelChanged
// (Final, Native, Public)
// Parameters:
// float                                   NewFuelPercent                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OldFuelPercent                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::NativeOnFuelChanged(float NewFuelPercent, float OldFuelPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "NativeOnFuelChanged");

	Params::FortDagwoodVehicle_NativeOnFuelChanged Parms{};

	Parms.NewFuelPercent = NewFuelPercent;
	Parms.OldFuelPercent = OldFuelPercent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.NativeOnLowFuel
// (Final, Native, Public)

void AFortDagwoodVehicle::NativeOnLowFuel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "NativeOnLowFuel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.NativeOnOutOfFuel
// (Final, Native, Public)

void AFortDagwoodVehicle::NativeOnOutOfFuel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "NativeOnOutOfFuel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.OnBoostFailed
// (Event, Protected, BlueprintEvent)

void AFortDagwoodVehicle::OnBoostFailed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnBoostFailed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ValetRuntime.FortDagwoodVehicle.OnBoostReady
// (Event, Protected, BlueprintEvent)

void AFortDagwoodVehicle::OnBoostReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnBoostReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ValetRuntime.FortDagwoodVehicle.OnClientBeginAltInteract
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPawn*                        Pawn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::OnClientBeginAltInteract(class AFortPawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnClientBeginAltInteract");

	Params::FortDagwoodVehicle_OnClientBeginAltInteract Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ValetRuntime.FortDagwoodVehicle.OnDestroyedPropFromCollision
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ABuildingActor*                   BuildingHitActor                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::OnDestroyedPropFromCollision(const class ABuildingActor* BuildingHitActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnDestroyedPropFromCollision");

	Params::FortDagwoodVehicle_OnDestroyedPropFromCollision Parms{};

	Parms.BuildingHitActor = BuildingHitActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ValetRuntime.FortDagwoodVehicle.OnEmptyFuel
// (Event, Public, BlueprintEvent)

void AFortDagwoodVehicle::OnEmptyFuel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnEmptyFuel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ValetRuntime.FortDagwoodVehicle.OnEnteredRoad
// (Event, Protected, BlueprintEvent)

void AFortDagwoodVehicle::OnEnteredRoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnEnteredRoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ValetRuntime.FortDagwoodVehicle.OnEnterLandscape
// (Event, Protected, BlueprintEvent)

void AFortDagwoodVehicle::OnEnterLandscape()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnEnterLandscape");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ValetRuntime.FortDagwoodVehicle.OnExitLandscape
// (Event, Protected, BlueprintEvent)

void AFortDagwoodVehicle::OnExitLandscape()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnExitLandscape");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ValetRuntime.FortDagwoodVehicle.OnExitRoad
// (Event, Protected, BlueprintEvent)

void AFortDagwoodVehicle::OnExitRoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnExitRoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ValetRuntime.FortDagwoodVehicle.OnExplode
// (Event, Public, BlueprintEvent)

void AFortDagwoodVehicle::OnExplode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnExplode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ValetRuntime.FortDagwoodVehicle.OnFireStart
// (Event, Protected, BlueprintEvent)

void AFortDagwoodVehicle::OnFireStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnFireStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ValetRuntime.FortDagwoodVehicle.OnFireStop
// (Event, Protected, BlueprintEvent)

void AFortDagwoodVehicle::OnFireStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnFireStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ValetRuntime.FortDagwoodVehicle.OnFlipImpactDamage
// (Event, Public, BlueprintEvent)

void AFortDagwoodVehicle::OnFlipImpactDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnFlipImpactDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ValetRuntime.FortDagwoodVehicle.OnGainedFuel
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   NewPercent                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::OnGainedFuel(float NewPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnGainedFuel");

	Params::FortDagwoodVehicle_OnGainedFuel Parms{};

	Parms.NewPercent = NewPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ValetRuntime.FortDagwoodVehicle.OnHoldSelfDestructStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPawn*                        DriverPawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ExitDuration                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::OnHoldSelfDestructStarted(class AFortPawn* DriverPawn, const float ExitDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnHoldSelfDestructStarted");

	Params::FortDagwoodVehicle_OnHoldSelfDestructStarted Parms{};

	Parms.DriverPawn = DriverPawn;
	Parms.ExitDuration = ExitDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ValetRuntime.FortDagwoodVehicle.OnHoldSelfDestructStopped
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPawn*                        DriverPawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::OnHoldSelfDestructStopped(class AFortPawn* DriverPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnHoldSelfDestructStopped");

	Params::FortDagwoodVehicle_OnHoldSelfDestructStopped Parms{};

	Parms.DriverPawn = DriverPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ValetRuntime.FortDagwoodVehicle.OnInoperableChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInoperable                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::OnInoperableChanged(bool bInoperable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnInoperableChanged");

	Params::FortDagwoodVehicle_OnInoperableChanged Parms{};

	Parms.bInoperable = bInoperable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ValetRuntime.FortDagwoodVehicle.OnLeakingFuelStart
// (Event, Protected, BlueprintEvent)

void AFortDagwoodVehicle::OnLeakingFuelStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnLeakingFuelStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ValetRuntime.FortDagwoodVehicle.OnLeakingFuelStop
// (Event, Protected, BlueprintEvent)

void AFortDagwoodVehicle::OnLeakingFuelStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnLeakingFuelStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ValetRuntime.FortDagwoodVehicle.OnLowFuel
// (Event, Public, BlueprintEvent)

void AFortDagwoodVehicle::OnLowFuel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnLowFuel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ValetRuntime.FortDagwoodVehicle.OnPoppedTire
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TireIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFakeTire                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::OnPoppedTire(const int32 TireIndex, const bool bFakeTire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnPoppedTire");

	Params::FortDagwoodVehicle_OnPoppedTire Parms{};

	Parms.TireIndex = TireIndex;
	Parms.bFakeTire = bFakeTire;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.OnRep_AttachedWheelMeshes
// (Final, Native, Private)

void AFortDagwoodVehicle::OnRep_AttachedWheelMeshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnRep_AttachedWheelMeshes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.OnRep_DagwoodRuntimeModifiers
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FDagwoodRuntimeModifiers         PrevMods                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::OnRep_DagwoodRuntimeModifiers(const struct FDagwoodRuntimeModifiers& PrevMods)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnRep_DagwoodRuntimeModifiers");

	Params::FortDagwoodVehicle_OnRep_DagwoodRuntimeModifiers Parms{};

	Parms.PrevMods = std::move(PrevMods);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.OnRep_Exploded
// (Final, Native, Private)

void AFortDagwoodVehicle::OnRep_Exploded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnRep_Exploded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.OnRep_FakeTires
// (Final, Native, Private, HasOutParams)
// Parameters:
// TArray<ETireStates>                     PrevTireStates                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::OnRep_FakeTires(const TArray<ETireStates>& PrevTireStates)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnRep_FakeTires");

	Params::FortDagwoodVehicle_OnRep_FakeTires Parms{};

	Parms.PrevTireStates = std::move(PrevTireStates);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.OnRep_IsInoperable
// (Final, Native, Private)

void AFortDagwoodVehicle::OnRep_IsInoperable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnRep_IsInoperable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.OnRep_MountedWeapon
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FMountedGun                      PrevMountedWeapon                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::OnRep_MountedWeapon(const struct FMountedGun& PrevMountedWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnRep_MountedWeapon");

	Params::FortDagwoodVehicle_OnRep_MountedWeapon Parms{};

	Parms.PrevMountedWeapon = std::move(PrevMountedWeapon);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.OnRep_PoppedTireReaction
// (Final, Native, Private)

void AFortDagwoodVehicle::OnRep_PoppedTireReaction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnRep_PoppedTireReaction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.OnRep_RandSeed
// (Final, Native, Private)

void AFortDagwoodVehicle::OnRep_RandSeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnRep_RandSeed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.OnRep_Tires
// (Final, Native, Private, HasOutParams)
// Parameters:
// TArray<ETireStates>                     PrevTireStates                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::OnRep_Tires(const TArray<ETireStates>& PrevTireStates)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnRep_Tires");

	Params::FortDagwoodVehicle_OnRep_Tires Parms{};

	Parms.PrevTireStates = std::move(PrevTireStates);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.OnRimScrapeDamage
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   TireIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::OnRimScrapeDamage(int32 TireIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnRimScrapeDamage");

	Params::FortDagwoodVehicle_OnRimScrapeDamage Parms{};

	Parms.TireIndex = TireIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ValetRuntime.FortDagwoodVehicle.OnServerAltInteract
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPawn*                        Pawn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::OnServerAltInteract(class AFortPawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnServerAltInteract");

	Params::FortDagwoodVehicle_OnServerAltInteract Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ValetRuntime.FortDagwoodVehicle.OnSpawnLeakProjectile
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortProjectileBase*              SpawnProjectile                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::OnSpawnLeakProjectile(class AFortProjectileBase* SpawnProjectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnSpawnLeakProjectile");

	Params::FortDagwoodVehicle_OnSpawnLeakProjectile Parms{};

	Parms.SpawnProjectile = SpawnProjectile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ValetRuntime.FortDagwoodVehicle.OnStartCriticalHealth
// (Event, Public, BlueprintEvent)

void AFortDagwoodVehicle::OnStartCriticalHealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnStartCriticalHealth");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ValetRuntime.FortDagwoodVehicle.OnStartHandbrake
// (Event, Public, BlueprintEvent)

void AFortDagwoodVehicle::OnStartHandbrake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnStartHandbrake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ValetRuntime.FortDagwoodVehicle.OnStopHandbrake
// (Event, Public, BlueprintEvent)

void AFortDagwoodVehicle::OnStopHandbrake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnStopHandbrake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ValetRuntime.FortDagwoodVehicle.OnTickAudioController
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::OnTickAudioController(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnTickAudioController");

	Params::FortDagwoodVehicle_OnTickAudioController Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ValetRuntime.FortDagwoodVehicle.OnTickAudioFade
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   FadeParam                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::OnTickAudioFade(float FadeParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "OnTickAudioFade");

	Params::FortDagwoodVehicle_OnTickAudioFade Parms{};

	Parms.FadeParam = FadeParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ValetRuntime.FortDagwoodVehicle.RemoveModMountedGun
// (Final, Native, Public, BlueprintCallable)

void AFortDagwoodVehicle::RemoveModMountedGun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "RemoveModMountedGun");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.SelfDestructCleanup
// (Final, Native, Public)

void AFortDagwoodVehicle::SelfDestructCleanup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "SelfDestructCleanup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.ServerAddRuntimeGearsInfo
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRuntimeGearInfo                 GearInfo                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::ServerAddRuntimeGearsInfo(const struct FRuntimeGearInfo& GearInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "ServerAddRuntimeGearsInfo");

	Params::FortDagwoodVehicle_ServerAddRuntimeGearsInfo Parms{};

	Parms.GearInfo = std::move(GearInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.ServerSelfDestructActivated
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFortDagwoodVehicle::ServerSelfDestructActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "ServerSelfDestructActivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.ServerSetDamageInfo
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bDamageFriendlyFire                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDamageOtherVehicles                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDamageOwnVehicle                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::ServerSetDamageInfo(const bool bDamageFriendlyFire, const bool bDamageOtherVehicles, const bool bDamageOwnVehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "ServerSetDamageInfo");

	Params::FortDagwoodVehicle_ServerSetDamageInfo Parms{};

	Parms.bDamageFriendlyFire = bDamageFriendlyFire;
	Parms.bDamageOtherVehicles = bDamageOtherVehicles;
	Parms.bDamageOwnVehicle = bDamageOwnVehicle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.ServerSetDestructionInfo
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   SelfDestructTime                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxTimeZeroHealth                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxTimeSelfDestructCleanup                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxTimeExplosion                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::ServerSetDestructionInfo(const float SelfDestructTime, const float MaxTimeZeroHealth, const float MaxTimeSelfDestructCleanup, const float MaxTimeExplosion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "ServerSetDestructionInfo");

	Params::FortDagwoodVehicle_ServerSetDestructionInfo Parms{};

	Parms.SelfDestructTime = SelfDestructTime;
	Parms.MaxTimeZeroHealth = MaxTimeZeroHealth;
	Parms.MaxTimeSelfDestructCleanup = MaxTimeSelfDestructCleanup;
	Parms.MaxTimeExplosion = MaxTimeExplosion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.ServerSetFadeDuration
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewFadeDuration                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::ServerSetFadeDuration(const float NewFadeDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "ServerSetFadeDuration");

	Params::FortDagwoodVehicle_ServerSetFadeDuration Parms{};

	Parms.NewFadeDuration = NewFadeDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.ServerSetRuntimeBoostInfo
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRuntimeBoostInfo                BoostInfo                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::ServerSetRuntimeBoostInfo(const struct FRuntimeBoostInfo& BoostInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "ServerSetRuntimeBoostInfo");

	Params::FortDagwoodVehicle_ServerSetRuntimeBoostInfo Parms{};

	Parms.BoostInfo = std::move(BoostInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.ServerSetRuntimeDriveInfo
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   MaxIncline                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxTilt                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::ServerSetRuntimeDriveInfo(float MaxIncline, float MaxTilt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "ServerSetRuntimeDriveInfo");

	Params::FortDagwoodVehicle_ServerSetRuntimeDriveInfo Parms{};

	Parms.MaxIncline = MaxIncline;
	Parms.MaxTilt = MaxTilt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.ServerSetRuntimeFuelInfo
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRuntimeFuelInfo                 FuelInfo                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::ServerSetRuntimeFuelInfo(const struct FRuntimeFuelInfo& FuelInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "ServerSetRuntimeFuelInfo");

	Params::FortDagwoodVehicle_ServerSetRuntimeFuelInfo Parms{};

	Parms.FuelInfo = std::move(FuelInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.ServerSetRuntimeGravity
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   GravMult                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::ServerSetRuntimeGravity(float GravMult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "ServerSetRuntimeGravity");

	Params::FortDagwoodVehicle_ServerSetRuntimeGravity Parms{};

	Parms.GravMult = GravMult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.ServerSetRuntimeSpringsInfo
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRuntimeSpringsInfo              SpringsInfo                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::ServerSetRuntimeSpringsInfo(const struct FRuntimeSpringsInfo& SpringsInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "ServerSetRuntimeSpringsInfo");

	Params::FortDagwoodVehicle_ServerSetRuntimeSpringsInfo Parms{};

	Parms.SpringsInfo = std::move(SpringsInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.ServerSetTireModTag
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     TireModTag                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::ServerSetTireModTag(const struct FGameplayTag& TireModTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "ServerSetTireModTag");

	Params::FortDagwoodVehicle_ServerSetTireModTag Parms{};

	Parms.TireModTag = std::move(TireModTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.SetFuel
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewFuel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::SetFuel(float NewFuel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "SetFuel");

	Params::FortDagwoodVehicle_SetFuel Parms{};

	Parms.NewFuel = NewFuel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.SetOnFire
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewFire                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::SetOnFire(bool bNewFire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "SetOnFire");

	Params::FortDagwoodVehicle_SetOnFire Parms{};

	Parms.bNewFire = bNewFire;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.SetValetAudioController
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// class AFortValetAudioController*        ValetAudio_0                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDagwoodVehicle::SetValetAudioController(class AFortValetAudioController* ValetAudio_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "SetValetAudioController");

	Params::FortDagwoodVehicle_SetValetAudioController Parms{};

	Parms.ValetAudio_0 = ValetAudio_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.StartFade
// (Final, Native, Public, BlueprintCallable)

void AFortDagwoodVehicle::StartFade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "StartFade");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.TrySpawnWithMod
// (Native, Public, BlueprintCallable)

void AFortDagwoodVehicle::TrySpawnWithMod()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "TrySpawnWithMod");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.UpdateVehicleFuelLeak
// (Final, Native, Public)

void AFortDagwoodVehicle::UpdateVehicleFuelLeak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "UpdateVehicleFuelLeak");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicle.AreAnyTiresPopped
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortDagwoodVehicle::AreAnyTiresPopped() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "AreAnyTiresPopped");

	Params::FortDagwoodVehicle_AreAnyTiresPopped Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.DoesVehicleDamageFriendlyFire
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortDagwoodVehicle::DoesVehicleDamageFriendlyFire() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "DoesVehicleDamageFriendlyFire");

	Params::FortDagwoodVehicle_DoesVehicleDamageFriendlyFire Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.DoesVehicleDamageOwnVehicle
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortDagwoodVehicle::DoesVehicleDamageOwnVehicle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "DoesVehicleDamageOwnVehicle");

	Params::FortDagwoodVehicle_DoesVehicleDamageOwnVehicle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.ForwardOrReverseInputPressed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortDagwoodVehicle::ForwardOrReverseInputPressed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "ForwardOrReverseInputPressed");

	Params::FortDagwoodVehicle_ForwardOrReverseInputPressed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.GetBumpiness
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortDagwoodVehicle::GetBumpiness() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "GetBumpiness");

	Params::FortDagwoodVehicle_GetBumpiness Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.GetExplosionDelay
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortDagwoodVehicle::GetExplosionDelay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "GetExplosionDelay");

	Params::FortDagwoodVehicle_GetExplosionDelay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.GetFuel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortDagwoodVehicle::GetFuel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "GetFuel");

	Params::FortDagwoodVehicle_GetFuel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.GetFuelCapacity
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortDagwoodVehicle::GetFuelCapacity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "GetFuelCapacity");

	Params::FortDagwoodVehicle_GetFuelCapacity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.GetMaxZeroHealthTime
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortDagwoodVehicle::GetMaxZeroHealthTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "GetMaxZeroHealthTime");

	Params::FortDagwoodVehicle_GetMaxZeroHealthTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.GetMiddleAxleForwardAdjust
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortDagwoodVehicle::GetMiddleAxleForwardAdjust() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "GetMiddleAxleForwardAdjust");

	Params::FortDagwoodVehicle_GetMiddleAxleForwardAdjust Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.GetModSocketNames
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class FName>               ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class FName> AFortDagwoodVehicle::GetModSocketNames() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "GetModSocketNames");

	Params::FortDagwoodVehicle_GetModSocketNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.GetMountedWeaponOnlySeatIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortDagwoodVehicle::GetMountedWeaponOnlySeatIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "GetMountedWeaponOnlySeatIndex");

	Params::FortDagwoodVehicle_GetMountedWeaponOnlySeatIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.GetOnFire
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortDagwoodVehicle::GetOnFire() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "GetOnFire");

	Params::FortDagwoodVehicle_GetOnFire Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.GetSelfDestructCleanupDelay
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortDagwoodVehicle::GetSelfDestructCleanupDelay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "GetSelfDestructCleanupDelay");

	Params::FortDagwoodVehicle_GetSelfDestructCleanupDelay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.GetSelfDestructDelay
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortDagwoodVehicle::GetSelfDestructDelay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "GetSelfDestructDelay");

	Params::FortDagwoodVehicle_GetSelfDestructDelay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.GetTireHealthPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETireLocations                          TireIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortDagwoodVehicle::GetTireHealthPercent(ETireLocations TireIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "GetTireHealthPercent");

	Params::FortDagwoodVehicle_GetTireHealthPercent Parms{};

	Parms.TireIndex = TireIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.GetTireState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   TireIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortDagwoodVehicle::GetTireState(int32 TireIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "GetTireState");

	Params::FortDagwoodVehicle_GetTireState Parms{};

	Parms.TireIndex = TireIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.GetTireSurface
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETireLocations                          TireIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETireSurfaces                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETireSurfaces AFortDagwoodVehicle::GetTireSurface(ETireLocations TireIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "GetTireSurface");

	Params::FortDagwoodVehicle_GetTireSurface Parms{};

	Parms.TireIndex = TireIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.GetVehicleModTag
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTag               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGameplayTag AFortDagwoodVehicle::GetVehicleModTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "GetVehicleModTag");

	Params::FortDagwoodVehicle_GetVehicleModTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.HasAppliedMountedGunMod
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortDagwoodVehicle::HasAppliedMountedGunMod() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "HasAppliedMountedGunMod");

	Params::FortDagwoodVehicle_HasAppliedMountedGunMod Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.HasTireMod
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortDagwoodVehicle::HasTireMod() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "HasTireMod");

	Params::FortDagwoodVehicle_HasTireMod Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.IsInoperable
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortDagwoodVehicle::IsInoperable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "IsInoperable");

	Params::FortDagwoodVehicle_IsInoperable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.IsNativeBPTickEnabled
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortDagwoodVehicle::IsNativeBPTickEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "IsNativeBPTickEnabled");

	Params::FortDagwoodVehicle_IsNativeBPTickEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.IsOffroad
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortDagwoodVehicle::IsOffroad() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "IsOffroad");

	Params::FortDagwoodVehicle_IsOffroad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.IsOnDirt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortDagwoodVehicle::IsOnDirt() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "IsOnDirt");

	Params::FortDagwoodVehicle_IsOnDirt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.IsOnLandscape
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortDagwoodVehicle::IsOnLandscape() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "IsOnLandscape");

	Params::FortDagwoodVehicle_IsOnLandscape Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.IsOnRoad
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortDagwoodVehicle::IsOnRoad() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "IsOnRoad");

	Params::FortDagwoodVehicle_IsOnRoad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.IsTireSkidding
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   MinSpeedForSkid                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AngleForSkid                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedForPeelout                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedForBraking                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortDagwoodVehicle::IsTireSkidding(const float MinSpeedForSkid, const float AngleForSkid, const float SpeedForPeelout, const float SpeedForBraking) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "IsTireSkidding");

	Params::FortDagwoodVehicle_IsTireSkidding Parms{};

	Parms.MinSpeedForSkid = MinSpeedForSkid;
	Parms.AngleForSkid = AngleForSkid;
	Parms.SpeedForPeelout = SpeedForPeelout;
	Parms.SpeedForBraking = SpeedForBraking;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.IsVehicleAcceleratingWithSpeedThreshold
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   SpeedThreshold                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortDagwoodVehicle::IsVehicleAcceleratingWithSpeedThreshold(float SpeedThreshold) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "IsVehicleAcceleratingWithSpeedThreshold");

	Params::FortDagwoodVehicle_IsVehicleAcceleratingWithSpeedThreshold Parms{};

	Parms.SpeedThreshold = SpeedThreshold;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicle.NativeCalculateAccelRumbleIntensity
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   MaxIntensity                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortDagwoodVehicle::NativeCalculateAccelRumbleIntensity(float MaxIntensity) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicle", "NativeCalculateAccelRumbleIntensity");

	Params::FortDagwoodVehicle_NativeCalculateAccelRumbleIntensity Parms{};

	Parms.MaxIntensity = MaxIntensity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ValetRuntime.FortDagwoodVehicleManager.CustomHandleActorStreamedInEditor
// (Final, Native, Public)
// Parameters:
// class AActor*                           SourceActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDagwoodVehicleManager::CustomHandleActorStreamedInEditor(class AActor* SourceActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicleManager", "CustomHandleActorStreamedInEditor");

	Params::FortDagwoodVehicleManager_CustomHandleActorStreamedInEditor Parms{};

	Parms.SourceActor = SourceActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicleManager.OnVehicleSpawned
// (Final, Native, Public)
// Parameters:
// class AFortAthenaVehicle*               Vehicle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDagwoodVehicleManager::OnVehicleSpawned(class AFortAthenaVehicle* Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicleManager", "OnVehicleSpawned");

	Params::FortDagwoodVehicleManager_OnVehicleSpawned Parms{};

	Parms.Vehicle = Vehicle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortDagwoodVehicleManager.OnVehicleSpawnsUpdated
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UFortVehicleItemDefinition*       VehicleItemDef                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   SpawnedVehicles                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   NewVehicleCount                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDagwoodVehicleManager::OnVehicleSpawnsUpdated(class UFortVehicleItemDefinition* VehicleItemDef, TArray<class AActor*>* SpawnedVehicles, int32 NewVehicleCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicleManager", "OnVehicleSpawnsUpdated");

	Params::FortDagwoodVehicleManager_OnVehicleSpawnsUpdated Parms{};

	Parms.VehicleItemDef = VehicleItemDef;
	Parms.NewVehicleCount = NewVehicleCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SpawnedVehicles != nullptr)
		*SpawnedVehicles = std::move(Parms.SpawnedVehicles);
}


// Function ValetRuntime.FortDagwoodVehicleManager.UpdatePropReplacement
// (Final, Native, Public)

void UFortDagwoodVehicleManager::UpdatePropReplacement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDagwoodVehicleManager", "UpdatePropReplacement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortValetAudioController.CacheValetVehicle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortDagwoodVehicle*              InVehicle                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortValetAudioController::CacheValetVehicle(class AFortDagwoodVehicle* InVehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortValetAudioController", "CacheValetVehicle");

	Params::FortValetAudioController_CacheValetVehicle Parms{};

	Parms.InVehicle = InVehicle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ValetRuntime.FortValetAudioController.OnSuspensionCollision_Native
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    OutResult                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutMagnitude                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortValetAudioController::OnSuspensionCollision_Native(bool* OutResult, float* OutMagnitude)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortValetAudioController", "OnSuspensionCollision_Native");

	Params::FortValetAudioController_OnSuspensionCollision_Native Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResult != nullptr)
		*OutResult = Parms.OutResult;

	if (OutMagnitude != nullptr)
		*OutMagnitude = Parms.OutMagnitude;
}


// Function ValetRuntime.FortValetAudioController.OnTireModApplied
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTireInfo                        AppliedTireMod                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AFortValetAudioController::OnTireModApplied(const struct FTireInfo& AppliedTireMod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortValetAudioController", "OnTireModApplied");

	Params::FortValetAudioController_OnTireModApplied Parms{};

	Parms.AppliedTireMod = std::move(AppliedTireMod);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ValetRuntime.FortValetAudioController.Update_Native
// (Final, Native, Public, BlueprintCallable)

void AFortValetAudioController::Update_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortValetAudioController", "Update_Native");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

