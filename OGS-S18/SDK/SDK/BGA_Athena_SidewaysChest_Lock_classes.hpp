#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_Athena_SidewaysChest_Lock

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BGA_Athena_Lock_Parent_classes.hpp"
#include "Enum_Athena_Lock_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BGA_Athena_SidewaysChest_Lock.BGA_Athena_SidewaysChest_Lock_C
// 0x0028 (0x0AC8 - 0x0AA0)
class ABGA_Athena_SidewaysChest_Lock_C final : public ABGA_Athena_Lock_Parent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BGA_Athena_SidewaysChest_Lock_C;    // 0x0AA0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      NS_SidewaysChest_Lock_Idle;                        // 0x0AA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SidewaysChest_Lock_Beams;                       // 0x0AB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LockMesh;                                          // 0x0AB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         LockMeshRotation;                                  // 0x0AC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BGA_Athena_SidewaysChest_Lock(int32 EntryPoint);
	void OnUnLocked();
	void UserConstructionScript();
	void SetLockVisuals();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BGA_Athena_SidewaysChest_Lock_C">();
	}
	static class ABGA_Athena_SidewaysChest_Lock_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABGA_Athena_SidewaysChest_Lock_C>();
	}
};
static_assert(alignof(ABGA_Athena_SidewaysChest_Lock_C) == 0x000008, "Wrong alignment on ABGA_Athena_SidewaysChest_Lock_C");
static_assert(sizeof(ABGA_Athena_SidewaysChest_Lock_C) == 0x000AC8, "Wrong size on ABGA_Athena_SidewaysChest_Lock_C");
static_assert(offsetof(ABGA_Athena_SidewaysChest_Lock_C, UberGraphFrame_BGA_Athena_SidewaysChest_Lock_C) == 0x000AA0, "Member 'ABGA_Athena_SidewaysChest_Lock_C::UberGraphFrame_BGA_Athena_SidewaysChest_Lock_C' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SidewaysChest_Lock_C, NS_SidewaysChest_Lock_Idle) == 0x000AA8, "Member 'ABGA_Athena_SidewaysChest_Lock_C::NS_SidewaysChest_Lock_Idle' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SidewaysChest_Lock_C, SM_SidewaysChest_Lock_Beams) == 0x000AB0, "Member 'ABGA_Athena_SidewaysChest_Lock_C::SM_SidewaysChest_Lock_Beams' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SidewaysChest_Lock_C, LockMesh) == 0x000AB8, "Member 'ABGA_Athena_SidewaysChest_Lock_C::LockMesh' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SidewaysChest_Lock_C, LockMeshRotation) == 0x000AC0, "Member 'ABGA_Athena_SidewaysChest_Lock_C::LockMeshRotation' has a wrong offset!");

}

