#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TopBarTabButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass TopBarTabButton.TopBarTabButton_C
// 0x00A0 (0x0D10 - 0x0C70)
class UTopBarTabButton_C final : public UFortTopBarTabButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0C70(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Hovered;                                           // 0x0C78(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Selected;                                          // 0x0C80(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_0;                                         // 0x0C88(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_1;                                         // 0x0C90(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_2;                                         // 0x0C98(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_0;                                     // 0x0CA0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MID_ButtonBorder;                                  // 0x0CA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreviewMobileStyle;                                // 0x0CB0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB1[0x3];                                      // 0x0CB1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatSpringState                      SpringState_ShapeChange;                           // 0x0CB4(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FFloatSpringState                      SpringState_Scale;                                 // 0x0CBC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         Spring_Scale_Target;                               // 0x0CC4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MassMultiply;                                      // 0x0CC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DampenMultiply;                                    // 0x0CCC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StiffnessMultiply;                                 // 0x0CD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VisualSelectionState;                              // 0x0CD4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD5[0x3];                                      // 0x0CD5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RandomFloat_Top;                                   // 0x0CD8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomFloat_Left;                                  // 0x0CDC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomFloat_Right;                                 // 0x0CE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomFloat_Bottom;                                // 0x0CE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShapeChange_New;                                   // 0x0CE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShapeChange_Target;                                // 0x0CEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UpdateSpring;                                      // 0x0CF0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CF1[0x7];                                      // 0x0CF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ButtonText;                                        // 0x0CF8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_TopBarTabButton(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void OnInitialized();
	void OnSelectedChangedEvent(class UCommonButtonLegacy* Button, bool Selected_0);
	void BP_OnUnhovered();
	void BP_OnHovered();
	void OnCurrentTextStyleChanged();
	void HandleSelectionChangedVisuals(bool bIsSelected);
	void InitializeButtonBorderMID();
	void SeedRandomValues();
	void UpdateMIDWithRandomValues();
	void SetText(const class FText& ButtonText_0);
	void OverrideIcon(bool Show, const struct FSlateBrush& inSlateBrush);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TopBarTabButton_C">();
	}
	static class UTopBarTabButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTopBarTabButton_C>();
	}
};
static_assert(alignof(UTopBarTabButton_C) == 0x000008, "Wrong alignment on UTopBarTabButton_C");
static_assert(sizeof(UTopBarTabButton_C) == 0x000D10, "Wrong size on UTopBarTabButton_C");
static_assert(offsetof(UTopBarTabButton_C, UberGraphFrame) == 0x000C70, "Member 'UTopBarTabButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, Hovered) == 0x000C78, "Member 'UTopBarTabButton_C::Hovered' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, Selected) == 0x000C80, "Member 'UTopBarTabButton_C::Selected' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, SizeBox_0) == 0x000C88, "Member 'UTopBarTabButton_C::SizeBox_0' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, SizeBox_1) == 0x000C90, "Member 'UTopBarTabButton_C::SizeBox_1' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, SizeBox_2) == 0x000C98, "Member 'UTopBarTabButton_C::SizeBox_2' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, VerticalBox_0) == 0x000CA0, "Member 'UTopBarTabButton_C::VerticalBox_0' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, MID_ButtonBorder) == 0x000CA8, "Member 'UTopBarTabButton_C::MID_ButtonBorder' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, PreviewMobileStyle) == 0x000CB0, "Member 'UTopBarTabButton_C::PreviewMobileStyle' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, SpringState_ShapeChange) == 0x000CB4, "Member 'UTopBarTabButton_C::SpringState_ShapeChange' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, SpringState_Scale) == 0x000CBC, "Member 'UTopBarTabButton_C::SpringState_Scale' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, Spring_Scale_Target) == 0x000CC4, "Member 'UTopBarTabButton_C::Spring_Scale_Target' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, MassMultiply) == 0x000CC8, "Member 'UTopBarTabButton_C::MassMultiply' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, DampenMultiply) == 0x000CCC, "Member 'UTopBarTabButton_C::DampenMultiply' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, StiffnessMultiply) == 0x000CD0, "Member 'UTopBarTabButton_C::StiffnessMultiply' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, VisualSelectionState) == 0x000CD4, "Member 'UTopBarTabButton_C::VisualSelectionState' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, RandomFloat_Top) == 0x000CD8, "Member 'UTopBarTabButton_C::RandomFloat_Top' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, RandomFloat_Left) == 0x000CDC, "Member 'UTopBarTabButton_C::RandomFloat_Left' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, RandomFloat_Right) == 0x000CE0, "Member 'UTopBarTabButton_C::RandomFloat_Right' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, RandomFloat_Bottom) == 0x000CE4, "Member 'UTopBarTabButton_C::RandomFloat_Bottom' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, ShapeChange_New) == 0x000CE8, "Member 'UTopBarTabButton_C::ShapeChange_New' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, ShapeChange_Target) == 0x000CEC, "Member 'UTopBarTabButton_C::ShapeChange_Target' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, UpdateSpring) == 0x000CF0, "Member 'UTopBarTabButton_C::UpdateSpring' has a wrong offset!");
static_assert(offsetof(UTopBarTabButton_C, ButtonText) == 0x000CF8, "Member 'UTopBarTabButton_C::ButtonText' has a wrong offset!");

}

