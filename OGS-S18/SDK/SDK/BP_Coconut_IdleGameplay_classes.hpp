#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Coconut_IdleGameplay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Coconut_IdleGameplay.BP_Coconut_IdleGameplay_C
// 0x00A8 (0x02C8 - 0x0220)
class ABP_Coconut_IdleGameplay_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Player_Swin_Logo;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ChildActor;                                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      WaterRippleFX;                                     // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBuoyancyComponent*                     Buoyancy;                                          // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpecialEventInputHelperComponent*      SpecialEventInputHelper;                           // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RightLeftMove;                                     // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delta_Time;                                        // 0x025C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveSpeedRL;                                       // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AApollo_Waterbody_Ocean_Parent_C> OceanActor;                                        // 0x0268(0x0028)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class AApollo_Waterbody_Ocean_Parent_C*       WaterBody;                                         // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          b_TurnOnRippleFX;                                  // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AttachSuccessful;                                  // 0x0299(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29A[0x6];                                      // 0x029A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LocalPlayerMannequin_C*             PlayerMannequin;                                   // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          MediumFemaleAnim;                                  // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          LargeFemaleAnim;                                   // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          MediumMaleAnim;                                    // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          LargeMaleAnim;                                     // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Coconut_IdleGameplay(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UpdateWaterInfo();
	void UserConstructionScript();
	void GetWaterSurfaceInfoCallable(class AFortWaterBodyActor* WaterBody_0, class USceneComponent* SceneComponent, struct FVector* WaterPlaneLocation, struct FVector* WaterPlaneNormal, struct FVector* WaterSurfacePosition, float* WaterDepth, int32* WaterBodyIdx, struct FVector* WaterVelocity);
	void UpdateMannequinAnimation();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Coconut_IdleGameplay_C">();
	}
	static class ABP_Coconut_IdleGameplay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Coconut_IdleGameplay_C>();
	}
};
static_assert(alignof(ABP_Coconut_IdleGameplay_C) == 0x000008, "Wrong alignment on ABP_Coconut_IdleGameplay_C");
static_assert(sizeof(ABP_Coconut_IdleGameplay_C) == 0x0002C8, "Wrong size on ABP_Coconut_IdleGameplay_C");
static_assert(offsetof(ABP_Coconut_IdleGameplay_C, UberGraphFrame) == 0x000220, "Member 'ABP_Coconut_IdleGameplay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_IdleGameplay_C, Player_Swin_Logo) == 0x000228, "Member 'ABP_Coconut_IdleGameplay_C::Player_Swin_Logo' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_IdleGameplay_C, ChildActor) == 0x000230, "Member 'ABP_Coconut_IdleGameplay_C::ChildActor' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_IdleGameplay_C, Scene) == 0x000238, "Member 'ABP_Coconut_IdleGameplay_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_IdleGameplay_C, WaterRippleFX) == 0x000240, "Member 'ABP_Coconut_IdleGameplay_C::WaterRippleFX' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_IdleGameplay_C, Buoyancy) == 0x000248, "Member 'ABP_Coconut_IdleGameplay_C::Buoyancy' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_IdleGameplay_C, SpecialEventInputHelper) == 0x000250, "Member 'ABP_Coconut_IdleGameplay_C::SpecialEventInputHelper' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_IdleGameplay_C, RightLeftMove) == 0x000258, "Member 'ABP_Coconut_IdleGameplay_C::RightLeftMove' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_IdleGameplay_C, Delta_Time) == 0x00025C, "Member 'ABP_Coconut_IdleGameplay_C::Delta_Time' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_IdleGameplay_C, MoveSpeedRL) == 0x000260, "Member 'ABP_Coconut_IdleGameplay_C::MoveSpeedRL' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_IdleGameplay_C, OceanActor) == 0x000268, "Member 'ABP_Coconut_IdleGameplay_C::OceanActor' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_IdleGameplay_C, WaterBody) == 0x000290, "Member 'ABP_Coconut_IdleGameplay_C::WaterBody' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_IdleGameplay_C, b_TurnOnRippleFX) == 0x000298, "Member 'ABP_Coconut_IdleGameplay_C::b_TurnOnRippleFX' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_IdleGameplay_C, AttachSuccessful) == 0x000299, "Member 'ABP_Coconut_IdleGameplay_C::AttachSuccessful' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_IdleGameplay_C, PlayerMannequin) == 0x0002A0, "Member 'ABP_Coconut_IdleGameplay_C::PlayerMannequin' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_IdleGameplay_C, MediumFemaleAnim) == 0x0002A8, "Member 'ABP_Coconut_IdleGameplay_C::MediumFemaleAnim' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_IdleGameplay_C, LargeFemaleAnim) == 0x0002B0, "Member 'ABP_Coconut_IdleGameplay_C::LargeFemaleAnim' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_IdleGameplay_C, MediumMaleAnim) == 0x0002B8, "Member 'ABP_Coconut_IdleGameplay_C::MediumMaleAnim' has a wrong offset!");
static_assert(offsetof(ABP_Coconut_IdleGameplay_C, LargeMaleAnim) == 0x0002C0, "Member 'ABP_Coconut_IdleGameplay_C::LargeMaleAnim' has a wrong offset!");

}

