#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Athena_Glider_Generic

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Athena_Glider_Generic.B_Athena_Glider_Generic_C
// 0x0178 (0x04D0 - 0x0358)
class AB_Athena_Glider_Generic_C final : public AFortPlayerParachute
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0358(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortVehicleAudioVoice*                 FortVehicleAudioVoice;                             // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          UseLegacyAudioSetup;                               // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseLegacyFXSetup;                                  // 0x0369(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAudioHasFadedIn;                                  // 0x036A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36B[0x1];                                      // 0x036B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeAudioFadeStarted;                              // 0x036C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AudioFadeInTime;                                   // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   VFX_Component_1st_Socket_Name;                     // 0x0374(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   VFX_Component_2nd_Socket_Name;                     // 0x037C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETrailWidthMode                               VFX_Component_Width_Mode;                          // 0x0384(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_385[0x3];                                      // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         VFX_Component_Width;                               // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   VFX2_Component_1st_Socket_Name;                    // 0x038C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   VFX2_Component_2nd_Socket_Name;                    // 0x0394(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETrailWidthMode                               VFX2_Component_Width_Mode;                         // 0x039C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D[0x3];                                      // 0x039D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         VFX2_Component_Width;                              // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Add_Skeletal_Mesh_Bits_to_Glider;                  // 0x03A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A5[0x3];                                      // 0x03A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          Bits_Skeletal_Mesh;                                // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Bits_Anim_BP_Class;                                // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Bits_Relative_Location;                            // 0x03B8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Bits_Relative_Rotation;                            // 0x03C4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Bits_Relative_Scale;                               // 0x03D0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Legacy_DoOnce;                                     // 0x03DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_3DD[0x3];                                      // 0x03DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponentBudgeted*         Bits;                                              // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Legacy_Toggle_TrailVFX2_Activation_Order;          // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Legacy_DoOnce_TrailVFXInverted;                    // 0x03E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_3EA[0x2];                                      // 0x03EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Min_Audio_Voice;                                   // 0x03EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_Audio_Voice;                                   // 0x03F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TrailVFX_Deployed_Activation;                      // 0x03F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F5[0x3];                                      // 0x03F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TrailVFX_Component_Socket_Name;                    // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttachmentRule                               Trail_VFX_Location_Rule;                           // 0x0400(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttachmentRule                               Trail_VFX_Rotation_Rule;                           // 0x0401(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttachmentRule                               Trail_VFX_Scale_Rule;                              // 0x0402(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_403[0xD];                                      // 0x0403(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TrailVFX_Component_Relative_Transform;             // 0x0410(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	bool                                          TrailVFX2_Deployed_Activation;                     // 0x0440(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Bits_Override_Materials;                           // 0x0441(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_442[0x6];                                      // 0x0442(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             Bits_Materials;                                    // 0x0448(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Legacy_Not_Deployed_Audio_Voice;                   // 0x0458(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Absolute_Movement_Audio;                           // 0x045C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Absolute_Movement_FX;                              // 0x045D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Additional_Condition_for_Movement_Activation;      // 0x045E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_45F[0x1];                                      // 0x045F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          Parachute_Anim_Instance;                           // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TrailVFX2_Component_Socket_Name;                   // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttachmentRule                               Trail_VFX2_Location_Rule;                          // 0x0470(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttachmentRule                               Trail_VFX2_Rotation_Rule;                          // 0x0471(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttachmentRule                               Trail_VFX2_Scale_Rule;                             // 0x0472(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_473[0xD];                                      // 0x0473(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TrailVFX2_Component_Relative_Transform;            // 0x0480(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	bool                                          Auto_Activate_Fix;                                 // 0x04B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundMix*                              In_Sound_Mix_Modifier;                             // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Trail_VFX_Component_Retry_Timer;                   // 0x04C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Trail_VFX2_Component_Retry_Timer;                  // 0x04C8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_Athena_Glider_Generic(int32 EntryPoint);
	void ReceiveDestroyed();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void OnReceiveParachuteItemdef();
	void OnGliderFullyDeployed();
	void K2_SetChuteMeshVisibility(bool bParachuteVisibility);
	void OnParachuteTrailUpdated(float MovementLengthSquared, float ForwardDot, float RightDot, float RotationalMovementAcceleration);
	void UserConstructionScript();
	void Audio_Updated(float Forward_Dot, float Right_Dot);
	bool Audio_Fade_Check();
	void FX_Updated(float Movement, float Forward_Dot, float Right_Dot, float Rotational_Movement);
	void Trail_VFX_Components_Attachment();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Athena_Glider_Generic_C">();
	}
	static class AB_Athena_Glider_Generic_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Athena_Glider_Generic_C>();
	}
};
static_assert(alignof(AB_Athena_Glider_Generic_C) == 0x000010, "Wrong alignment on AB_Athena_Glider_Generic_C");
static_assert(sizeof(AB_Athena_Glider_Generic_C) == 0x0004D0, "Wrong size on AB_Athena_Glider_Generic_C");
static_assert(offsetof(AB_Athena_Glider_Generic_C, UberGraphFrame) == 0x000358, "Member 'AB_Athena_Glider_Generic_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, FortVehicleAudioVoice) == 0x000360, "Member 'AB_Athena_Glider_Generic_C::FortVehicleAudioVoice' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, UseLegacyAudioSetup) == 0x000368, "Member 'AB_Athena_Glider_Generic_C::UseLegacyAudioSetup' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, UseLegacyFXSetup) == 0x000369, "Member 'AB_Athena_Glider_Generic_C::UseLegacyFXSetup' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, bAudioHasFadedIn) == 0x00036A, "Member 'AB_Athena_Glider_Generic_C::bAudioHasFadedIn' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, TimeAudioFadeStarted) == 0x00036C, "Member 'AB_Athena_Glider_Generic_C::TimeAudioFadeStarted' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, AudioFadeInTime) == 0x000370, "Member 'AB_Athena_Glider_Generic_C::AudioFadeInTime' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, VFX_Component_1st_Socket_Name) == 0x000374, "Member 'AB_Athena_Glider_Generic_C::VFX_Component_1st_Socket_Name' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, VFX_Component_2nd_Socket_Name) == 0x00037C, "Member 'AB_Athena_Glider_Generic_C::VFX_Component_2nd_Socket_Name' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, VFX_Component_Width_Mode) == 0x000384, "Member 'AB_Athena_Glider_Generic_C::VFX_Component_Width_Mode' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, VFX_Component_Width) == 0x000388, "Member 'AB_Athena_Glider_Generic_C::VFX_Component_Width' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, VFX2_Component_1st_Socket_Name) == 0x00038C, "Member 'AB_Athena_Glider_Generic_C::VFX2_Component_1st_Socket_Name' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, VFX2_Component_2nd_Socket_Name) == 0x000394, "Member 'AB_Athena_Glider_Generic_C::VFX2_Component_2nd_Socket_Name' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, VFX2_Component_Width_Mode) == 0x00039C, "Member 'AB_Athena_Glider_Generic_C::VFX2_Component_Width_Mode' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, VFX2_Component_Width) == 0x0003A0, "Member 'AB_Athena_Glider_Generic_C::VFX2_Component_Width' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Add_Skeletal_Mesh_Bits_to_Glider) == 0x0003A4, "Member 'AB_Athena_Glider_Generic_C::Add_Skeletal_Mesh_Bits_to_Glider' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Bits_Skeletal_Mesh) == 0x0003A8, "Member 'AB_Athena_Glider_Generic_C::Bits_Skeletal_Mesh' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Bits_Anim_BP_Class) == 0x0003B0, "Member 'AB_Athena_Glider_Generic_C::Bits_Anim_BP_Class' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Bits_Relative_Location) == 0x0003B8, "Member 'AB_Athena_Glider_Generic_C::Bits_Relative_Location' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Bits_Relative_Rotation) == 0x0003C4, "Member 'AB_Athena_Glider_Generic_C::Bits_Relative_Rotation' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Bits_Relative_Scale) == 0x0003D0, "Member 'AB_Athena_Glider_Generic_C::Bits_Relative_Scale' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Legacy_DoOnce) == 0x0003DC, "Member 'AB_Athena_Glider_Generic_C::Legacy_DoOnce' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Bits) == 0x0003E0, "Member 'AB_Athena_Glider_Generic_C::Bits' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Legacy_Toggle_TrailVFX2_Activation_Order) == 0x0003E8, "Member 'AB_Athena_Glider_Generic_C::Legacy_Toggle_TrailVFX2_Activation_Order' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Legacy_DoOnce_TrailVFXInverted) == 0x0003E9, "Member 'AB_Athena_Glider_Generic_C::Legacy_DoOnce_TrailVFXInverted' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Min_Audio_Voice) == 0x0003EC, "Member 'AB_Athena_Glider_Generic_C::Min_Audio_Voice' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Max_Audio_Voice) == 0x0003F0, "Member 'AB_Athena_Glider_Generic_C::Max_Audio_Voice' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, TrailVFX_Deployed_Activation) == 0x0003F4, "Member 'AB_Athena_Glider_Generic_C::TrailVFX_Deployed_Activation' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, TrailVFX_Component_Socket_Name) == 0x0003F8, "Member 'AB_Athena_Glider_Generic_C::TrailVFX_Component_Socket_Name' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Trail_VFX_Location_Rule) == 0x000400, "Member 'AB_Athena_Glider_Generic_C::Trail_VFX_Location_Rule' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Trail_VFX_Rotation_Rule) == 0x000401, "Member 'AB_Athena_Glider_Generic_C::Trail_VFX_Rotation_Rule' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Trail_VFX_Scale_Rule) == 0x000402, "Member 'AB_Athena_Glider_Generic_C::Trail_VFX_Scale_Rule' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, TrailVFX_Component_Relative_Transform) == 0x000410, "Member 'AB_Athena_Glider_Generic_C::TrailVFX_Component_Relative_Transform' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, TrailVFX2_Deployed_Activation) == 0x000440, "Member 'AB_Athena_Glider_Generic_C::TrailVFX2_Deployed_Activation' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Bits_Override_Materials) == 0x000441, "Member 'AB_Athena_Glider_Generic_C::Bits_Override_Materials' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Bits_Materials) == 0x000448, "Member 'AB_Athena_Glider_Generic_C::Bits_Materials' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Legacy_Not_Deployed_Audio_Voice) == 0x000458, "Member 'AB_Athena_Glider_Generic_C::Legacy_Not_Deployed_Audio_Voice' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Absolute_Movement_Audio) == 0x00045C, "Member 'AB_Athena_Glider_Generic_C::Absolute_Movement_Audio' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Absolute_Movement_FX) == 0x00045D, "Member 'AB_Athena_Glider_Generic_C::Absolute_Movement_FX' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Additional_Condition_for_Movement_Activation) == 0x00045E, "Member 'AB_Athena_Glider_Generic_C::Additional_Condition_for_Movement_Activation' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Parachute_Anim_Instance) == 0x000460, "Member 'AB_Athena_Glider_Generic_C::Parachute_Anim_Instance' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, TrailVFX2_Component_Socket_Name) == 0x000468, "Member 'AB_Athena_Glider_Generic_C::TrailVFX2_Component_Socket_Name' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Trail_VFX2_Location_Rule) == 0x000470, "Member 'AB_Athena_Glider_Generic_C::Trail_VFX2_Location_Rule' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Trail_VFX2_Rotation_Rule) == 0x000471, "Member 'AB_Athena_Glider_Generic_C::Trail_VFX2_Rotation_Rule' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Trail_VFX2_Scale_Rule) == 0x000472, "Member 'AB_Athena_Glider_Generic_C::Trail_VFX2_Scale_Rule' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, TrailVFX2_Component_Relative_Transform) == 0x000480, "Member 'AB_Athena_Glider_Generic_C::TrailVFX2_Component_Relative_Transform' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Auto_Activate_Fix) == 0x0004B0, "Member 'AB_Athena_Glider_Generic_C::Auto_Activate_Fix' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, In_Sound_Mix_Modifier) == 0x0004B8, "Member 'AB_Athena_Glider_Generic_C::In_Sound_Mix_Modifier' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Trail_VFX_Component_Retry_Timer) == 0x0004C0, "Member 'AB_Athena_Glider_Generic_C::Trail_VFX_Component_Retry_Timer' has a wrong offset!");
static_assert(offsetof(AB_Athena_Glider_Generic_C, Trail_VFX2_Component_Retry_Timer) == 0x0004C8, "Member 'AB_Athena_Glider_Generic_C::Trail_VFX2_Component_Retry_Timer' has a wrong offset!");

}

